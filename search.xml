<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数据结构第一章-数据结构和算法</title>
      <link href="/2021/08/11/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84(C%E8%AF%AD%E8%A8%80%E5%BA%94%E8%AF%95%E7%89%88)-%E7%AC%AC%E4%B8%80%E7%AB%A0/"/>
      <url>/2021/08/11/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84(C%E8%AF%AD%E8%A8%80%E5%BA%94%E8%AF%95%E7%89%88)-%E7%AC%AC%E4%B8%80%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h1><ol><li>数据结构是对客观事物的符号表示,如图形、声音等</li><li>数据元素是数据的基本单位</li><li>数据项是构成数据元素的不可分割的最小单位.<br>一个数据元素可由若干个数据项组成,例如,一位学生的信息记录为一个数据元素,它是由学号、姓名、性别等数据项组成。</li><li>数据对象是具有相同性质的数据元素的集合。</li><li>数据结构是相互之间存在一种或多种特定关系的数据元素的集合。<br>数据结构包括三方面的内容：逻辑结构、存储结构和数据的运算<br>数据结构的形式定义为：数据结构是一个二元组<br><code>Data_Structure=(D,S)</code><br>其中：D是数据元素的有限集，S是D上（数据）关系的有限集。</li></ol><p>题1.以下说法正确的是（）。<br>A.数据项是数据的基本单位         B.数据元素是数据的最小单位<br>C.数据结构是带结构的数据项的集合  D.数据元素可由若干数据项组成</p><p>解析:A是最小单位 B是基本单位 C是数据元素的集合</p><p>D正确</p><p>题2.数据的逻辑结构从形式上可用二元组(D,R)表示,其中R是()的有限集</p><p>A.算法  B.数据元素  c.数据项    D.数据关系</p><p>解析:D是数据元素的有限集，S是D上（数据）关系的有限集。</p><p>是数据关系的有限集<br>D正确</p><h2 id="逻辑结构"><a href="#逻辑结构" class="headerlink" title="逻辑结构"></a>逻辑结构</h2><p>逻辑结构是指数据元素之间的逻辑关系,与数据的存储无关,独立于计算机.</p><p>逻辑结构分两种，四类</p><h3 id="线型结构："><a href="#线型结构：" class="headerlink" title="线型结构："></a>线型结构：</h3><p>线性表（一般线性表、栈、队列、串、数组）    一对一关系</p><h3 id="非线性结构"><a href="#非线性结构" class="headerlink" title="非线性结构"></a>非线性结构</h3><p>非线性结构包括：集合、树形结构、图形结构（网状结构） 多对多</p><p><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/shujujiegou/luojijiegou.png"></p><p>题1.以下数据结构中,不是线性结构的是()<br>A.栈    B.队列  C.串.   D.二叉树</p><p>解析:二叉树属于树形结构<br>选D</p><p>题2.根据数据元素之间关系的不同特性,通常由四类基本结构,即:集合、线性结构、树型结构和_____结构。</p><p>解析： 逻辑结构分线性结构和非线性<br>非线性包括：集合、树形结构、图像结构（网状结构）<br>线性结构包括：线性表（一般线性表、栈、队列、串、数组）</p><p>所以填：图形或网状</p><p>选项只有两个空就填 线性 和 非线性 结构。</p><h2 id="存储结构"><a href="#存储结构" class="headerlink" title="存储结构"></a>存储结构</h2><ul><li><p>存储结构（物理结构）是指数据结构在计算机中的表示，它包括数据元素的表示和关系的表示。</p></li><li><p>存储结构包括四种：顺序结构，链式结构,索引存储,散列存储</p></li></ul><ul><li>顺序存储:把逻辑上相邻的元素存储在物理位置上也相邻的存储单元中,元素之间的关系由存储单元的邻接关系来实现.</li><li>链式存储:借助指示元素存储地址的指针来表示元素之间的逻辑关系</li><li>索引存储:在存储元素信息的同时,还建立附加的索引表</li><li>散列存储:根据元素的关键字直接计算出该元素的存储地址,又称哈希(hash)存储</li></ul><ul><li>题1.在顺序存储、链式存储、索引存储、和散列存储这4种存储方式中，最基本、最常用的两种存储结构式_______________和________.</li></ul><p>答案：顺序存储，链式存储</p><ul><li>题2.以下与数据的存储结构无关的术语是（）<br>A.有序表    B.链表  C.顺序队列  D.哈希表</li></ul><p>解析:<br>B属于链式存储,C属于顺序存储,D属于散列存储又称哈希存储<br>A:有序表是指逻辑上有序的一个线性表,仅仅描述元素之间的逻辑关系<br>对它进行存储的时候,既可以用顺序存储也可以用链式存储</p><p>答案:A</p><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><ul><li>算法是对待特定问题求解步骤的一种描述,它是指令的有限序列,其中的每条指令表示一个或多个操作.此外,一个算法还具有下列5个重要特性:</li></ul><ol><li>有穷性。一个算法必须总是在执行有穷步后结束，且每一步都是在有穷时间内完成。</li><li>确定性。算法中每条指令必须有确切的含义，且相同的输入只能得到相同的输出。</li><li>可行性。算法中描述的操作都可以通过已经实现的基本运算执行有限次来实现。</li><li>输入。一个算法有零个或多个输入。</li><li>输出。一个算法有一个或多个输出。</li></ol><ul><li>题1.以下不属于算法特性的是（）<br>A.可行性    B.输入  C.确定型    D.健壮性</li></ul><p>解析:健壮性是设计一个”好”的算法的目标之一</p><p>答案:D</p><ul><li>通常设计一个”好”的算法应考虑达到以下目标:</li></ul><ol><li>正确性.算法应能够正确地求解问题.</li><li>可读性.算法能具有良好的可读性,以帮助人们理解.</li><li>健壮性.输入非法数据时,算法能适当地做出反应或进行处理,而不会莫名其妙的输出结果.</li><li>效率与低存储量需求.效率是指算法执行的时间,存储量需求是指算法执行过程中所需最大存储空间</li></ol><ul><li><p>算法效率的度量是通过时间复杂度和空间复杂度来描述的.</p></li><li><p>一个语句的频度是指该语句在算法中被重复执行的次数</p></li><li><p>算法中所有语句的频度之和记为T(n),它是该算法问题规模n的函数,时间复杂度主要分析T(n)的数量级</p></li><li><p>时间复杂度计算(重要考点)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">加法规则:T(n)=T₁(n)+T₂(n)=O(f(n))+O(g(n))=O(max(f(n),g(n)))</span><br><span class="line">乘法规则:T(n)=T₁(n)×T₂(n)=O(f(n))×O(g(n))=O(f(n)×g(n))</span><br><span class="line">注意:时间复杂度不考虑常数</span><br><span class="line"></span><br><span class="line">常见的渐进时间复杂度为</span><br><span class="line">O(1)&lt;O(㏒₂n)&lt;O(n)&lt;O(n㏒₂n)&lt;O(n²)&lt;O(n³)&lt;O(2ⁿ)&lt;O(n!)&lt;O(nⁿ)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><ul><li>题1.算法分析的目的是()<br>A.找出数据结构的合理性       B.研究算法中的输入和输出<br>C.分析算法的效率以求改进     D.分析算法的易懂性</li></ul><p>答案:C</p><ul><li>题2.若一个算法中的语句频度之和为<code>T(n)=n+4n㏒₂n</code>,则该算法的时间复杂度为_______________.</li></ul><p>解析:<br>第一步:加法规则,保留之间最大的那个,<em>n+4n㏒₂n</em> 先不动<br>第二步:乘法规则:n的数量级就是n,时间复杂度不考虑常数,4去掉,剩下n㏒₂n<br>第三步:<br>根据常见的渐进时间复杂度为<br><code>O(1)&lt;O(㏒₂n)&lt;O(n)&lt;O(n㏒₂n)&lt;O(n²)&lt;O(n³)&lt;O(2ⁿ)&lt;O(n!)&lt;O(nⁿ)</code><br>可得:<code>O(n)&lt;O(n㏒₂n)</code><br>所以把n去掉,所以答案就是<em>O(n㏒₂n)</em></p><p>答案:<br><code>O(n㏒₂n)</code></p><ul><li>注意:做时间复杂度的题型时,不要忘记写O</li></ul><ul><li>题3.下面两段程序的时间复杂度是()<br>(1)                         <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">for(i=2;i&lt;n;++i)</span><br><span class="line">    ++x;</span><br><span class="line">    for(j=1;j&lt;=i-1;++j)</span><br><span class="line">        a[i][j]=x;</span><br><span class="line"></span><br><span class="line">(2)i=1;</span><br><span class="line">    while(i&lt;=n)</span><br><span class="line">        i=i*2;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><p>A.O(n²),O(log₂n)    B.O(n²),O(n²)<br>C.O(n),O(n)         D.O(n),O(log₂n)</p><p>解析:</p><ul><li>做时间复杂度程序题时:只需看基本运算,基本运算就是指执行频度最高的那个语句</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">(1)</span><br><span class="line">a[i][j]=x; 语句执行频度最高,只计算它的频度就可以了</span><br><span class="line"></span><br><span class="line">for(i=2;i&lt;n;++i)  //i从2到n,一共执行了n-1次</span><br><span class="line">for(j=1;j&lt;=i-1;++j) //由上条语句可知i=2,带入循环,j&lt;=1</span><br><span class="line">j&lt;=1,所以j只能为1</span><br><span class="line">所以a[i][j]=x; 只执行了一次</span><br><span class="line">然后++i,i=3</span><br><span class="line">j&lt;=2,所以j可以是1和2</span><br><span class="line">所以a[i][j]=x; 只执行了两次</span><br><span class="line">n-1 i=2 j=1</span><br><span class="line">    i=3 j=1,2</span><br><span class="line">    ...</span><br><span class="line">    i=2 j=1,2,....,n-1</span><br><span class="line"></span><br><span class="line">求频度只需要把j的取值加起来就可以了</span><br><span class="line">需用到数学公式:【（首+尾）*项数】/2</span><br><span class="line">1+2+3+....n-1=(1+n-1)(n-1)/2=n(n-1)/2</span><br><span class="line">求时间复杂度忽略常数,把1/2去掉,变n(n-1),加法规则保留最大值</span><br><span class="line">所以(1)时间复杂度是O(n²)</span><br><span class="line"></span><br><span class="line">(2)</span><br><span class="line">(2)i=1;</span><br><span class="line">    while(i&lt;=n)</span><br><span class="line">        i=i*2;</span><br><span class="line"></span><br><span class="line">i=i*2; 是基本运算</span><br><span class="line">可以设n=50</span><br><span class="line">i=1 i&lt;=50</span><br><span class="line">i=2 i&lt;=50</span><br><span class="line">i=4 i&lt;=50</span><br><span class="line"></span><br><span class="line">由规律可知2ⁿ规律</span><br><span class="line">设执行次数为t,又因为i&lt;=n</span><br><span class="line">2^t&lt;=n</span><br><span class="line">t&lt;=log₂n    //数学公式:a^x=b x=loga(b)</span><br><span class="line"></span><br><span class="line">所以时间复杂度:为O(log₂n)</span><br><span class="line"></span><br><span class="line">所以答案:</span><br><span class="line">A</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构Java应试版 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(C练习)求1到某个数字之间(包括该数字)所有的素数,并将其输出(单函数方法)</title>
      <link href="/2021/07/16/(C%E8%AF%95%E9%A2%98)%E9%83%9D%E6%96%8CC%E8%AF%AD%E8%A8%80%E6%B5%8B%E8%AF%95%E9%A2%98/"/>
      <url>/2021/07/16/(C%E8%AF%95%E9%A2%98)%E9%83%9D%E6%96%8CC%E8%AF%AD%E8%A8%80%E6%B5%8B%E8%AF%95%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>试题视频解析 <a href="https://www.bilibili.com/video/BV1os411h77o?p=180">郝斌C语言p180</a></p><ol><li>什么叫分配内存,什么叫释放内存<br>操作系统把某一块内存空间的使用权利分配给该程序</li></ol><p>操作系统把分配给该程序的内存空间的使用权利收回,该程序就不能够再使用这一块空间,这叫释放内存</p><p>附注:释放内存不是把该内存的内容清零</p><ol start="2"><li>变量为什么必须得初始化<br>不初始化,则变量通常是垃圾值</li></ol><ol start="3"><li>详细说明系统是如何执行: int i =5; 这个语句的<br>1&gt;编译器 软件请求操作系统为i分配存储空间<br>2&gt;操作系统会在内存中寻找一块空闲的区域,把该区域当做i来使用<br>3&gt;编译器会把i和这块空闲区域关联起来,今后对字母i操作就是对这块空闲的区域操作<br>4&gt;把5存储到字母i所关联的内存区域中</li></ol><p>附注:所谓内存区域也就是内存的一块存储单元</p><ol start="4"><li>请详细列出C语言所有的基本类型<br>int<br>long int<br>short int<br>char<br>float<br>double</li></ol><ol start="5"><li>在printf函数中int用%d输出,请问:long int, char, double , float分别用什么输出?</li></ol><p>%ld  %c  %lf  %f</p><ol start="6"><li><p>函数的优点是什么?<br>避免重复性操作(减少代码量)<br>有利于程序的模块化</p></li><li><p>什么是指针,什么是地址,什么是指针变量,三者之间是什么关系?<br>地址是内存单元的编号,指针就是地址,指针和地址是同一个概念<br>指针变量就是存放内存单元编号的变量<br>指针变量和指针是两个完全不同的概念,只不过人们有时候会把指针变量简称为指针</p></li><li><p>请写出静态变量和动态变量的异同<br>相同:都需要分配内存<br>不同点:<br>静态变量是由系统自动分配,自动释放,程序员无法再程序运行的过程中手动分配,也无法在程序运行的过程中手动释放<br>静态变量是在栈中分配的<br>只有函数终止之后,静态变量的存储空间才会被系统自动释放</p></li></ol><p>动态内存是由程序员手动分配,手动释放,程序员可以在程序运行的过程当中手动分配,也可以在程序运行的过程中手动释放<br>动态变量是在堆里面分配的<br>程序员可以在函数执行的过程当中的任何一个时刻手动释放动态变量的空间,不需要等到函数终止时才释放</p><ol start="9"><li><p>C语言中哪些知识点是我们学习的重点,请一一列举出来<br>流程控制 函数 指针 静态内存和动态内存</p></li><li><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">for (1;2;3)</span><br><span class="line">A;</span><br><span class="line">B;</span><br><span class="line"></span><br><span class="line">1&gt; 2成立,会继续执行哪个语句___ A</span><br><span class="line">2&gt; 3执行完毕后,会继续执行哪个语句____ 2</span><br><span class="line">3&gt; A执行完毕后,会继续执行哪个语句____ 3</span><br><span class="line">4&gt; 1总共会执行几次_____ 1</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">for(1;2;3)</span><br><span class="line">    for(4;5;6)</span><br><span class="line">    &#123;</span><br><span class="line">        A;</span><br><span class="line">        B;</span><br><span class="line">    &#125;</span><br><span class="line">    C;</span><br></pre></td></tr></table></figure><p>1&gt; 6执行完毕后,会继续执行哪个语句____5<br>2&gt; 5成立,会继续执行哪个语句______ A<br>3&gt; 5不成立,会继续执行哪个语句____  3<br>4&gt; 2不成立,会继续执行哪个语句_____ C<br>5&gt; 2成立,会继续执行哪个语句___   4<br>6&gt; A和B语句是否一定会被执行_____ 不一定<br>7&gt; C语句是否一定会执行______ 一定</p></li><li><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">for(1;2;3)</span><br><span class="line">&#123;</span><br><span class="line">    while(4)</span><br><span class="line">        5;</span><br><span class="line">        6;</span><br><span class="line">    if(7)</span><br><span class="line">        8;</span><br><span class="line">        9;</span><br><span class="line">&#125;</span><br><span class="line">10;</span><br></pre></td></tr></table></figure></li></ol><p>1&gt; 5执行完毕后,会继续执行哪个语句___4<br>2&gt; 如果8是break语句,则8执行完毕之后会继续执行哪个语句___10 break终止的是包裹它最近的循环(要包裹break语句在内的循环,而不是while)<br>3&gt; 如果7不成立,会继续执行哪个语句___9</p><ol start="13"><li>判断下列程序语法上是否有错误,正确的打√,错误的打X,并说明出错的原因:<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">A: int *p; *p=10;  ×  *p表示的是以p的内容为地址的变量,p的内容现在是垃圾值, 所以是把10赋给了一个不知道的单元</span><br><span class="line">B: char*p; char ch = A; p = &amp;ch; x &#x27;A&#x27;单个字符必须用单引号括起来</span><br><span class="line">C: int i,j; i=j=0; int *p; p=&amp;i; √  i=j=k=5 是从右向左执行的</span><br><span class="line">                                    k=5 然后 5赋给j 然后i=5</span><br><span class="line">D:int *P; int **q; q=&amp;i;  √  </span><br><span class="line">int** q,能存放int*类型地址</span><br><span class="line">int* p,表示p只能存放int类型地址</span><br><span class="line">p是int*类型,则&amp;p就是int**类型,q也是int**类型,一致,所以正确</span><br><span class="line"></span><br><span class="line">E: int* p;int i=5; p =&amp;i; *p=10;  √ </span><br><span class="line">p把整型地址放到i里面 *p就是i,所以正确</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><p>0:49:13</p>]]></content>
      
      
      <categories>
          
          <category> 试题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>经典指针程序-互换两个数字</title>
      <link href="/2021/07/13/%E7%BB%8F%E5%85%B8%E6%8C%87%E9%92%88%E7%A8%8B%E5%BA%8F-%E4%BA%92%E6%8D%A2%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%AD%97/"/>
      <url>/2021/07/13/%E7%BB%8F%E5%85%B8%E6%8C%87%E9%92%88%E7%A8%8B%E5%BA%8F-%E4%BA%92%E6%8D%A2%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%AD%97/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">huhuan03</span><span class="params">(<span class="keyword">int</span>*, <span class="keyword">int</span>*)</span></span>;<span class="comment">//声明不用写形参</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">huhuan01</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">huhuan02</span><span class="params">(<span class="keyword">int</span>*, <span class="keyword">int</span>*)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">huhuan03(&amp;a, &amp;b); <span class="comment">//huhuan02(*p, *q); 错误 huhuan02(*a, *b);也是错误的</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a = %d, b = %d\n&quot;</span>, a, b);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//可以完成互换功能</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">huhuan03</span><span class="params">(<span class="keyword">int</span>* p, <span class="keyword">int</span>* q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span>  t; <span class="comment">//如果要互换*p和*q的值,则t必须定义成int,不能定义成int *,否则语法出错.</span></span><br><span class="line">t = *p;<span class="comment">//p是int *, *p是int</span></span><br><span class="line">*p = *q;</span><br><span class="line">*q = t;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//不能完成互换功能</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">huhuan01</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">t = a;</span><br><span class="line">a = b;</span><br><span class="line">b = t;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//不能完成互换功能</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">huhuan02</span><span class="params">(<span class="keyword">int</span> * p, <span class="keyword">int</span> * q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> * t; <span class="comment">//如果要互换p和q的值,则t必须是int *,不能是int.类型要一致否则出错</span></span><br><span class="line">t = p;</span><br><span class="line">p = q;</span><br><span class="line">q = t;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言学习笔记05-枚举~结局</title>
      <link href="/2021/07/12/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B005/"/>
      <url>/2021/07/12/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B005/</url>
      
        <content type="html"><![CDATA[<h1 id="枚举-理解"><a href="#枚举-理解" class="headerlink" title="枚举(理解)"></a>枚举(理解)</h1><h2 id="什么是枚举"><a href="#什么是枚举" class="headerlink" title="什么是枚举"></a>什么是枚举</h2><p>把一个事物所有可能的取值一一列举出来</p><h2 id="怎样使用枚举"><a href="#怎样使用枚举" class="headerlink" title="怎样使用枚举"></a>怎样使用枚举</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">WeekDay</span> //<span class="title">enum</span>是枚举的意思.跟结构体一样,只定义了一个数据类型,并没有定义变量,该数据类型的名字是 <span class="title">enum</span> <span class="title">WeekDay</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">MonDay, Tueday, WednesDay, TursDay, FriDay, SaturDay, Sunday</span><br><span class="line">&#125;; <span class="comment">//别忘记;号</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//int day; //day定义成int类型不太合适,取值范围太大</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">WeekDay</span> <span class="title">day</span> =</span> SaturDay;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, day);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="枚举的优缺点"><a href="#枚举的优缺点" class="headerlink" title="枚举的优缺点"></a>枚举的优缺点</h2><p>代码更安全<br>书写麻烦</p><h1 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符:"></a>位运算符:</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&amp;    按位与</span><br><span class="line">&amp;&amp; 逻辑与 也叫并且</span><br><span class="line">&amp;&amp;与&amp; 的含义完全不同</span><br><span class="line"></span><br><span class="line">&amp;:</span><br><span class="line">规则:只有对应的两个二进位都为1时，结果位才为1</span><br><span class="line">1&amp;1=1</span><br><span class="line">1&amp;0=0</span><br><span class="line">0&amp;1=0</span><br><span class="line">0&amp;0=0 </span><br><span class="line"></span><br><span class="line">21&amp;7=5 //0001 0101 &amp; 0000 0111 = 0000 0101 = 5</span><br><span class="line"></span><br><span class="line">&amp;&amp;:</span><br><span class="line">k = i &amp;&amp; j; //k的值只能是1或0,因为&amp;&amp;是逻辑运算符,逻辑运算符的结果只能是真或假,在C中,真用1表示,假用0表示</span><br><span class="line">printf(&quot;%d\n&quot;, k);</span><br><span class="line"></span><br><span class="line">|  按位或</span><br><span class="line">||逻辑或</span><br><span class="line">|按位或</span><br><span class="line"></span><br><span class="line">规则:</span><br><span class="line">1|0 = 1</span><br><span class="line">1|1 = 1</span><br><span class="line">0|1 = 1</span><br><span class="line">0|0 = 0</span><br><span class="line"></span><br><span class="line">~  按位取反</span><br><span class="line">~i就是把i变量所有的二进制位取反</span><br><span class="line"></span><br><span class="line">^ 按位异或</span><br><span class="line">相同为零</span><br><span class="line">不同为1</span><br><span class="line">1^0 = 1</span><br><span class="line">0^1 = 1</span><br><span class="line">1^1 = 0</span><br><span class="line">0^0 = 0</span><br><span class="line"></span><br><span class="line">&lt;&lt; 按位左移 (重要)</span><br><span class="line">i&lt;&lt;3  表示把i的所有二进制位左移3位,右边补0</span><br><span class="line">左移n位相当于乘以2的n次方</span><br><span class="line"></span><br><span class="line">考试题目:</span><br><span class="line">A: i = i*8;</span><br><span class="line">B: i = i&lt;&lt;3;</span><br><span class="line"></span><br><span class="line">请问上述两个语句,哪个语句执行的速度快</span><br><span class="line">答案:B快</span><br><span class="line"></span><br><span class="line">&gt;&gt; 按位右移</span><br><span class="line">i&gt;&gt;3 表示把i的所有二进制位右移3位,左边一般是0,根据最高位补或者全部补0.</span><br><span class="line">右移n位相当于除以2的n次方,前提是数据不能丢失</span><br><span class="line"></span><br><span class="line">位运算符的现实意义:通过位运算符我们可以对数据的操作精确到每一位</span><br></pre></td></tr></table></figure><h2 id="补码-次等重要"><a href="#补码-次等重要" class="headerlink" title="补码(次等重要)"></a>补码(次等重要)</h2><h3 id="原码"><a href="#原码" class="headerlink" title="原码"></a>原码</h3><p>也叫 符号-绝对值码<br>最高位0表示正,1表示负,其余二进制位是该数字的绝对值的二进制位</p><p>原码简单易懂,加减运算复杂<br>存在加减乘除四种运算,增加了CPU的复杂度<br>零的表示不唯一</p><h3 id="反码"><a href="#反码" class="headerlink" title="反码"></a>反码</h3><p>反码运算不便,也没有在计算机中应用</p><h3 id="移码"><a href="#移码" class="headerlink" title="移码"></a>移码</h3><p>移码表示数值平移n位,n称为移码量<br>移码主要用于浮点数的阶码的存储</p><h3 id="补码-重点-解决整数的存储"><a href="#补码-重点-解决整数的存储" class="headerlink" title="补码(重点):解决整数的存储"></a>补码(重点):解决整数的存储</h3><h4 id="已知十进制求二进制"><a href="#已知十进制求二进制" class="headerlink" title="已知十进制求二进制"></a>已知十进制求二进制</h4><h5 id="求正整数的二进制"><a href="#求正整数的二进制" class="headerlink" title="求正整数的二进制"></a>求正整数的二进制</h5><p>除2取余,直至商为零,余数倒序排列</p><h5 id="求负整数的二进制"><a href="#求负整数的二进制" class="headerlink" title="求负整数的二进制"></a>求负整数的二进制</h5><p>先求与该负数相对应的正整数的二进制代码,然后将所有位取反,末尾加1,不够位数时,左边补1</p><p><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/html-illustration/buma01.png"></p><h5 id="零转二进制"><a href="#零转二进制" class="headerlink" title="零转二进制"></a>零转二进制</h5><p>全是零</p><h4 id="已知二进制转十进制"><a href="#已知二进制转十进制" class="headerlink" title="已知二进制转十进制"></a>已知二进制转十进制</h4><ul><li><p>如果首位是0,则表明是正整数,按普通方法来求</p></li><li><p>如果首位是1,则表明是负整数<br>将所有位取反,末尾加1,所得数字就是该负数的绝对值</p></li></ul><p><em>为什么负整数位数不够需要前面补1?</em></p><p>当正整数:比如十进制中的1,用二进制表示01,当二进制转十进制的时候,你只需要输入01,系统会自动在01前头补30个0来凑够32位.</p><p>当你是十进制中的-1时,用二进制表示的时候,先取十进制-1的绝对值1的二进制,这时候要注意,系统需要的是32位.你必须手动在前头补30个1,否则系统会自动给你补30个0,导致二进制的11被认为是正整数3,而不是-1</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0xFFFFFFEF</span>;<span class="comment">//FFFF是两个字节的16进制数,表示2的16次方,系统需要凑够32位.所以负数前面有多个F</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">在VS中的输出结果是:</span><br><span class="line"><span class="number">-17</span></span><br></pre></td></tr></table></figure><p>比如负整数1001010忽略前面补位,化为十进制<br>取反:0110101<br>末尾加1: 0110110<br>2的5次方+2的4次方+2的2次方+2的1次方=54<br>因为计算机看首位判断正负,1001010前面是1,所以为负<br>所以结果为-54</p><ul><li>如果全是零,则对应的十进制数字就是零</li></ul><p>学习目标:<br>在Vc++6.0中一个int类型的变量所能存储的数字的范围是多少<br>int类型变量所能存储的最大整数十六进制最大的整数是:7FFFFFFF<br>int类型变量所能存储的绝对值最大的负整数用十六进制表示是:80000000</p><p>绝对值最小负数的二进制代码是多少<br>最大正数的二进制代码是多少<br>已知一个整数的二进制代码求出原始的数字<br>数字超过最大正数会怎么样<br>不同类型数据的相互转化</p><p>最重要是把这张图学明白<br><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/html-illustration/buma02.png"></p><h2 id="进制转换-最重要"><a href="#进制转换-最重要" class="headerlink" title="进制转换(最重要)"></a>进制转换(最重要)</h2><p>生活中遇到进制的例子</p><ul><li>一周一天: 七进制</li><li>一年十二个月: 十二进制</li><li>一小时六十分: 六十进制</li><li>电脑中的数据: 二进制</li></ul><p>预备知识:<br>小数除以大数,则商为零,余数是小数本身</p><p>如:<br>1/2=0 余数1<br>2/2=1 余数0<br>3/2=1 余数1</p><h3 id="十进制转r进制"><a href="#十进制转r进制" class="headerlink" title="十进制转r进制:"></a>十进制转r进制:</h3><p>总结:<br>方法:除r取余,直至商0,余数倒序排列<br><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/html-illustration/jinzhi01.png"></p><p>注意:不要用传统除法,用短除法<br><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/html-illustration/jinzhi02.png"></p><p>例十进制1000转化成16进制</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i =<span class="number">1000</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%#X&quot;</span>, i);<span class="comment">//%#x比%x更好,因为在前面加上OX提示16进制,比3E8更明显</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="r进制转为十进制"><a href="#r进制转为十进制" class="headerlink" title="r进制转为十进制"></a>r进制转为十进制</h3><p><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/html-illustration/jinzhi03.png"></p><p><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/html-illustration/jinzhi04.png"></p><h3 id="二进制与十六进制的转化"><a href="#二进制与十六进制的转化" class="headerlink" title="二进制与十六进制的转化"></a>二进制与十六进制的转化</h3><p>因为16是2的4次方,所以转化成16进制需要4位,不够补0<br><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/html-illustration/jinzhi05.png"></p><h3 id="十六进制与二进制的转化"><a href="#十六进制与二进制的转化" class="headerlink" title="十六进制与二进制的转化"></a>十六进制与二进制的转化</h3><p><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/html-illustration/jinzhi06.png"></p><h3 id="二进制与八进制相互转化"><a href="#二进制与八进制相互转化" class="headerlink" title="二进制与八进制相互转化"></a>二进制与八进制相互转化</h3><p>因为8是2的3次方,所以需要3位,不够补0<br><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/html-illustration/jinzhi07.png"></p><p><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/html-illustration/jinzhi08.png"></p><h3 id="十六进制与八进制相互转化"><a href="#十六进制与八进制相互转化" class="headerlink" title="十六进制与八进制相互转化"></a>十六进制与八进制相互转化</h3><p>不存在十六进制与八进制的直接相互转化,都是以二进制我中间进制来进行转化的</p><h2 id="二进制全部位零的含义-–00000000000000的含义"><a href="#二进制全部位零的含义-–00000000000000的含义" class="headerlink" title="二进制全部位零的含义 –00000000000000的含义"></a>二进制全部位零的含义 –00000000000000的含义</h2><ol><li>数值零</li><li>字符串结束标识符’\0’</li><li>空指针NULL<br>NULL本质也是零,而这个零不代表数字零,而表示的是内存单元的编号零</li></ol><p>我们计算机规定了,以零为编号的存储单元的内容不可读,不可写</p><h2 id="字符串的处理-了解"><a href="#字符串的处理-了解" class="headerlink" title="字符串的处理(了解)"></a>字符串的处理(了解)</h2><h1 id="链表-连结C语言和数据结构的知识"><a href="#链表-连结C语言和数据结构的知识" class="headerlink" title="链表:连结C语言和数据结构的知识"></a>链表:连结C语言和数据结构的知识</h1><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><p>通俗定义:解题的方法和步骤</p><p>狭义定义:对存储数据的操作<br>对不同的存储结构,要完成某一个功能所执行的操作是不一样的<br>比如:<br>要输出数组中所有的元素的操作和<br>要输出链表中所有元素的操作肯定是不一样的</p><p>这说明:<br><em>算法是依附于存储结构的</em><br><em>不同的存储结构,所执行的算法是不一样的</em></p><p>广义定义:广义的算法也叫泛型:无论数据是如何存储的,对该数据的操作都是一样的</p><p>我们至少可以通过两种结构来存储数据:<br>数组:<br>优点:存取速度快<br>缺点:插入和删除元素的效率很低</p><p>链表:</p><p>专业术语:<br>头结点<br>头结点的数据类型和首节点的类型是一模一样的<br>头结点是首节点前面的那个节点<br>头结点并不存放有效数据<br>设置头结点的目的是为了方便对链表的操作</p><p>头指针<br>存放头结点地址的指针变量</p><p>首节点<br>存放第一个有效数据的节点</p><p>尾节点<br>存放最后一个有效数据的节点</p><p>确定一个链表需要一个参数:头指针</p><p>链表的优缺点:<br>优点:插入删除元素效率高<br>     不需要一个连续的很大的内存</p><p>缺点:查找某个位置的元素效率低</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义了一个链表节点的数据类型</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> data;<span class="comment">//数字域</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">pNext</span>;</span> <span class="comment">//指针域</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数声明</span></span><br><span class="line"><span class="function">struct Node* <span class="title">CreateList</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TraverseList</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">pHead</span>;</span> <span class="comment">//pHead用来存放链表头结点的地址</span></span><br><span class="line"></span><br><span class="line">pHead = CreateList(); <span class="comment">//createlise()功能:创建一个非循环单链表,并将该链表头结点的地址赋给了pHead</span></span><br><span class="line">TraverseList(pHead);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>对链表操作(遍历)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">traverse_list</span><span class="params">(struct Node * pHead)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> * <span class="title">p</span> =</span> pHead-&gt;pNext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">NULL</span> != p)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, p-&gt;data);</span><br><span class="line">p = p-&gt;pNext;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="文件的输入和输出"><a href="#文件的输入和输出" class="headerlink" title="文件的输入和输出"></a>文件的输入和输出</h1><h2 id="文件是什么"><a href="#文件是什么" class="headerlink" title="文件是什么"></a>文件是什么</h2><ul><li><p>所谓”文件”是指一组相关数据的有序集合.这个数据集有一个名称,叫做文件名.实际上在前面的各章我们已经多次使用了文件,例如原程序文件(.c),目标文件(.obj),可执行文件(.exe),库文件(头文件等)</p></li><li><p>文件通常是驻留在外部介质(如磁盘等)上的,在使用时才调入内存中来.<br>从不同的角度可对文件作不同的分类.从用户的角度看,文件可以分为普通文件和设备文件两种.</p></li></ul><p>操作系统是以<em>文件</em>为单位对数据进行管理的</p><p><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/html-illustration/wenjian01.png"></p><h2 id="文件的分类"><a href="#文件的分类" class="headerlink" title="文件的分类"></a>文件的分类</h2><h3 id="从用户观点"><a href="#从用户观点" class="headerlink" title="从用户观点:"></a>从用户观点:</h3><ul><li>特殊文件(标准输入输出文件或标准设备文件)</li><li>普通文件(磁盘文件)</li></ul><h3 id="从操作系统的角度看"><a href="#从操作系统的角度看" class="headerlink" title="从操作系统的角度看"></a>从操作系统的角度看</h3><p>每一个与主机相连的输入,输出设备看作是一个文件</p><p>例:<br>输入文件:终端键盘    输出文件:显示屏和打印机</p><h3 id="按数据的组织形式"><a href="#按数据的组织形式" class="headerlink" title="按数据的组织形式:"></a>按数据的组织形式:</h3><ul><li>ASCII文件(文本文件):每一个字节放一个ASCII代码</li><li>二进制文件:把内存中的数据按其在内存中的存储形式原样输出到磁盘存放</li></ul><p>例如整数10000D(D表示十进制输出)在内存中的存储形式以及分别按ASCII码形式和二进制形式输出如下图所示:<br><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/Cstudy/wenjian02.png"></p><h4 id="ASCII文件和二进制文件的比较"><a href="#ASCII文件和二进制文件的比较" class="headerlink" title="ASCII文件和二进制文件的比较:"></a>ASCII文件和二进制文件的比较:</h4><ul><li><p>ASCII文件便于对字符进行逐个处理,也便于输出字符.但一般所占存储空间较多,而且要花费转换时间</p></li><li><p>二进制文件可以节省外存空间和转换时间,但一个字节并不对应一个字符,不能直接输出字符形式.</p></li></ul><p>一般中间结果数据需要暂时保存在外存上,以后又需要输入内存的,常用二进制文件保存.</p><h2 id="C语言对文件的处理方法"><a href="#C语言对文件的处理方法" class="headerlink" title="C语言对文件的处理方法"></a>C语言对文件的处理方法</h2><ul><li>缓冲文件系统:系统自动地在内存区为每一个正在使用的文件开辟一个缓冲区.用缓冲文件系统进行的输入输出又称为高级磁盘输入输出.</li></ul><ul><li>非缓冲文件系统:系统不自动开辟确定大小的缓冲区,而由程序为每个文件设定缓冲区.用非缓冲文件系统进行输入输出又称为低级输入输出系统.</li></ul><h2 id="课外知识"><a href="#课外知识" class="headerlink" title="课外知识"></a>课外知识</h2><ul><li>在UNIX系统下,用缓冲文件系统来处理文本文件,用非缓冲文件系统来处理二进制文件</li></ul><ul><li>ANSIC标准(国际C语言标准)只采用缓冲文件系统来处理文本文件和二进制文件</li></ul><ul><li>C语言中对文件的读写都是用库函数来实现</li></ul><h1 id="文件的打开与关闭"><a href="#文件的打开与关闭" class="headerlink" title="文件的打开与关闭"></a>文件的打开与关闭</h1><p>文件型指针变量:<br>FILE *fp;</p><p> fp是一个指向FILE类型结构体的指针变量</p><p> 我们使fp指向某一个文件的结构体变量,从而通过该结构体变量中的文件信息,能够访问该文件.</p><p> 如果有n个文件,一般应设n个指针变量,使它们分别指向n个文件,以实现对文件的访问.</p><p>FILE类型的数组:<br><code>FILE f[5];</code> 定义了一个结构体数组f,它有5个元素,可以用来存放5个文件的信息.</p><h2 id="文件的打开"><a href="#文件的打开" class="headerlink" title="文件的打开"></a>文件的打开</h2><p>文件的打开(fopen函数)</p><p>函数调用:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FILE *fp;</span><br><span class="line">fp = fopen //(文件名,使用文件方式);</span><br></pre></td></tr></table></figure><p>注意:<br>需要打开的文件名,也就是准备访问的文件的名字<br>使用文件的方式(“读”还是”写”等);<br>让哪一个指针变量指向被打开的文件</p><h2 id="文件的使用方式"><a href="#文件的使用方式" class="headerlink" title="文件的使用方式"></a>文件的使用方式</h2><p><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/Cstudy/wenjian03.png"></p><p>一般常用的:<br>“r” 只读<br>“w” 只写</p><h3 id="对于文件使用方式有以下几点说明"><a href="#对于文件使用方式有以下几点说明" class="headerlink" title="对于文件使用方式有以下几点说明"></a>对于文件使用方式有以下几点说明</h3><ul><li><p>凡用”r”打开一个文件时,该文件必须已经存在,且只能从该文件读出</p></li><li><p>用”w”打开的文件只能向该文件写入.若打开的文件不存在,则以指定的文件名建立该文件,若打开的文件已经存在,则将该文件删去,重建一个新文件</p></li><li><p>若要向一个已存在的文件追加新的信息,只能用”a”方式打开文件.但此时该文件必须是存在的,否则将会出错.</p></li><li><p>在打开一个文件时,如果出错,fopen将返回一个空指针NULL</p></li><li><p>在程序中可以用这一信息来判别是否完成打开文件的工作,并作相应的处理.</p></li><li><p>把一个文本文件读入内存时,要将ASCII码转换成二进制码,而把文件以文本方式写入磁盘时,也要把二进制码转换成ASCII码,因此文本文件的读写要花费较多的转换时间.对二进制文件的读写不存在这种转换.</p></li></ul><p>文件打开示例:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FILE* fp;</span><br><span class="line"><span class="keyword">if</span> (!(fp = fopen(<span class="string">&quot;D:\\geyouyang.txt&quot;</span>, <span class="string">&quot;w&quot;</span>))) <span class="comment">//注意要双&quot;\&quot;</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;不能够打开D:\\geyouyang.txt\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;成功打开!\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="文件的关闭-fclose函数"><a href="#文件的关闭-fclose函数" class="headerlink" title="文件的关闭(fclose函数)"></a>文件的关闭(fclose函数)</h2><p>函数调用:<br>fclose (文件指针);</p><p>函数功能:<br>使文件指针变量不指向该文件,也就是文件指针变量与文件”脱钩”,以后不能再通过该指针对原来与其相联系的文件进行读写操作.</p><p>返回值:<br>关闭成功返回值为0;否则返回EOF(-1)</p><h2 id="文件的读写"><a href="#文件的读写" class="headerlink" title="文件的读写"></a>文件的读写</h2><ul><li>对文件的读和写是最常用的文件操作.<br>在C语言中提供了多种文件读写的函数:</li></ul><ul><li>字符读写函数:  fgetc和fputc</li><li>字符串读写函数: fgets 和 fputs</li></ul><ul><li>数据块读写函数: fread 和 fwrite</li></ul><ul><li>格式化读写函数: fscanf和 fprintf</li></ul><p>使用以上函数都要求包含头文件stdio.h</p><h3 id="字符读写函数-fgetc和fputc"><a href="#字符读写函数-fgetc和fputc" class="headerlink" title="字符读写函数: fgetc和fputc"></a>字符读写函数: fgetc和fputc</h3><p>一,字符输入输出函数(fputc()和fgetc())</p><p>fputc()函数调用:</p><p>fputc(ch’fp);</p><p>函数功能:<br>将字符 (ch的值)输出到fp所指向的文件中去</p><h4 id="对于fputc函数的使用要说明几点"><a href="#对于fputc函数的使用要说明几点" class="headerlink" title="对于fputc函数的使用要说明几点"></a>对于fputc函数的使用要说明几点</h4><ul><li><p>用写或读写方式打开一个已经存在的文件时将清除原有的文件内容,写入字符从文件首开始.如需保留原有文件内容,希望写入的字符以文件末开始存放,必须以追加方式打开文件.被写入的文件若不存在,则创建该文件.</p></li><li><p>每写入一个字符,文件内部位置指针向后移动一个字节.</p></li><li><p>fputc函数有一个返回值,如写入成功则返回写入的字符,否则返回一个EOF.可用此来判断写入是否成功.</p></li></ul><p>文件写入例子:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FILE* fp;</span><br><span class="line"><span class="keyword">char</span> ch, filename[<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入您需要写入的文件名&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, filename);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!(fp = fopen(filename, <span class="string">&quot;wt+&quot;</span>)))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;无法打开文件\n&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>); <span class="comment">//终止程序 //需要先stdlib.h才能使用</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入你需要写入的句子: &quot;</span>);</span><br><span class="line">ch = getchar();</span><br><span class="line">ch = getchar();</span><br><span class="line"><span class="keyword">while</span> (ch != EOF) <span class="comment">//ctrl + z</span></span><br><span class="line">&#123;</span><br><span class="line">fputc(ch, fp);</span><br><span class="line">ch = getchar();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fclose(fp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">在VS中的输出结果是:</span></span><br><span class="line"><span class="comment">请输入您需要写入的文件名123</span></span><br><span class="line"><span class="comment">请输入你需要写入的句子: 567</span></span><br><span class="line"><span class="comment">567</span></span><br><span class="line"><span class="comment">^Z</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">D:\studyC\文件写入\x64\Debug\文件写入.exe (进程 3064)已退出，代码为 0。</span></span><br><span class="line"><span class="comment">按任意键关闭此窗口. . .</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="fgetc-函数调用"><a href="#fgetc-函数调用" class="headerlink" title="fgetc()函数调用:"></a>fgetc()函数调用:</h3><p>ch=fgetc(fp);</p><p>函数功能:<br>其意义是从打开的文件fp中读取一个字符并送入ch中</p><h4 id="fgetc-函数使用说明"><a href="#fgetc-函数使用说明" class="headerlink" title="fgetc()函数使用说明"></a>fgetc()函数使用说明</h4><ul><li>在fgetc函数调用中,读取的文件必须是以读或读写方式打开的</li><li>当文件内部有一个位置指针.用来指向文件的当前读写字节</li><li>在文件打开时,该指针总是指向文件的第一个字节.使用fgetc函数后,该位置指针将向后移动一个字节.因此可连续多次使用fgetc函数,读取多个字符</li><li>应注意文件指针和文件内部的位置指针不是一回事</li><li>文件指针是指向整个文件的,需在程序中定义说明,只要不重新赋值,文件指针的值是不变的.</li><li>文件内部的位置指针用以指示文件内部的当前读写位置,每读写一次,该指针均向后移动,它不需在程序中定义说明,而是由系统自动设置的.</li></ul><h4 id="补充-从一个文本文件顺序读入字符并在屏幕上显示出来"><a href="#补充-从一个文本文件顺序读入字符并在屏幕上显示出来" class="headerlink" title="补充:从一个文本文件顺序读入字符并在屏幕上显示出来:"></a>补充:从一个文本文件顺序读入字符并在屏幕上显示出来:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ch = fgetc (fp);</span><br><span class="line">while(ch! = EOF)</span><br><span class="line">&#123;</span><br><span class="line">putchar(ch);</span><br><span class="line">ch = fgetc(fp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意:EOF不是可输出字符,因此不能在屏幕上显示.由于字符的ASCII码不可能出现-1,因此EOF定义为-1是合适的,当读入的字符值等于-1时,表示读入的已不是正常的字符而是文件结束符.</p><h4 id="补充-从一个二进制文件顺序读入字符"><a href="#补充-从一个二进制文件顺序读入字符" class="headerlink" title="补充:从一个二进制文件顺序读入字符:"></a>补充:从一个二进制文件顺序读入字符:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">while (!feof(fp)) //eof=end of file文件结束意思</span><br><span class="line">&#123;</span><br><span class="line">ch = fgetc(fp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意:ANSIC提供一个feof()函数来判断文件是否真的结束.如果是文件结束,函数feof(fp)的值为1(真);否则为0(假).以上也适用于文本文件的读取</p>]]></content>
      
      
      <categories>
          
          <category> C语言基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何看懂程序举例02-斐波拉契序列</title>
      <link href="/2021/07/11/%E5%A6%82%E4%BD%95%E7%9C%8B%E6%87%82%E7%A8%8B%E5%BA%8F%E4%B8%BE%E4%BE%8B02-%E6%96%90%E6%B3%A2%E6%8B%89%E5%A5%91%E5%BA%8F%E5%88%97/"/>
      <url>/2021/07/11/%E5%A6%82%E4%BD%95%E7%9C%8B%E6%87%82%E7%A8%8B%E5%BA%8F%E4%B8%BE%E4%BE%8B02-%E6%96%90%E6%B3%A2%E6%8B%89%E5%A5%91%E5%BA%8F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">斐波拉契序列</span></span><br><span class="line"><span class="comment">1 2 3 5 8 13 21 34</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;<span class="comment">//求第n项</span></span><br><span class="line"><span class="keyword">int</span> f1, f2, f3;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">f1 = <span class="number">1</span>;</span><br><span class="line">f2 = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入您需求项的序列: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="number">1</span> == n)</span><br><span class="line">&#123;</span><br><span class="line">f3 = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">2</span> == n)</span><br><span class="line">&#123;</span><br><span class="line">f3 = <span class="number">2</span>;</span><br><span class="line">&#125;<span class="comment">//观察斐波拉契序列</span></span><br><span class="line"><span class="comment">//只有第一项和第二项是1和2,第三项开始是前两项相加</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">3</span>; i &lt;= n; ++i)</span><br><span class="line">&#123;</span><br><span class="line">f3 = f1 + f2;</span><br><span class="line">f1 = f2;</span><br><span class="line">f2 = f3;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, f3);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">在VS中的输出结果是:</span><br><span class="line">请输入您需求项的序列: <span class="number">6</span></span><br><span class="line"><span class="number">13</span></span><br></pre></td></tr></table></figure><h1 id="看懂程序-试数"><a href="#看懂程序-试数" class="headerlink" title="看懂程序-试数"></a>看懂程序-试数</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1&gt; i=3 3&lt;=6 成立</span><br><span class="line">f3=1+2=3f1=f2=2 f2=f3=3 ++i i=4</span><br><span class="line">2&gt; i=4 4&lt;=6 成立</span><br><span class="line">f3=2+3=5f1=3 f2=5 ++i i=5</span><br><span class="line">3&gt; i=5 5&lt;=6 成立</span><br><span class="line">f3=3+5=8f1=5 f2=8 ++i i=6</span><br><span class="line">4&gt; i=6 6&lt;=6 成立</span><br><span class="line">f3=5+8=13 f1=8 f2=13 ++i i=7</span><br><span class="line">5&gt; i=7 7&lt;=6 不成立</span><br><span class="line"></span><br><span class="line">输出f3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何看懂程序举例01-用while判断是否是回文数</title>
      <link href="/2021/07/11/%E5%A6%82%E4%BD%95%E7%9C%8B%E6%87%82%E7%A8%8B%E5%BA%8F%E4%B8%BE%E4%BE%8B01-%E7%94%A8while%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E6%98%AF%E5%9B%9E%E6%96%87%E6%95%B0/"/>
      <url>/2021/07/11/%E5%A6%82%E4%BD%95%E7%9C%8B%E6%87%82%E7%A8%8B%E5%BA%8F%E4%B8%BE%E4%BE%8B01-%E7%94%A8while%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E6%98%AF%E5%9B%9E%E6%96%87%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">功能:用while判断是否回文数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> val; <span class="comment">//存放待判断的数字</span></span><br><span class="line"><span class="keyword">int</span> m;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入您需要判断的数字:  &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;val);</span><br><span class="line"></span><br><span class="line">m = val;</span><br><span class="line"><span class="keyword">while</span> (m)</span><br><span class="line">&#123;</span><br><span class="line">sum = sum * <span class="number">10</span> + m % <span class="number">10</span>;</span><br><span class="line">m /= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (sum == val)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Yes!\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;No!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">在VS中的输出结果是:</span><br><span class="line">请输入您需要判断的数字:  <span class="number">12321</span></span><br><span class="line">Yes!</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="如何看懂程序"><a href="#如何看懂程序" class="headerlink" title="如何看懂程序"></a>如何看懂程序</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">//像计算机一样试数</span><br><span class="line"></span><br><span class="line">1&gt; m=1234 成立</span><br><span class="line">    sum=0*10+1234%10=4</span><br><span class="line">    m=m/10=123;</span><br><span class="line">2&gt; m=123 成立</span><br><span class="line">    sum=4*10+123%10=43</span><br><span class="line">    m=123/10=12</span><br><span class="line">3&gt; m=12 成立</span><br><span class="line">    sum=43*10+12%10=432</span><br><span class="line">    m=12/10=1</span><br><span class="line">4&gt; m=1 成立</span><br><span class="line">    sum=432*10+1%10=4321</span><br><span class="line">5&gt; m=0 不成立</span><br><span class="line"></span><br><span class="line">最终sum = 4321</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言学习笔记04-结构体</title>
      <link href="/2021/07/07/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B004/"/>
      <url>/2021/07/07/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B004/</url>
      
        <content type="html"><![CDATA[<h1 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h1><h2 id="为什么需要结构体"><a href="#为什么需要结构体" class="headerlink" title="为什么需要结构体"></a>为什么需要结构体</h2><p> 为了表示一些复杂的事物,而普通的基本类型无法满足实际要求</p><h2 id="什么叫结构体"><a href="#什么叫结构体" class="headerlink" title="什么叫结构体"></a>什么叫结构体</h2><p> 把一些基本类型数据组合在一起形成一个新的符合数据类型,这个叫做结构体</p><h2 id="如何定义结构体"><a href="#如何定义结构体" class="headerlink" title="如何定义结构体"></a>如何定义结构体</h2><p> 有三种,第一种掌握,后两种不要求掌握,已经不用了<br> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用第一种,后两种都有缺点</span></span><br><span class="line"><span class="comment">//第一种(重要)  //只是定义了一个新的数据类型,没有定义变量</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="keyword">float</span> score;</span><br><span class="line"><span class="keyword">char</span> sex;</span><br><span class="line">&#125;; <span class="comment">//分号不能省略</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//第二种方式</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student2</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="keyword">float</span> score;</span><br><span class="line"><span class="keyword">char</span> sex;</span><br><span class="line">&#125; st2;</span><br><span class="line"></span><br><span class="line"><span class="comment">//第三种方式 不知道什么数据类型</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="keyword">float</span> score;</span><br><span class="line"><span class="keyword">char</span> sex;</span><br><span class="line">&#125; st3;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h2 id="怎么样使用结构体变量"><a href="#怎么样使用结构体变量" class="headerlink" title="怎么样使用结构体变量"></a>怎么样使用结构体变量</h2><h3 id="赋值和初始化"><a href="#赋值和初始化" class="headerlink" title="赋值和初始化"></a>赋值和初始化</h3><p>定义的同时可以整体赋初值<br>如果定义完之后,则只能单个的赋初值</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//结构体变量的赋值和初始化</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="keyword">float</span> score;</span><br><span class="line"><span class="keyword">char</span> sex;</span><br><span class="line">&#125;; <span class="comment">//分号不能省略</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">st</span> =</span> &#123; <span class="number">80</span>, <span class="number">66.6</span>, <span class="string">&#x27;F&#x27;</span> &#125;; <span class="comment">//初始化,定义的同时赋初值</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">st2</span>;</span></span><br><span class="line">st2.age = <span class="number">10</span>;</span><br><span class="line">st2.score = <span class="number">88</span>;</span><br><span class="line">st2.sex = <span class="string">&#x27;F&#x27;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %f %c\n&quot;</span>, st.age, st.score, st.sex);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %f %c\n&quot;</span>, st2.age, st2.score, st2.sex);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="如何取出结构体变量中的每一个成员-重点"><a href="#如何取出结构体变量中的每一个成员-重点" class="headerlink" title="如何取出结构体变量中的每一个成员(重点)"></a>如何取出结构体变量中的每一个成员(重点)</h3><ol><li>结构体变量名.成员名</li><li>指针变量名-&gt;成员名 (第二种方式更常用)<br>指针变量名-&gt;成员名 在计算机内部会被转化成 (*指针变量名).成员名的方式来执行<br>所以说这两种方式是等价的</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//如何取出结构体变量中的每一个成员</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="keyword">float</span> score;</span><br><span class="line"><span class="keyword">char</span> sex;</span><br><span class="line">&#125;; <span class="comment">//分号不能省略</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">st</span> =</span> &#123; <span class="number">80</span>, <span class="number">66.6</span>, <span class="string">&#x27;F&#x27;</span> &#125;; <span class="comment">//初始化,定义的同时赋初值</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span>* <span class="title">pst</span> =</span> &amp;st; <span class="comment">//&amp;st不能改成st</span></span><br><span class="line"></span><br><span class="line">pst-&gt;age = <span class="number">88</span>;<span class="comment">//第二种方式</span></span><br><span class="line">st.age = <span class="number">66.6f</span>; <span class="comment">//第一种方式 66.6在c语言中默认是double类型,如果希望希望一个实数是float类型,则必须在末尾加f或F,因此66.6是double,66.6f和66.6F是float类型</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">在VS中的输出结果是:<span class="number">66</span> <span class="number">66.599998</span></span><br><span class="line"><span class="comment">//为什么66.6变66.599998,因为float和double都不能够保证准确存储.跟编码格式有关,只能存近似值</span></span><br></pre></td></tr></table></figure><ol><li>(重点)pst-&gt;age 在计算机内部会被转化成(*pst).age 这就是-&gt;的含义,是一种硬性规定</li><li>所以 pst-&gt;age 等价于 (*pst).age 也等价于 st.age</li><li>我们之所以知道pst-&gt;age等价于 st.age,是因为pst-&gt;age是被转化成了(*pst).age来执行</li><li>pst-&gt;age 的含义:<br>pst所指向的那个结构体变量中的age这个成员</li></ol><h3 id="结构体变量和结构体指针变量作为函数参数传递的问题-实际讲指针的优点"><a href="#结构体变量和结构体指针变量作为函数参数传递的问题-实际讲指针的优点" class="headerlink" title="结构体变量和结构体指针变量作为函数参数传递的问题(实际讲指针的优点)"></a>结构体变量和结构体指针变量作为函数参数传递的问题(实际讲指针的优点)</h3><p>推荐使用结构体指针变量作为函数参数来传递<br>通过函数完成对结构体变量的输入和输出</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="comment">//通过函数完成对结构体变量的输入和输出</span></span><br><span class="line"><span class="comment">//结构体变量和结构体指针变量作为函数参数传递的问题(实际讲指针的优点)</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="keyword">char</span> sex;</span><br><span class="line"><span class="keyword">char</span> name[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line">&#125;; <span class="comment">//分号不能省</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InputStudent</span><span class="params">(struct Student *pstu)</span></span>; <span class="comment">//函数在mian后面,需要前置声明</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OutputStudent</span><span class="params">(struct Student)</span></span>; <span class="comment">//声明可不写参数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">st</span>;</span> <span class="comment">//对结构体变量输入</span></span><br><span class="line"></span><br><span class="line">InputStudent(&amp;st);  <span class="comment">//对结构体变量输入 必须发送st的地址</span></span><br><span class="line"><span class="comment">//printf(&quot;%d %c %s\n&quot;, st.age, st.sex, st.name);</span></span><br><span class="line">OutputStudent(st); <span class="comment">//对结构体变量输出 可以发送st的地址,也可以直接发送st的内容</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OutputStudent</span><span class="params">(struct Student ss)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %c %s\n&quot;</span>, ss.age, ss.sex, ss.name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InputStudent</span><span class="params">(struct Student * pstu)</span> <span class="comment">//pstu只占4个字节</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">(*pstu).age = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">strcpy</span>(pstu-&gt;name, <span class="string">&quot;张三&quot;</span>); <span class="comment">//不能写成 stu.name = &quot;张三&quot;;  需要在前面# include &lt;string.h&gt;</span></span><br><span class="line">pstu-&gt;sex = <span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 本函数无法修改主函数18行st的值,所以本函数是错误的</span></span><br><span class="line"><span class="comment">void InputStudent(struct Student stu)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">stu.age = 10;</span></span><br><span class="line"><span class="comment">strcpy(stu.name, &quot;张三&quot;); //不能写成 stu.name = &quot;张三&quot;;  需要在前面# include &lt;string.h&gt;</span></span><br><span class="line"><span class="comment">stu.sex = &#x27;F&#x27;;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">在VS中的输出结果是:</span><br><span class="line"><span class="number">10</span> F 张三</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="发送地址还是发送内容-指针优点之一-快速的传递数据"><a href="#发送地址还是发送内容-指针优点之一-快速的传递数据" class="headerlink" title="发送地址还是发送内容(指针优点之一:快速的传递数据)"></a>发送地址还是发送内容(指针优点之一:快速的传递数据)</h4><p>指针的优点之一:<br>快速的传递数据,减少了内存的耗用</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="comment">/*发送地址还是发送内容 30~40行代码</span></span><br><span class="line"><span class="comment">* 目的:指针的优点之一:</span></span><br><span class="line"><span class="comment">* 快速的传递数据</span></span><br><span class="line"><span class="comment">* 耗用内存小</span></span><br><span class="line"><span class="comment">* 执行速度快</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="keyword">char</span> sex;</span><br><span class="line"><span class="keyword">char</span> name[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line">&#125;; <span class="comment">//分号不能省</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InputStudent</span><span class="params">(struct Student* )</span></span>; <span class="comment">//函数在mian后面,需要前置声明</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OutputStudent</span><span class="params">(struct Student*)</span></span>; <span class="comment">//声明可不写参数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">st</span>;</span> <span class="comment">//对结构体变量输入</span></span><br><span class="line"><span class="comment">//printf(&quot;%d\n&quot;, sizeof(st));  //sizeof(变量)查询变量占了几个字节  108个</span></span><br><span class="line"></span><br><span class="line">InputStudent(&amp;st);  <span class="comment">//对结构体变量输入 必须发送st的地址</span></span><br><span class="line">OutputStudent(&amp;st); <span class="comment">//对结构体变量输出 可以发送st的地址,也可以直接发送st的内容 但为了减少内存的耗费,也为了提高执行速度,推荐发送地址</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OutputStudent</span><span class="params">(struct Student *pst)</span> <span class="comment">//可以发送st的地址,也可以直接发送st的内容 但为了减少内存的耗费,也为了提高执行速度,推荐发送地址</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %c %s\n&quot;</span>, pst-&gt;age, pst-&gt;sex, pst-&gt;name); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InputStudent</span><span class="params">(struct Student* pstu)</span> <span class="comment">//pstu只占4个字节</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">(*pstu).age = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">strcpy</span>(pstu-&gt;name, <span class="string">&quot;张三&quot;</span>); <span class="comment">//不能写成 stu.name = &quot;张三&quot;;  需要在前面# include &lt;string.h&gt;</span></span><br><span class="line">pstu-&gt;sex = <span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 本函数无法修改主函数18行st的值,所以本函数是错误的</span></span><br><span class="line"><span class="comment">void InputStudent(struct Student stu)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">stu.age = 10;</span></span><br><span class="line"><span class="comment">strcpy(stu.name, &quot;张三&quot;); //不能写成 stu.name = &quot;张三&quot;;  需要在前面# include &lt;string.h&gt;</span></span><br><span class="line"><span class="comment">stu.sex = &#x27;F&#x27;;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="结构体变量的运算"><a href="#结构体变量的运算" class="headerlink" title="结构体变量的运算"></a>结构体变量的运算</h3><p>结构体变量不能相加,不能相减,也不能相互乘除<br>但结构体变量可以相互赋值<br>例子:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">struct Student</span><br><span class="line">&#123;</span><br><span class="line">int age;</span><br><span class="line">char sex;</span><br><span class="line">char name[100];</span><br><span class="line">&#125;, //分号不能省</span><br><span class="line"></span><br><span class="line">struct Student st1, st2;</span><br><span class="line">st1+st2 st1*st2 st1/st2 都是错误的，结构体变量不能相加,不能相减,也不能相互乘除</span><br><span class="line">st1 = st2 或者st2 = st1 都是正确的</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h3><h4 id="前置知识-冒泡排序"><a href="#前置知识-冒泡排序" class="headerlink" title="前置知识:冒泡排序"></a>前置知识:冒泡排序</h4><p>该程序流程控制复习p165-14:15<br><a href="https://www.bilibili.com/video/BV1os411h77o?p=165&share_source=copy_web">流程控制复习</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//冒泡排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> * a, <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j, t;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; ++i)<span class="comment">//流程控制复习:p165 15:38</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[j] &gt; a[j + <span class="number">1</span>]) <span class="comment">//&gt;表示升序 &lt;表示降序</span></span><br><span class="line">&#123;</span><br><span class="line">t = a[j];</span><br><span class="line">a[j] = a[j + <span class="number">1</span>];</span><br><span class="line">a[j + <span class="number">1</span>] = t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">6</span>] = &#123; <span class="number">10</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">-8</span>, <span class="number">11</span>, <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">sort(a, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">6</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="动态构造存放学生信息的结构体数组"><a href="#动态构造存放学生信息的结构体数组" class="headerlink" title="动态构造存放学生信息的结构体数组"></a>动态构造存放学生信息的结构体数组</h4><p>动态构造一个数组,存放学生的信息<br>然后按分数排序输出</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="keyword">float</span> score;</span><br><span class="line"><span class="keyword">char</span> name[<span class="number">100</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> * <span class="title">pArr</span>;</span></span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">t</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//动态的构造一维数组</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入学生的个数:\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;len = &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;len);</span><br><span class="line">pArr = (struct Student *)<span class="built_in">malloc</span>(len* <span class="keyword">sizeof</span>(struct Student ));</span><br><span class="line"></span><br><span class="line"><span class="comment">//输入</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入第%d个学生的信息: \n&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;age = &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp; pArr[i].age);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;score =&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;pArr[i].score); <span class="comment">//float用%f</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;name =&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, pArr[i].name); <span class="comment">//name是数组名,本身就一件是数组首元素的地址,不需要加取地址符&amp;. %s表示字符串类型</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//按学生成绩升序排序,冒泡算法</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; ++j)</span><br><span class="line">&#123;<span class="comment">//大于就是升序,小于就是降序</span></span><br><span class="line"><span class="keyword">if</span> (pArr[j].score &gt; pArr[j + <span class="number">1</span>].score) <span class="comment">//比较需要标准,而不是整体比较,所以后面要加.score比较分数</span></span><br><span class="line">&#123;</span><br><span class="line">t = pArr[j]; <span class="comment">//互换的是位置而不是成绩</span></span><br><span class="line">pArr[j] = pArr[j + <span class="number">1</span>];</span><br><span class="line">pArr[j + <span class="number">1</span>] = t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n学生的信息是:&quot;</span>);</span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;第%d个学生的信息是:\n&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;age = %d\n&quot;</span>, pArr[i].age);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;name = %s\n&quot;</span>, pArr[i].name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;score = %f\n&quot;</span>, pArr[i].score);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">在VS中的输出结果是:</span><br><span class="line">请输入学生的个数:</span><br><span class="line">len = <span class="number">4</span></span><br><span class="line">请输入第<span class="number">1</span>个学生的信息:</span><br><span class="line">age = <span class="number">10</span></span><br><span class="line">score =<span class="number">6</span></span><br><span class="line">name =zhanshan</span><br><span class="line">请输入第<span class="number">2</span>个学生的信息:</span><br><span class="line">age = <span class="number">20</span></span><br><span class="line">score =<span class="number">88.8</span></span><br><span class="line">name =lisi</span><br><span class="line">请输入第<span class="number">3</span>个学生的信息:</span><br><span class="line">age = <span class="number">22</span></span><br><span class="line">score =<span class="number">55.5</span></span><br><span class="line">name =wangwu</span><br><span class="line">请输入第<span class="number">4</span>个学生的信息:</span><br><span class="line">age = <span class="number">21</span></span><br><span class="line">score =<span class="number">98.9</span></span><br><span class="line">name =xiaojuan</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">学生的信息是:第<span class="number">1</span>个学生的信息是:</span><br><span class="line">age = <span class="number">10</span></span><br><span class="line">name = zhanshan</span><br><span class="line">score = <span class="number">6.000000</span></span><br><span class="line">第<span class="number">2</span>个学生的信息是:</span><br><span class="line">age = <span class="number">22</span></span><br><span class="line">name = wangwu</span><br><span class="line">score = <span class="number">55.500000</span></span><br><span class="line">第<span class="number">3</span>个学生的信息是:</span><br><span class="line">age = <span class="number">20</span></span><br><span class="line">name = lisi</span><br><span class="line">score = <span class="number">88.800003</span></span><br><span class="line">第<span class="number">4</span>个学生的信息是:</span><br><span class="line">age = <span class="number">21</span></span><br><span class="line">name = xiaojuan</span><br><span class="line">score = <span class="number">98.900002</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C语言基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(C练习)求1到某个数字之间(包括该数字)所有的素数,并将其输出(多函数)</title>
      <link href="/2021/07/01/(C%E7%BB%83%E4%B9%A0)%E6%B1%821%E5%88%B0%E6%9F%90%E4%B8%AA%E6%95%B0%E5%AD%97%E4%B9%8B%E9%97%B4(%E5%8C%85%E6%8B%AC%E8%AF%A5%E6%95%B0%E5%AD%97)%E6%89%80%E6%9C%89%E7%9A%84%E7%B4%A0%E6%95%B0/"/>
      <url>/2021/07/01/(C%E7%BB%83%E4%B9%A0)%E6%B1%821%E5%88%B0%E6%9F%90%E4%B8%AA%E6%95%B0%E5%AD%97%E4%B9%8B%E9%97%B4(%E5%8C%85%E6%8B%AC%E8%AF%A5%E6%95%B0%E5%AD%97)%E6%89%80%E6%9C%89%E7%9A%84%E7%B4%A0%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">功能:求1到某个数字之间(包括该数字)所有的素数,并将其输出(多个函数方法)</span></span><br><span class="line"><span class="comment">用多个函数判断一个数字是否是素数</span></span><br><span class="line"><span class="comment">优点:代码比02更容易理解,代码量更少</span></span><br><span class="line"><span class="comment"> 代码的可重用性比02更高</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//本函数的功能是:判断m是否为素数,是返回true,不是返回false</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">IsPrime</span><span class="params">(<span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//判断i是否是素数,是输出,不是不输出</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">2</span>; i &lt; m; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span> == m % i)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (i == m)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//本函数的功能是把1到n之间所有的素数在显示器上输出</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Traverseval</span><span class="params">(<span class="keyword">int</span> n)</span> <span class="comment">//Traverseval是遍历的意思.找遍所有函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">2</span>; i &lt;= n; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (IsPrime(i))</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> val;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入您需要判断的数字: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;val);</span><br><span class="line">Traverseval(val);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">在VS中的输出结果是:</span><br><span class="line">请输入您需要判断的数字: <span class="number">100</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">11</span></span><br><span class="line"><span class="number">13</span></span><br><span class="line"><span class="number">17</span></span><br><span class="line"><span class="number">19</span></span><br><span class="line"><span class="number">23</span></span><br><span class="line"><span class="number">29</span></span><br><span class="line"><span class="number">31</span></span><br><span class="line"><span class="number">37</span></span><br><span class="line"><span class="number">41</span></span><br><span class="line"><span class="number">43</span></span><br><span class="line"><span class="number">47</span></span><br><span class="line"><span class="number">53</span></span><br><span class="line"><span class="number">59</span></span><br><span class="line"><span class="number">61</span></span><br><span class="line"><span class="number">67</span></span><br><span class="line"><span class="number">71</span></span><br><span class="line"><span class="number">73</span></span><br><span class="line"><span class="number">79</span></span><br><span class="line"><span class="number">83</span></span><br><span class="line"><span class="number">89</span></span><br><span class="line"><span class="number">97</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(C练习)求1到某个数字之间(包括该数字)所有的素数,并将其输出(单函数方法)</title>
      <link href="/2021/07/01/(C%E7%BB%83%E4%B9%A0)%E6%B1%821%E5%88%B0%E6%9F%90%E4%B8%AA%E6%95%B0%E5%AD%97%E4%B9%8B%E9%97%B4(%E5%8C%85%E6%8B%AC%E8%AF%A5%E6%95%B0%E5%AD%97)%E6%89%80%E6%9C%89%E7%9A%84%E7%B4%A0%E6%95%B0%20copy%202/"/>
      <url>/2021/07/01/(C%E7%BB%83%E4%B9%A0)%E6%B1%821%E5%88%B0%E6%9F%90%E4%B8%AA%E6%95%B0%E5%AD%97%E4%B9%8B%E9%97%B4(%E5%8C%85%E6%8B%AC%E8%AF%A5%E6%95%B0%E5%AD%97)%E6%89%80%E6%9C%89%E7%9A%84%E7%B4%A0%E6%95%B0%20copy%202/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">功能:求1到某个数字之间(包括该数字)所有的素数,并将其输出(函数方法)</span></span><br><span class="line"><span class="comment">用1个函数判断一个数字是否是素数</span></span><br><span class="line"><span class="comment">优点:代码比01更容易理解</span></span><br><span class="line"><span class="comment"> 代码的可重用性比01更高</span></span><br><span class="line"><span class="comment">缺点:可重用性仍然不是非常高</span></span><br><span class="line"><span class="comment">比如求1000个数字,它们每个数字从1到它本身的素数,则代码要写1000次</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">IsPrime</span><span class="params">(<span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//判断i是否是素数,是输出,不是不输出</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">2</span>; i &lt; m; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span> == m % i)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (i == m)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> val;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入您需要判断的数字: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;val);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">2</span>; i &lt;= val; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (IsPrime(i))</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">在VS中的输出结果是:</span><br><span class="line">请输入您需要判断的数字: <span class="number">100</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">11</span></span><br><span class="line"><span class="number">13</span></span><br><span class="line"><span class="number">17</span></span><br><span class="line"><span class="number">19</span></span><br><span class="line"><span class="number">23</span></span><br><span class="line"><span class="number">29</span></span><br><span class="line"><span class="number">31</span></span><br><span class="line"><span class="number">37</span></span><br><span class="line"><span class="number">41</span></span><br><span class="line"><span class="number">43</span></span><br><span class="line"><span class="number">47</span></span><br><span class="line"><span class="number">53</span></span><br><span class="line"><span class="number">59</span></span><br><span class="line"><span class="number">61</span></span><br><span class="line"><span class="number">67</span></span><br><span class="line"><span class="number">71</span></span><br><span class="line"><span class="number">73</span></span><br><span class="line"><span class="number">79</span></span><br><span class="line"><span class="number">83</span></span><br><span class="line"><span class="number">89</span></span><br><span class="line"><span class="number">97</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(C练习)求1到某个数字之间(包括该数字)所有的素数,并将其输出(原始方法)</title>
      <link href="/2021/07/01/(C%E7%BB%83%E4%B9%A0)%E6%B1%821%E5%88%B0%E6%9F%90%E4%B8%AA%E6%95%B0%E5%AD%97%E4%B9%8B%E9%97%B4(%E5%8C%85%E6%8B%AC%E8%AF%A5%E6%95%B0%E5%AD%97)%E6%89%80%E6%9C%89%E7%9A%84%E7%B4%A0%E6%95%B0%20copy/"/>
      <url>/2021/07/01/(C%E7%BB%83%E4%B9%A0)%E6%B1%821%E5%88%B0%E6%9F%90%E4%B8%AA%E6%95%B0%E5%AD%97%E4%B9%8B%E9%97%B4(%E5%8C%85%E6%8B%AC%E8%AF%A5%E6%95%B0%E5%AD%97)%E6%89%80%E6%9C%89%E7%9A%84%E7%B4%A0%E6%95%B0%20copy/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">功能:求1到某个数字之间(包括该数字)所有的素数,并将其输出(原始方法)</span></span><br><span class="line"><span class="comment">只用main函数实现,有局限性:</span></span><br><span class="line"><span class="comment">1. 代码的重用性不高</span></span><br><span class="line"><span class="comment">2. 代码不容易理解</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> val;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> j;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入您需要判断的数字: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;val);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">2</span>; i &lt;= val; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//判断i是否是素数,是输出,不是不输出</span></span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">2</span>; j &lt; i; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span> == i % j)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (j == i)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">在VS中的输出结果是:</span><br><span class="line">请输入您需要判断的数字: <span class="number">100</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">11</span></span><br><span class="line"><span class="number">13</span></span><br><span class="line"><span class="number">17</span></span><br><span class="line"><span class="number">19</span></span><br><span class="line"><span class="number">23</span></span><br><span class="line"><span class="number">29</span></span><br><span class="line"><span class="number">31</span></span><br><span class="line"><span class="number">37</span></span><br><span class="line"><span class="number">41</span></span><br><span class="line"><span class="number">43</span></span><br><span class="line"><span class="number">47</span></span><br><span class="line"><span class="number">53</span></span><br><span class="line"><span class="number">59</span></span><br><span class="line"><span class="number">61</span></span><br><span class="line"><span class="number">67</span></span><br><span class="line"><span class="number">71</span></span><br><span class="line"><span class="number">73</span></span><br><span class="line"><span class="number">79</span></span><br><span class="line"><span class="number">83</span></span><br><span class="line"><span class="number">89</span></span><br><span class="line"><span class="number">97</span></span><br></pre></td></tr></table></figure><p>看懂算法-试数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">for (i = 2; i &lt;= val; ++i)</span><br><span class="line">&#123;</span><br><span class="line">//判断i是否是素数,是输出,不是不输出</span><br><span class="line">for (j = 2; j &lt; i; ++j)</span><br><span class="line">&#123;</span><br><span class="line">if (0 == i % j)</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">if (j == i)</span><br><span class="line">printf(&quot;%d\n&quot;, i);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如何看懂算法:试数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">设val为5</span><br><span class="line">1&gt; i=2, j&lt;=5 成立</span><br><span class="line">   j=2, j(2)&lt;i(2)不成立</span><br><span class="line">   if(j(2) == i(2)) 成立</span><br><span class="line">   输出i=2 ++i i=3</span><br><span class="line">2&gt; i=3, i&lt;=5 成立</span><br><span class="line">   j=2,j&lt;3 成立</span><br><span class="line">   2%3 ==2 不成立 </span><br><span class="line">   j=2,j&lt;i,不成立 </span><br><span class="line">   i=j=2 成立</span><br><span class="line">   输出i=3 ++i i=4</span><br><span class="line">3&gt; i=4 i&lt;=5 成立</span><br><span class="line">   j=3 j&lt;4 成立  </span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言学习笔记03-指针(重点)</title>
      <link href="/2021/07/01/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B003-%E6%8C%87%E9%92%88(%E9%87%8D%E7%82%B9)/"/>
      <url>/2021/07/01/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B003-%E6%8C%87%E9%92%88(%E9%87%8D%E7%82%B9)/</url>
      
        <content type="html"><![CDATA[<p><em>指针是C语言第二个重点,非常重要,而且有难度</em><br><em>第一个重点是流程控制</em></p><p>指针为什么难?<br>因为涉及到其他学科的知识,本身不算太难,但是比较绕.</p><h1 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h1><h2 id="指针程序热身"><a href="#指针程序热身" class="headerlink" title="指针程序热身"></a>指针程序热身</h2><p>指针简单介绍01(热身)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> * p; <span class="comment">//p是变量的名字,int * 表示p变量存放的是int类型的地址 //int* p; 也等价于int *p;</span></span><br><span class="line"><span class="keyword">int</span> i = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">p = &amp;i; <span class="comment">//ok</span></span><br><span class="line"><span class="comment">//p = i; //error,因为类型不一致,p只能存放int类型变量的地址,不能存放int类型变量的值</span></span><br><span class="line"><span class="comment">//p = 55; //error 原因同上</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>指针热身程序02(非常重要)<br><a name="zhizhen"></a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span>* p; <span class="comment">//指针变量,能存放其他变量地址.p是变量的名字,int * 表示p变量存放的是int类型的地址</span></span><br><span class="line"><span class="comment">//int * p; 不表示定义了一个叫做*p的变量</span></span><br><span class="line"><span class="comment">//int * p; 应该这样理解: p是变量名,p变量的数据类型是 int * 类型</span></span><br><span class="line"><span class="comment">//所谓int *; 类型就是存放int变量地址的类型</span></span><br><span class="line"><span class="keyword">int</span> i = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">int</span> j;</span><br><span class="line">p = &amp;i;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.p保存了i的地址,因此p指向i</span></span><br><span class="line"><span class="comment">2.p不是i,i也不是p,更准确的说: 修改p的值不影响i的值,修改i的值也不影响p</span></span><br><span class="line"><span class="comment">3.指针就是地址,指针变量也能叫地址变量</span></span><br><span class="line"><span class="comment">4.如果一个指针变量指向了某个普通变量,则</span></span><br><span class="line"><span class="comment">*指针变量 就完全等同于 普通变量</span></span><br><span class="line"><span class="comment">例子:</span></span><br><span class="line"><span class="comment">如果p是个指针变量,并且p存放了普通变量i的地址,</span></span><br><span class="line"><span class="comment">则p指向了普通变量i</span></span><br><span class="line"><span class="comment">*p 就完全等同于i</span></span><br><span class="line"><span class="comment">或者说: 在所有出现*p的地方都可以替换成*p</span></span><br><span class="line"><span class="comment">*p和&amp;是逆运算</span></span><br><span class="line"><span class="comment">*p 就是以p的内容为地址的变量</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">j = *p;<span class="comment">//等价于 j =i;</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;i = %d, j = %d\n&quot;</span>, i, j);</span><br><span class="line"><span class="comment">//输出结果:i = 3, j = 3</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="指针和指针变量的区别"><a href="#指针和指针变量的区别" class="headerlink" title="指针和指针变量的区别"></a>指针和指针变量的区别</h2><p>指针就是地址,地址就是指针<br>地址就是内存单元的编号</p><p>指针和指针变量是两个不同的概念<br>但是要注意: 通常我们叙述时会把指针变量简称为指针,实际它们含义并不一样</p><p>指针变量是存放地址的变量<br>指针只是一个值,是内存单元的编号</p><h2 id="指针的重要性"><a href="#指针的重要性" class="headerlink" title="指针的重要性"></a>指针的重要性</h2><ul><li>表示一些复杂的数据结构 :比如现实间上下级关系需要用树来解决,而数组无法解决</li><li>快速的传递数据,减少了内存的耗用 (重点)</li><li>使函数返回一个以上的值(重点) :传统的return只能返回一个值  </li><li>能直接访问硬件</li><li>能够方便的处理字符串</li><li>是理解面向对象语言中引用的基础</li></ul><p>总结: 指针是C语言的灵魂</p><h2 id="指针的定义"><a href="#指针的定义" class="headerlink" title="指针的定义"></a>指针的定义</h2><ul><li><p>地址:<br>内存单元的编号<br>从零开始的非负整数<br>范围:4g [0–4G-1] 32位</p></li><li><p>指针<br>指针就是地址,地址就是指针<br>指针变量就是存放内存单元编号的变量,或者说指针变量就是存放地址的变量<br>指针和指针变量是两个不同的概念<br>但是要注意: 通常我们叙述时会把指针变量简称为指针,实际它们含义并不一样<br>指针的本质就是一个操作受限的非负整数 操作受限:不能乘除加,只能相减</p></li></ul><h2 id="指针的分类"><a href="#指针的分类" class="headerlink" title="指针的分类"></a>指针的分类</h2><ol><li>基本类型指针 [重点]<br>见指针热身程序02<br><a href="#zhizhen">基本类型指针</a></li></ol><h3 id="附注-星号的三种含义"><a href="#附注-星号的三种含义" class="headerlink" title="附注:星号的三种含义"></a>附注:星号的三种含义</h3><ul><li>乘法</li><li>定义指针变量    :int * p; //定义了一个名字叫p的变量,int *表示p只能存放int变量的地址</li><li>指针运算符 //该运算符放在已经定义好的指针变量前面<pre><code>      //如果p是一个已经定义好的指针变量      //则 *p表示 以p的内容为地址的变量</code></pre></li></ul><h3 id="附录-如何通过被调函数修改主调函数普通变量的值"><a href="#附录-如何通过被调函数修改主调函数普通变量的值" class="headerlink" title="附录:如何通过被调函数修改主调函数普通变量的值"></a>附录:如何通过被调函数修改主调函数普通变量的值</h3><ul><li>形参必须为该普通变量的地址</li><li>形参必须为指针变量</li><li>在被调函数中通过 *形参名 = …. 的方式就可以修改主调函数相关变量的值</li></ul><ol start="2"><li>指针和数组</li></ol><ul><li>指针和一维数组(重点)<br>一维数组名:一维数组名是个指针常量,它存放的是一维数组第一个元素的地址<br><a href="#%E6%95%B0%E7%BB%8401">举例</a></li></ul><p>下标和指针的关系<br>如果p是个指针变量,则<br><code>p[i] 永远等价于 *(p+i)</code></p><p>确定一个一维数组需要两个参数<br>【如果一个函数要处理一个一维数组,则需要接收该数组的哪些信息】<br>需要两个参数:<br>数组第一个元素的地址<br>数组的长度<br>例:需要一个首地址名,例如 * pArr 表示首地址名 还需要一个int len 表示字符长度<br>例<code>void f(int* pArr, int len)</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//程序功能输出数组内容</span></span><br><span class="line"><span class="comment">//f函数可以输出任何一个一维数组的内容</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span>* pArr, <span class="keyword">int</span> len)</span> <span class="comment">//*pArr首地址名 int len 数组长度</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; ++i) </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, *(pArr + i));   <span class="comment">//*pArr  *(pArr+1)    *(pArr+2)</span></span><br><span class="line"><span class="comment">//*(pArr+i) = pArr[i] =b[i] =*(b+i) </span></span><br><span class="line"><span class="comment">//第一个元素地址 第二个元素地址 第三元素地址</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">5</span>] = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> b[<span class="number">6</span>] = &#123; <span class="number">-1</span>, <span class="number">-2</span>, <span class="number">-3</span>, <span class="number">4</span>, <span class="number">5</span> - <span class="number">6</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> c[<span class="number">100</span>] = &#123; <span class="number">1</span>, <span class="number">99</span>, <span class="number">22</span>, <span class="number">33</span> &#125;;  <span class="comment">//C语言中,数组中没赋值的全变0</span></span><br><span class="line"></span><br><span class="line">f(a, <span class="number">5</span>); <span class="comment">//a是int *</span></span><br><span class="line">f(b, <span class="number">6</span>); <span class="comment">//等同于b[i] </span></span><br><span class="line">f(c, <span class="number">100</span>);  <span class="comment">//被调函数.c是数组名,100是数组长度</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">在VS中的输出结果是:</span></span><br><span class="line"><span class="comment">1 2 3 4 5</span></span><br><span class="line"><span class="comment">-1 -2 -3 4 -1 0</span></span><br><span class="line"><span class="comment">1 99 22 33 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">C语言中,数组中没赋值的全变0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>指针变量的运算<br>指针变量不能相加,不能相乘,不能相除,只能相减</p><p>如果两个指针变量指向的是同一块连续空间中的不同存储单元则这两个指针变量才可以相减</p><p>一个指针变量到底占几个字节 (非重点)<br>指针变量占几个字节由数据类型决定<br>    预备知识:<br>        sizeof(数据类型)<br>        功能:返回值就是该数据类型所占的字节数<br>        例子: </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sizeof(int) = 4 sizeof(char) =1</span><br><span class="line">sizeof(double) = 8</span><br></pre></td></tr></table></figure><pre><code>sizeof(变量名)功能:返回值是该变量所占的字节数假设p指向char类型变量(1个字节)假设q指向int类型变量(4个字节)假设r指向double类型变量(8个字节)p q r本身所占的字节数是否一样答案: pqr本身所占的字节数是一样的</code></pre><p>总结:一个指针变量,无论它指向的变量占几个字节<br>该指针变量本身只占四个字节</p><p>一个变量的地址使用该变量的首字节的地址来表示</p><ul><li>指针和二维数组</li></ul><ol start="3"><li><p>指针和函数</p></li><li><p>指针和结构体[重要]</p></li><li><p>多级指针</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span>* p = &amp;i;</span><br><span class="line"><span class="keyword">int</span>** q = &amp;p;</span><br><span class="line"><span class="keyword">int</span>*** r = &amp;q;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;i = %d\n&quot;</span>, ***r);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">***r = i</span></span><br><span class="line"><span class="comment">*r = q</span></span><br><span class="line"><span class="comment">**r = p </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多级指针02</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span>** q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//*q就是p</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">g</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span>* p = &amp;i;</span><br><span class="line"></span><br><span class="line">f(&amp;p); <span class="comment">//p是int *类型,&amp;p是int **类型</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">g();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="专题-动态内存分配-重要"><a href="#专题-动态内存分配-重要" class="headerlink" title="专题:动态内存分配(重要)"></a>专题:动态内存分配(重要)</h2><h3 id="传统数组的缺点"><a href="#传统数组的缺点" class="headerlink" title="传统数组的缺点:"></a>传统数组的缺点:</h3><ol><li><p>数组长度必须事先制定,且只能是常整数,不能是变量<br>例子:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int a[5]; //ok</span><br><span class="line">int len = 5; int a[len]; //error,不能是变量,报错</span><br></pre></td></tr></table></figure></li><li><p>传统形式定义的数组,该数组的内存程序员无法手动释放<br>在一个函数运行期间,系统为该函数中数组所分配的空间会一直存在,<br>直到该函数运行完毕时,数组的空间才会被系统释放.</p></li><li><p>数组的长度一旦定义,其长度就不能再更改<br> 数组的长度不能在函数运行的过程中动态的扩充或缩小</p></li><li><p>A函数定义的数组,在A函数运行期间可以被其它函数使用,但A函数运行完毕之后,<br>A函数中的数组将无法再被其它函数使用</p></li></ol><p><em>传统方式定义的数组不能跨函数使用</em></p><h3 id="为什么需要动态分配内存"><a href="#为什么需要动态分配内存" class="headerlink" title="为什么需要动态分配内存"></a>为什么需要动态分配内存</h3><p>动态数组很好的解决了传统数组的这4个缺陷<br>传统数组也叫静态数组</p><h3 id="动态内存分配举例-动态数组的构造"><a href="#动态内存分配举例-动态数组的构造" class="headerlink" title="动态内存分配举例_动态数组的构造"></a>动态内存分配举例_动态数组的构造</h3><p>malloc函数的用法01</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;malloc.h&gt;</span> <span class="comment">//不能省略</span></span></span><br><span class="line"><span class="comment">//malloc 是 memory(内存)allocate(分配)的缩写</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">5</span>; <span class="comment">//分配了4个字节 静态分配</span></span><br><span class="line"><span class="keyword">int</span>* p = (<span class="keyword">int</span>*)<span class="built_in">malloc</span>(<span class="number">4</span>); <span class="comment">//使用malloc函数在前面添加malloc.h这个头文件</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.malloc函数只有一个形参,并且形参是整型</span></span><br><span class="line"><span class="comment">2.4表示请求系统为本程序分配4个字节</span></span><br><span class="line"><span class="comment">3.malloc函数只能返回第一个字节的地址</span></span><br><span class="line"><span class="comment">4.第8行分配了8个字节,p变量占了4个字节,p所指向的内存也占4个字节</span></span><br><span class="line"><span class="comment">5.(int*p)p本身所占的内存是静态分配的,malloc(4) p所指向的内存是动态分配的</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">*p = <span class="number">5</span>; <span class="comment">//*p 代表的就是一个int变量,只不过*p这个整型变量的内存分配方式和7行的i变量的分配方式不同</span></span><br><span class="line"><span class="built_in">free</span>(p); <span class="comment">//free(p)表示把p所指向的内存给释放掉 p本身的内存是静态的,不能由程序员手动释放,p本身的内存只能在p变量所在的函数运行终止时,由系统自动释放</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;老师好!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>malloc函数的用法02</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;malloc.h&gt;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//malloc函数的使用02</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span>* q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//*p = 200; //error</span></span><br><span class="line"><span class="comment">//q = 200;</span></span><br><span class="line"><span class="comment">//**q = 200; //error</span></span><br><span class="line"></span><br><span class="line">*q = <span class="number">200</span>;</span><br><span class="line"><span class="comment">//free(q); //本语句必须注释掉,因为会把q所指向的内存释放掉,导致第24行的代码出错</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span>* p = (<span class="keyword">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>)); <span class="comment">//sizeof(int)返回值是int所占的字节数</span></span><br><span class="line">*p = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, *p); <span class="comment">//10</span></span><br><span class="line">f(p); <span class="comment">//p是int* 类型</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, *p); <span class="comment">//200 第24行</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>动态一维数组示例</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">5</span>]; <span class="comment">//如果int占4个字节的话,则本数组总共包含有20个字节,每四个字节被当做一个int变量来使用</span></span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"><span class="keyword">int</span>* pArr;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//动态的构造一维数组</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入您要存放的元素的个数: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;len);</span><br><span class="line">pArr = (<span class="keyword">int</span>*)<span class="built_in">malloc</span>(<span class="number">4</span> * len); <span class="comment">//第14行 本行动态的构造了一个一维数组,该一维数组的长度是len,该数组的数组名是pArr,该数组的每个元素是int 类似于 int pArr[len];</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//对一维数组进行操作</span></span><br><span class="line"><span class="comment">//对动态一维数组进行赋值</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; ++i)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;pArr[i]);</span><br><span class="line"></span><br><span class="line"><span class="comment">//对一维数组进行输出</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;一维数组的内容是: \n &quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; ++i)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, pArr[i]);</span><br><span class="line"></span><br><span class="line"><span class="built_in">free</span>(pArr); <span class="comment">//释放掉动态分配的数组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="静态内存和动态内存的比较"><a href="#静态内存和动态内存的比较" class="headerlink" title="静态内存和动态内存的比较"></a>静态内存和动态内存的比较</h3><p>静态内存是由系统自动分配,由系统自动释放<br>静态内存是在栈分配的</p><p>动态内存是由程序员手动分配,手动释放<br>动态内存是在堆分配的</p><h3 id="跨函数使用内存的问题"><a href="#跨函数使用内存的问题" class="headerlink" title="跨函数使用内存的问题"></a>跨函数使用内存的问题</h3><h4 id="静态内存变量不能跨函数使用"><a href="#静态内存变量不能跨函数使用" class="headerlink" title="静态内存变量不能跨函数使用"></a>静态内存变量不能跨函数使用</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">本程序说明一个问题,静态内存变量不能跨函数使用</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span>** q)</span><span class="comment">// q是个指针变量,无论q是什么类型的指针变量,都只占4个字节</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">5</span>;</span><br><span class="line"><span class="comment">//*q等价于p q和**q都不等价于p</span></span><br><span class="line"><span class="comment">//*q = i; //error 因为*q = i; 等价于p = i; 这样写是错误的</span></span><br><span class="line">*q = &amp;i; <span class="comment">//p = &amp;i;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span>* p; <span class="comment">//18行</span></span><br><span class="line"></span><br><span class="line">f(&amp;p);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, *p); <span class="comment">//21行, 本语句语法没有问题,但逻辑上有问题</span></span><br><span class="line"><span class="comment">//静态内存变量不能跨函数使用</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="动态内存可以跨函数使用"><a href="#动态内存可以跨函数使用" class="headerlink" title="动态内存可以跨函数使用"></a>动态内存可以跨函数使用</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span>** q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">*q = (<span class="keyword">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>)); <span class="comment">//sizeof(数据类型) 返回值是该数据类型所占的字节数</span></span><br><span class="line"><span class="comment">//等价于 p =(int *)malloc(sizeof(int));</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//q = 5; //error</span></span><br><span class="line"><span class="comment">//*q = 5;//error</span></span><br><span class="line">**q = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span>* p;</span><br><span class="line"></span><br><span class="line">f(&amp;p);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, *p);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>指针常见错误_1</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span>* p;</span><br><span class="line"><span class="keyword">int</span>* q;</span><br><span class="line"></span><br><span class="line">p = &amp;i;</span><br><span class="line"><span class="comment">//*q = p; //error语法编译会出错</span></span><br><span class="line"><span class="comment">//*q = *p; error</span></span><br><span class="line">p = q;  <span class="comment">//q是垃圾值,q赋给p,p也变成垃圾值</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, *q);<span class="comment">/*q的空间是属于本程序的, 所以本程序可以读写q的内容,</span></span><br><span class="line"><span class="comment">但是如果q内部是垃圾值,则本程序不能读写*q的内容</span></span><br><span class="line"><span class="comment">因为此时*q所代表的内存单元的控制权限并没有分配给本程序</span></span><br><span class="line"><span class="comment">所以本程序运行到13行时就会立即出错</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>经典指针程序-互换两个数字</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">huhuan03</span><span class="params">(<span class="keyword">int</span>*, <span class="keyword">int</span>*)</span></span>;<span class="comment">//声明不用写形参</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">huhuan01</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">huhuan02</span><span class="params">(<span class="keyword">int</span>*, <span class="keyword">int</span>*)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">huhuan03(&amp;a, &amp;b); <span class="comment">//huhuan02(*p, *q); 错误 huhuan02(*a, *b);也是错误的</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a = %d, b = %d\n&quot;</span>, a, b);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//可以完成互换功能</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">huhuan03</span><span class="params">(<span class="keyword">int</span>* p, <span class="keyword">int</span>* q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span>  t; <span class="comment">//如果要互换*p和*q的值,则t必须定义成int,不能定义成int *,否则语法出错.</span></span><br><span class="line">t = *p;<span class="comment">//p是int *, *p是int</span></span><br><span class="line">*p = *q;</span><br><span class="line">*q = t;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//不能完成互换功能</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">huhuan01</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">t = a;</span><br><span class="line">a = b;</span><br><span class="line">b = t;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//不能完成互换功能</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">huhuan02</span><span class="params">(<span class="keyword">int</span> * p, <span class="keyword">int</span> * q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> * t; <span class="comment">//如果要互换p和q的值,则t必须是int *,不能是int.类型要一致否则出错</span></span><br><span class="line">t = p;</span><br><span class="line">p = q;</span><br><span class="line">q = t;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">在VS中的输出结果是:</span><br><span class="line">a = <span class="number">5</span>, b = <span class="number">3</span></span><br></pre></td></tr></table></figure><p>复习基本类型指针<br><a href="https://www.bilibili.com/video/BV1os411h77o?p=131&share_source=copy_web">郝斌C语言p131</a></p><p><a name="数组01"></a><br>一维数组名的含义</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">5</span>]; <span class="comment">//a是数组名 5是数组元素的个数 元素就是变量 a[0] -- a[4]</span></span><br><span class="line"><span class="comment">//int a[3][4]; //3行4列 a[0][0]是第一个元素 a[i][j]第i+1行j+1列</span></span><br><span class="line"><span class="keyword">int</span> b[<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//a = b;//error a是常量</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%#X\n&quot;</span>, &amp;a[<span class="number">0</span>]); <span class="comment">//%#X是以十六进制输出</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%#X\n&quot;</span>, a);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">在VS中的输出结果是:</span></span><br><span class="line"><span class="comment">0XB4FF868</span></span><br><span class="line"><span class="comment">0XB4FF868</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">总结:一维数组名:</span></span><br><span class="line"><span class="comment">一维数组名是个指针常量</span></span><br><span class="line"><span class="comment">它存放的是一维数组第一个元素的地址</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C语言基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown常用语法</title>
      <link href="/2021/07/01/Markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
      <url>/2021/07/01/Markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="一-1-6级标题"><a href="#一-1-6级标题" class="headerlink" title="(一) 1~6级标题"></a>(一) 1~6级标题</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">#### 四级标题</span></span><br><span class="line"><span class="section">##### 五级标题</span></span><br><span class="line"><span class="section">###### 六级标题</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>效果如下:</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h1 id="二-、字体"><a href="#二-、字体" class="headerlink" title="(二)、字体"></a>(二)、字体</h1><ul><li>加粗<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">要加粗的文字左右两边分别用两个<span class="emphasis">*包起来</span></span><br><span class="line"><span class="emphasis">*</span>内容<span class="emphasis">*</span></span><br><span class="line"><span class="emphasis"></span></span><br></pre></td></tr></table></figure>效果如下:</li></ul><p><em>内容</em></p><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">语法:无序列表用-<span class="emphasis">*+任何一种都可以</span></span><br><span class="line"><span class="emphasis">- 列表内容</span></span><br><span class="line"><span class="emphasis">+ 列表内容</span></span><br><span class="line"><span class="emphasis">*</span> 列表内容</span><br><span class="line"></span><br><span class="line">注意: - + <span class="emphasis">* 跟内容之间都要有一个空格</span></span><br><span class="line"><span class="emphasis"></span></span><br></pre></td></tr></table></figure><p>效果如下:</p><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法:数字加点,注意序号和内容之间的空格</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 列表内容</span><br><span class="line"><span class="bullet">2.</span> 列表内容</span><br><span class="line"><span class="bullet">3.</span> 列表内容</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>效果如下:</p><ol><li>列表内容</li><li>列表内容</li><li>列表内容</li></ol><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><p>语法:单行代码，使用反引号（`）包起来</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">`代码内容`</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>效果如下:</p><p><code>代码内容</code></p><p>代码块,代码之间分别用三个反引号(`)包起来,并可以在开头反引号后面指定语言(也可以不指定)</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```javascript</span></span><br><span class="line"><span class="code">$(document).ready(function () &#123;</span></span><br><span class="line"><span class="code">    alert(&#x27;geyouyang&#x27;);</span></span><br><span class="line"><span class="code">&#125;);</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">``` </span></span><br></pre></td></tr></table></figure><p>效果如下:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="string">&#x27;geyouyang&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><ol><li><p>插入本地图片<br><code>![avatar](/user/desktop/doge.png) </code></p></li><li><p>插入网络图片<br><code>![avatar](http://baidu.com/pic/doge.png) </code></p></li></ol><h2 id="链接到另一篇文章"><a href="#链接到另一篇文章" class="headerlink" title="链接到另一篇文章"></a>链接到另一篇文章</h2><p><code>[_post/a.md](/a.html)</code></p><p>前面是显示的文子,后面是链接,以_post为根目录定位文件（md文件会被渲染成html）</p><h2 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">我在正文开头定义了一个：&lt;a name=&quot;divtop&quot;&gt;&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">我们跳转过去：[跳转指定位置](#divtop)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Markdown-链接"><a href="#Markdown-链接" class="headerlink" title="Markdown 链接"></a>Markdown 链接</h2><p>链接使用方法如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[链接名称](链接地址)</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">&lt;链接地址&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>例子:<br>这是我的博客 <a href="https://geyouyang.top/">歌悠扬的博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 写作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言学习笔记02</title>
      <link href="/2021/06/21/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B002/"/>
      <url>/2021/06/21/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B002/</url>
      
        <content type="html"><![CDATA[<h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><h2 id="为什么需要数组"><a href="#为什么需要数组" class="headerlink" title="为什么需要数组"></a>为什么需要数组</h2><p>什么是数组</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">5</span>] = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> &#125;;</span><br><span class="line"><span class="comment">//a是数组的名字, 5表示数组元素的个数,并且这5个元素分别用a[0] a[1] a[2] a[3] a[4]表示</span></span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; ++i)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a[i]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">为什么需要数组?</span><br><span class="line"><span class="number">1.</span> 为了解决大量同类型数据的存储和使用问题</span><br><span class="line"><span class="number">2.</span> 为了模拟现实世界</span><br><span class="line">在VS中的输出结果是:</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><p>为什么用数组不是学习的重点?<br>因为原生数组已经很少使用了,如果使用需要自己编程调用.而现实情况下使用数组大多数往往是用别人已经开发好的工具来使用.</p><h2 id="数组的分类"><a href="#数组的分类" class="headerlink" title="数组的分类"></a>数组的分类</h2><ol><li>一维数组<br>定义: 为n个变量连续分配存储空间<br>   所有的变量数据类型必须相同<br>   所有变量的字节大小必须相等<br>例:int a[25]; 一排25个人<br>一维数组名不代表数组中所有的元素<br>一维数组名代表数组第一个元素的地址</li></ol><p>有关一维数组的操作</p><ul><li>初始化</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">完全初始化:</span><br><span class="line">int a[5] = &#123;1,2,3,4,5&#125;;</span><br><span class="line"></span><br><span class="line">不完全初始化,未被初始化的元素自动为零</span><br><span class="line">int a[5] = &#123;1,2,3&#125;;</span><br><span class="line"></span><br><span class="line">不初始化,所有元素是垃圾值</span><br><span class="line">int a[5];</span><br><span class="line"></span><br><span class="line">清零</span><br><span class="line">int a[5] = &#123;0&#125;;</span><br><span class="line"></span><br><span class="line">错误写法(重点):</span><br><span class="line">int a[5];</span><br><span class="line">a[5] = &#123;1,2,3,4,5&#125;; //错误 a[5]表示第六个元素,错</span><br><span class="line">只有在定义数组的同时才可以整体赋值,其他情况下整体赋值都是错误的</span><br><span class="line"></span><br><span class="line">int a[5] = &#123;1,2,3,4,5&#125;;</span><br><span class="line">a[5] = 100; //错误,因为没有a[5]这个元素,最大只有a[4]</span><br><span class="line"></span><br><span class="line">int a[5] = &#123;1,2,3,4,5&#125;;</span><br><span class="line">int b[5];</span><br><span class="line">如果要把a数组中的值全部复制给b数组</span><br><span class="line">错误的写法:</span><br><span class="line">b = a;// 错误</span><br><span class="line"></span><br><span class="line">正确的写法</span><br><span class="line">for (i=0; i&lt;5; ++i)</span><br><span class="line">b[i] = a[i];</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>赋值 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//功能:把一个元素数组全部倒过来</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">8</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line"><span class="keyword">int</span> t;<span class="comment">//两个个元素互换数互换:设置临时变量,t.然后t = a;a = b;b = t</span></span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span>;</span><br><span class="line">j = <span class="number">7</span>;</span><br><span class="line"><span class="keyword">while</span> (i &lt; j)</span><br><span class="line">&#123;</span><br><span class="line">t = a[i];</span><br><span class="line">a[i] = a[j];</span><br><span class="line">a[j] = t;</span><br><span class="line"></span><br><span class="line">i++;</span><br><span class="line">--j;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; ++i)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a[i]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">在VS中的输出结果是:</span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure>很少自己写算法,一般用工具,看书了解即可</li><li>排序</li><li>求最大/小值</li><li>倒置</li><li>查找</li><li>插入</li><li>删除</li></ul><ol start="2"><li>二维数组<br>例:int a[8] [6] 表示一个平面,8行6列<br>总共是12个元素,可以当做8行6列看待,这12个元素的名字依次是a[0] [0] a[0] [1] a[0] [2] a[0] [3]<br>a[1] [0] a[1] [1] a[1] [2] a[1] [3]<br>a[2] [0] a[2] [1] a[2] [2] a[2] [3]<br>a[i] [j] 表示第i+1行第j+1列元素<br>int a[m] [n]; 该二维数组右下角位置的元素只能是a[m-1] [n-1]</li></ol><p>初始化:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">int a[3] [4] = &#123;1,2,3,4,5,6,7,8,9,10,11,12&#125;;</span><br><span class="line">int a[3] [4] = &#123;</span><br><span class="line">&#123;1, 2, 3, 4&#125;,</span><br><span class="line">&#123;5, 6, 7, 8&#125;,</span><br><span class="line">&#123;9, 10, 11, 12&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>操作<br>    输出二维数组内容:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">4</span>] = &#123;</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;,</span><br><span class="line">&#123;<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125;,</span><br><span class="line">&#123;<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出数组内容</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">3</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; ++j)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-5d  &quot;</span>, a[i][j]); <span class="comment">//-表示左对齐,5表示5个光标的位置</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">在VS中的输出结果是:</span><br><span class="line"><span class="number">1</span>      <span class="number">2</span>      <span class="number">3</span>      <span class="number">4</span></span><br><span class="line"><span class="number">5</span>      <span class="number">6</span>      <span class="number">7</span>      <span class="number">8</span></span><br><span class="line"><span class="number">9</span>      <span class="number">10</span>     <span class="number">11</span>     <span class="number">12</span></span><br></pre></td></tr></table></figure><p>其他操作:(有时间再看)</p><p>对二维数组排序<br>求每一行的最大值<br>判断矩阵是否对称<br>矩阵的相乘</p><ol start="3"><li>多维数组<br>是否存在多维数组?<br>不存在<br>因为内存是线性唯一的</li></ol><p><em>n维数组可以当做每个元素是n-1维数组的一维数组</em><br>比如:<br>int a[3][4];<br>该数组是含有3个元素的一维数组<br>只不过每个元素都可以再分成4个小元素</p><p>int a[3][4][5];<br>该数组是含有3个元素的一维数组<br>只不过每个元素都是4行5列的二维数组</p><h1 id="函数-C语言第二个重点"><a href="#函数-C语言第二个重点" class="headerlink" title="函数(C语言第二个重点)"></a>函数(C语言第二个重点)</h1><p>//第一个是流程控制<br>函数的简单使用</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">// 功能分别求,ab之间最大值,cd之间最大值,ef之间最大值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//max是函数的名字,i和j是形式参数,简称形参 void表示函数没有返回值</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j)</span><span class="comment">//首先程序会找与形式参数类似的,个数也一致的函数例如max(a, b);与形参i,j个数相同,类型相同,然后调用里面的a,b发送给i,j</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//程序会把a发送给i,b发送给j,然后执行下面的if..else语句.执行完后内存空间就释放掉了,然后接着执行max(c, d);</span></span><br><span class="line"><span class="keyword">if</span> (i &gt; j)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, j);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span><span class="comment">//函数是从main函数进入,main函数出</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a, b, c, d, e, f;</span><br><span class="line">a = <span class="number">1</span>, b = <span class="number">2</span>, c = <span class="number">3</span>, d = <span class="number">9</span>, e = <span class="number">-5</span>, f = <span class="number">100</span>; <span class="comment">//逗号表达式一般不推荐使用</span></span><br><span class="line"><span class="comment">//i=(a = 1, b = 2, c = 3, d = 9, e = -5, f = 100); 则i=100</span></span><br><span class="line">max(a, b); <span class="comment">//把a,b的最大值输出 </span></span><br><span class="line">max(c, d);</span><br><span class="line">max(e, f);</span><br><span class="line"><span class="comment">//明显比以下的代码更好</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*为什么需要函数?因为都是求两个数之间的最大值,代码操作是重复的,只是数据不同,如果一万个数据,就要一万次重复,代码冗杂</span></span><br><span class="line"><span class="comment">所以需要函数</span></span><br><span class="line"><span class="comment">if (a &gt; b)</span></span><br><span class="line"><span class="comment">printf(&quot;%d\n&quot;, a);</span></span><br><span class="line"><span class="comment">else</span></span><br><span class="line"><span class="comment">printf(&quot;%d\n&quot;, b);</span></span><br><span class="line"><span class="comment">if (a &gt; b)</span></span><br><span class="line"><span class="comment">printf(&quot;%d\n&quot;, c);</span></span><br><span class="line"><span class="comment">else</span></span><br><span class="line"><span class="comment">printf(&quot;%d\n&quot;, d);</span></span><br><span class="line"><span class="comment">if (a &gt; b)</span></span><br><span class="line"><span class="comment">printf(&quot;%d\n&quot;, e);</span></span><br><span class="line"><span class="comment">else</span></span><br><span class="line"><span class="comment">printf(&quot;%d\n&quot;, f);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//总结:函数是一个工具,不是为了解决某一个问题,而是为了解决大量同类型的问题</span></span><br><span class="line">&#125;</span><br><span class="line">在VS中的输出结果是:</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="number">100</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>方法2:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">// 功能分别求,ab之间最大值,cd之间最大值,ef之间最大值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//max是函数的名字,i和j是形式参数,简称形参 void表示函数没有返回值</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">max1</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j)</span><span class="comment">//首先程序会找与形式参数类似的,个数也一致的函数例如max(a, b);与形参i,j个数相同,类型相同,然后调用里面的a,b发送给i,j</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//程序会把a发送给i,b发送给j,然后执行下面的if..else语句.执行完后内存空间就释放掉了,然后接着执行max(c, d);</span></span><br><span class="line"><span class="keyword">if</span> (i &gt; j)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, j);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max2</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j)</span> <span class="comment">//方法2</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (i &gt; j)</span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> j;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span><span class="comment">//函数是从main函数进入,main函数出</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a, b, c, d, e, f;</span><br><span class="line">a = <span class="number">1</span>, b = <span class="number">2</span>, c = <span class="number">3</span>, d = <span class="number">9</span>, e = <span class="number">-5</span>, f = <span class="number">100</span>; <span class="comment">//逗号表达式一般不推荐使用</span></span><br><span class="line"><span class="comment">//i=(a = 1, b = 2, c = 3, d = 9, e = -5, f = 100); 则i=100</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, max2(a, b));<span class="comment">//方法2</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, max2(c, d));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, max2(e, f));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*max1(a, b); //把a,b的最大值输出 </span></span><br><span class="line"><span class="comment">max1(c, d);</span></span><br><span class="line"><span class="comment">max1(e, f);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">在VS中的输出结果是:</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="number">100</span></span><br></pre></td></tr></table></figure><h2 id="为什么需要函数"><a href="#为什么需要函数" class="headerlink" title="为什么需要函数"></a>为什么需要函数</h2><ul><li>避免了重复性操作</li><li>有利于程序的模块化<h2 id="什么叫做函数"><a href="#什么叫做函数" class="headerlink" title="什么叫做函数"></a>什么叫做函数</h2>逻辑上:能够完成特定功能的独立的代码块<br>物理上:<br>能够接收数据[当然也可以不接受数据]<br>能够对接收的数据进行处理<br>能够将数据处理的结果返回[当然也可以不返回任何值]</li></ul><p>总结:</p><ol><li>函数是个工具,它是为了解决大量类似问题而设计的</li><li>函数也可以当做一个黑匣子<br>什么是void函数<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">void</span>)</span> <span class="comment">//括号中的void表示该函数不能接受数据</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//int表示函数返回值是int类型</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">10</span>;<span class="comment">//向主调函数返回10</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">g</span><span class="params">(<span class="keyword">void</span>)</span> <span class="comment">//函数名前面的void表示该函数没有返回值</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//return 10; //error 因为前面加了void,不能有返回值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">88</span>;</span><br><span class="line"></span><br><span class="line">j = f();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, j);</span><br><span class="line"></span><br><span class="line"><span class="comment">//j = g(); 报错,因为g函数没有返回值</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">在VS中的输出结果是:</span><br><span class="line"><span class="number">10</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="如何定义函数"><a href="#如何定义函数" class="headerlink" title="如何定义函数"></a>如何定义函数</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">函数的返回值 函数的名字(函数的形参列表)</span><br><span class="line">&#123;</span><br><span class="line">函数的执行体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>函数定义的本质是详细描述函数之所以能够实现某个特定功能的具体方法</li><li>return 表达式; 的含义:<br>break和return的区别:<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//程序功能:return和break的区别</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;大家辛苦了\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="comment">//return; 只输出了大家辛苦了,因为return是终止整个函数,break是终止循环</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;同志们好!\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">f();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">在VS中的输出结果是:</span><br><span class="line">大家辛苦了</span><br><span class="line">同志们好!</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><ul><li>终止被调函数,向主调函数返回表达式的值</li><li>如果表达式为空,则只终止函数,不向主调函数返回任何值</li><li><em>break是用来终止循环和switch的,return是用来终止函数的</em><br>例子:<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">void f()//加了void,return不加值</span><br><span class="line">&#123;</span><br><span class="line">return;//只终止函数,不向主调函数返回任何值</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int f()</span><br><span class="line">&#123;</span><br><span class="line">return 10;//终止函数并向主调函数返回10</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ol start="3"><li>函数返回值的类型也称为函数的类型,因为如果函数名前的返回值类型和函数执行体中的 return 表达式; 中表达式的类型不同的话,则最终函数返回值的类型 以函数名前的返回值为准<br>例子:<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">f</span><span class="params">()</span><span class="comment">//函数的类型以前面int为准,而不是return</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">10.5</span>;   <span class="comment">//因为函数的返回值类型是int 所以最终返回的是10而不是10.5</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">99</span>;</span><br><span class="line"><span class="keyword">double</span> x = <span class="number">6.6</span>;</span><br><span class="line"></span><br><span class="line">x = f();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lf\n&quot;</span>, x);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">在VS中的输出结果是:</span><br><span class="line"><span class="number">10.000000</span></span><br></pre></td></tr></table></figure>函数举例03-判断一个数是否为素数<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//程序功能:判断一个数字是否为素数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">IsPrime</span><span class="params">(<span class="keyword">int</span> val)</span> <span class="comment">//布尔类型bool返回0和1, Isprime意思是这是素数</span></span></span><br><span class="line"><span class="function"><span class="comment">//所有函数都要写在main函数前面</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">2</span>; i &lt; val; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (val % i == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (i == val)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> m;</span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (IsPrime(m))</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Yes!\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;NO!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//上面是使用函数,下面是常规方法</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">for (i = 2; i &lt; val; ++i)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">if (val % i == 0)</span></span><br><span class="line"><span class="comment">break;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">if (i == val)</span></span><br><span class="line"><span class="comment">printf(&quot;Yes!\n&quot;);</span></span><br><span class="line"><span class="comment">else</span></span><br><span class="line"><span class="comment">printf(&quot;no\n&quot;);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">在VS中的输出结果是:</span><br><span class="line"><span class="number">6</span></span><br><span class="line">NO!</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="函数的分类"><a href="#函数的分类" class="headerlink" title="函数的分类"></a>函数的分类</h2></li><li>有参函数和无参函数</li><li>有返回值和无返回值函数</li><li>库函数和用户自定函数</li><li>值传递函数和地址传递函数</li><li>普通函数和主函数(main函数)</li></ol><p>下面是重点:<br><em>一个程序必须有且只能有一个主函数</em><br><em>主函数可以调用普通函数,普通函数不能调用主函数</em><br><em>普通函数可以相互调用</em><br><em>主函数是程序的入口,也是程序的出口</em></p><h2 id="注意的问题"><a href="#注意的问题" class="headerlink" title="注意的问题"></a>注意的问题</h2><p>函数调用和函数定义的顺序<br>如果函数调用写在了函数定义的前面,则必须加函数前置声明<br>函数前置声明的作用:</p><ol><li>告诉编译器即将可能出现的若干个字母代表的是一个函数</li><li>告诉编译器即将可能出现的若干个字母所代表的函数的形参和返回值的具体情况</li><li>函数声明是一个语句,末尾必须加分号</li><li>对库函数的声明是通过 # include &lt;库函数所在的文件的名字.h&gt; 来实现的</li></ol><p>函数的声明1<br>如果想把函数放在main函数下面,需要在前面声明函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">void</span>)</span></span>; <span class="comment">//函数声明,分号不能丢掉</span></span><br><span class="line"><span class="comment">//void f(int) //报错,函数不能接受0个参数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">f();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;哈哈!\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>函数的声明2</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//一定要明白该程序为什么是错误的</span></span><br><span class="line"><span class="comment">//void f(void);  一定要明白这条生效后程序为什么正确了</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">g</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">f();  <span class="comment">//报错,因为函数f的定义放在了调用f语句的后面,所以语法出错</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;哈哈!\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">g();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="函数的形参和实参"><a href="#函数的形参和实参" class="headerlink" title="函数的形参和实参"></a>函数的形参和实参</h2><p>个数相同,位置一一对应,数据类型必须相互兼容</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j)</span> <span class="comment">//形参</span></span></span><br><span class="line"><span class="function"><span class="comment">//void f(int i, float x)  位置要与下面对应</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//f(5); 报错,函数形参和实参的个数必须相同,位置也要一一对应,类型也是</span></span><br><span class="line">f(<span class="number">5</span>, <span class="number">6</span>); <span class="comment">//实参</span></span><br><span class="line"><span class="comment">//f(5.5, 6); //位置也要与上面对应</span></span><br><span class="line"><span class="comment">//f(asdada, 6); //报错,数据类型必须相互兼容</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="如何在软件开发中合理的设计函数来解决实际问题"><a href="#如何在软件开发中合理的设计函数来解决实际问题" class="headerlink" title="如何在软件开发中合理的设计函数来解决实际问题"></a>如何在软件开发中合理的设计函数来解决实际问题</h2><ol><li>一个函数的功能尽量独立,单一</li><li>多学习,多模仿牛人的代码:例如一个程序用几个函数需要经验</li><li>函数是语言的基本单位,类是Java,C#,C++的基本单位</li></ol><h2 id="常用的系统函数"><a href="#常用的系统函数" class="headerlink" title="常用的系统函数"></a>常用的系统函数</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">double sqrt(double x);</span><br><span class="line">求x的平方根</span><br><span class="line"></span><br><span class="line">int abs(int x)</span><br><span class="line">求x的绝对值</span><br><span class="line"></span><br><span class="line">double fabs(double x)</span><br><span class="line">求x的绝对值</span><br></pre></td></tr></table></figure><h2 id="专题-递归-到数据结构在学"><a href="#专题-递归-到数据结构在学" class="headerlink" title="专题 :递归:到数据结构在学"></a>专题 :递归:到数据结构在学</h2><p>需要学习栈(前置知识)<br>栈:就类似一个杯子,可以从一个口入,一个口出.先进后出的存储结果都叫栈<br>压栈:把东西放到杯子里 出栈:把杯子的东西倒出去</p><h1 id="变量的作用域和存储方式"><a href="#变量的作用域和存储方式" class="headerlink" title="变量的作用域和存储方式"></a>变量的作用域和存储方式</h1><ul><li>按作用域分 (重点)</li></ul><ol><li><p>全局变量<br>在所有函数外部定义的变量就叫全局变量<br>全局变量的使用范围:从定义位置开始到整个程序结束</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">void g()</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">printf(&quot;k = %d\n&quot;, k);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//报错,全局变量只在它下面生效</span></span><br><span class="line"><span class="keyword">int</span> k = <span class="number">1000</span>;</span><br><span class="line"><span class="comment">//int k就是全局变量,可以在它下面的函数使用</span></span><br><span class="line"><span class="comment">//但是不能在它代码上面的函数使用</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">20</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>局部变量<br>在一个函数内部定义的变量或者函数的形参 都统称为局部变量<br>局部变量的使用范围:只能在本函数内部使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">void f(int i)</span><br><span class="line">&#123;</span><br><span class="line">int j = 20;</span><br><span class="line">&#125;</span><br><span class="line">i和j都属于局部变量</span><br></pre></td></tr></table></figure></li></ol><h2 id="局部变量和全局变量命名的冲突问题"><a href="#局部变量和全局变量命名的冲突问题" class="headerlink" title="局部变量和全局变量命名的冲突问题"></a>局部变量和全局变量命名的冲突问题</h2><p>在一个函数内部如果定义的局部变量的名字和全局变量名一样时,局部变量会屏蔽掉全局变量</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i = <span class="number">99</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;i = %d\n&quot;</span>, i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">f(<span class="number">8</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">在VS中的输出结果是:</span><br><span class="line">i = <span class="number">8</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>按变量的存储方式 (自行选择学习,嵌入式开发才是重点)</li></ul><ol><li>静态变量</li><li>自动变量</li><li>寄存器变量 :寄存器:类似内存条,硬盘,cpu里面也有存放数据的寄存器</li></ol>]]></content>
      
      
      <categories>
          
          <category> C语言基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Html基础</title>
      <link href="/2021/06/21/HTML%E5%9F%BA%E7%A1%80/"/>
      <url>/2021/06/21/HTML%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML-语言简述"><a href="#HTML-语言简述" class="headerlink" title="HTML 语言简述:"></a>HTML 语言简述:</h1><p><strong>HTML，全称“Hyper Text Markup Language（超文本标记语言),HTML 是一种非常容易入门制作网页描述性语言</strong></p><h2 id="HTML-基本结构"><a href="#HTML-基本结构" class="headerlink" title="HTML 基本结构"></a>HTML 基本结构</h2><p><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/html-illustration/htmljiegou.png" alt="html结构图"></p><hr><h1 id="HTML-三大基本标签"><a href="#HTML-三大基本标签" class="headerlink" title="HTML 三大基本标签:"></a>HTML 三大基本标签:</h1><h2 id="1-HTML-标签"><a href="#1-HTML-标签" class="headerlink" title="(1)HTML 标签"></a>(1)HTML 标签</h2><p><strong>从&lt;html&gt; 开始到&lt;/html&gt; 结束</strong></p><h2 id="2-head-标签"><a href="#2-head-标签" class="headerlink" title="(2)head 标签"></a>(2)head 标签</h2><p><strong>head 标签代表头部标签,往往定义一些特殊内容,通常浏览器内不可见</strong></p><h3 id="内部标签-head-内部标签非常重要且常用"><a href="#内部标签-head-内部标签非常重要且常用" class="headerlink" title="内部标签 (head 内部标签非常重要且常用)"></a><head>内部标签 (head 内部标签非常重要且常用)</h3><p><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/html-illustration/headbiaoqian.png" alt="head内部标签图"></p><h2 id="3-body-标签"><a href="#3-body-标签" class="headerlink" title="(3)body 标签"></a>(3)body 标签</h2><body>标签定义网页展示内容,这些内容往往都是"可见内容"(浏览器可见)<p><strong>body 标签超级重要，以下知识内容全属于body标签</strong></p><hr><h1 id="段落与文字"><a href="#段落与文字" class="headerlink" title="段落与文字"></a>段落与文字</h1><h2 id="一-、段落标签"><a href="#一-、段落标签" class="headerlink" title="(一)、段落标签"></a>(一)、段落标签</h2><h3 id="（1）段落与文字标签"><a href="#（1）段落与文字标签" class="headerlink" title="（1）段落与文字标签"></a>（1）段落与文字标签</h3><h3 id="表1-段落与文字标签"><a href="#表1-段落与文字标签" class="headerlink" title="表1   段落与文字标签"></a>表1   段落与文字标签</h3><p><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/html-illustration/duanluowenzi-biaoqian.png" alt="段落与文字标签"></p><h3 id="表2-文本格式化标签"><a href="#表2-文本格式化标签" class="headerlink" title="表2   文本格式化标签"></a>表2   文本格式化标签</h3><p><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/html-illustration/Text-formatting.png" alt="文本格式化标签">  </p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS基础</title>
      <link href="/2021/06/21/CSS%E5%9F%BA%E7%A1%80/"/>
      <url>/2021/06/21/CSS%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="一、CSS是什么？"><a href="#一、CSS是什么？" class="headerlink" title="一、CSS是什么？"></a>一、CSS是什么？</h1><p>css (Cascading Style sheets),术语叫做<em>层叠样式表</em>,是用来控制网页外观的.</p><h2 id="HTML-CSS-JS-的关系"><a href="#HTML-CSS-JS-的关系" class="headerlink" title="HTML/CSS/JS 的关系"></a>HTML/CSS/JS 的关系</h2><ul><li>HTML决定了网页的结构和内容(决定看到什么),相当于人的身体</li><li>CSS决定网页呈现给用户的模样(决定好不好看),相当于给人穿衣服,化妆</li><li>以上是标记语言–描述类语言</li><li>而JS是脚本语言、编程类语言</li><li>JS实现业务逻辑和页面控制（决定功能），相当于人的各种动作</li></ul><h1 id="二、css的引入方式"><a href="#二、css的引入方式" class="headerlink" title="二、css的引入方式"></a>二、css的引入方式</h1><p>在HTML中引入CSS方式有3种：<br>（1）外部样式表； （2）内部样式表； （3）内联样式表；</p><h2 id="1、外部样式表"><a href="#1、外部样式表" class="headerlink" title="1、外部样式表"></a>1、外部样式表</h2><p>外部样式表是最理想的CSS引入方式。在实际开发中，为了提升网站的性能和维护性，一般都是使用外部样式表。<br>“外部样式表”总而言之就是把CSS代码和HTML代码都单独放在不同文件中，然后在HTML文档中使用link标签来引用CSS样式表。<br>在需要应用样式到多个页面时，外部样式表是最理想的选择。使用样式表，你就可以更改一个CSS文件来改变整个网站的外观。<br>外部样式表在单独文件中定义，并且在标签中使用link标签来引用。举例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>css01<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;index.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">       </span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><em>注意</em>:外部样式表都是在<em>head标签</em>内使用<em>link标签</em>来引入的。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>求1~100之间的奇数和与偶数之和</title>
      <link href="/2021/06/17/(C%E7%BB%83%E4%B9%A0)%E6%B1%821~100%E4%B9%8B%E9%97%B4%E7%9A%84%E5%A5%87%E6%95%B0%E5%92%8C%E4%B8%8E%E5%81%B6%E6%95%B0%E4%B9%8B%E5%92%8C/"/>
      <url>/2021/06/17/(C%E7%BB%83%E4%B9%A0)%E6%B1%821~100%E4%B9%8B%E9%97%B4%E7%9A%84%E5%A5%87%E6%95%B0%E5%92%8C%E4%B8%8E%E5%81%B6%E6%95%B0%E4%B9%8B%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">求1~100之间的奇数和与偶数之和</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> sum1 = <span class="number">0</span>;<span class="comment">//奇数和</span></span><br><span class="line"><span class="keyword">int</span> sum2 = <span class="number">0</span>;<span class="comment">//偶数和</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">101</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">sum1 += i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">sum2 += i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;奇数和 =%d\n&quot;</span>, sum1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;偶数和 =%d\n&quot;</span>, sum2);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">输出:</span><br><span class="line">奇数和 =<span class="number">2500</span></span><br><span class="line">偶数和 =<span class="number">2550</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>求1~100之间的奇数的平均值</title>
      <link href="/2021/06/17/(C%E7%BB%83%E4%B9%A0)%E6%B1%821~100%E4%B9%8B%E9%97%B4%E7%9A%84%E5%A5%87%E6%95%B0%E7%9A%84%E5%B9%B3%E5%9D%87%E5%80%BC/"/>
      <url>/2021/06/17/(C%E7%BB%83%E4%B9%A0)%E6%B1%821~100%E4%B9%8B%E9%97%B4%E7%9A%84%E5%A5%87%E6%95%B0%E7%9A%84%E5%B9%B3%E5%9D%87%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">求1~100之间奇数的平均值</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">求1~100之间奇数的平均值</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;<span class="comment">//个数一般用cnt表示 cnt=count</span></span><br><span class="line"><span class="keyword">float</span> avg;<span class="comment">//average 平均值的缩写</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">101</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">1</span>)<span class="comment">//如果i能被2整除余1,就是奇数</span></span><br><span class="line">sum = sum + i;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">1</span>)</span><br><span class="line">++cnt;<span class="comment">//奇数的个数</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">avg = <span class="number">1.0</span> * sum / cnt;<span class="comment">//1.0默认是double类型</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;sum = %d\n&quot;</span>, sum);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;cnt = %d\n&quot;</span>, cnt);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;avg = %f\n&quot;</span>, avg);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">输出:</span><br><span class="line">sum = <span class="number">2500</span></span><br><span class="line">cnt = <span class="number">50</span></span><br><span class="line">avg = <span class="number">50.000000</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>求1~100之间的奇数的个数</title>
      <link href="/2021/06/17/(C%E7%BB%83%E4%B9%A0)%E6%B1%821~100%E4%B9%8B%E9%97%B4%E7%9A%84%E5%A5%87%E6%95%B0%E7%9A%84%E4%B8%AA%E6%95%B0/"/>
      <url>/2021/06/17/(C%E7%BB%83%E4%B9%A0)%E6%B1%821~100%E4%B9%8B%E9%97%B4%E7%9A%84%E5%A5%87%E6%95%B0%E7%9A%84%E4%B8%AA%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">求1~100之间奇数的个数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;<span class="comment">//个数一般用cnt表示 cnt=count</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">101</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">1</span>)<span class="comment">//如果i能被2整除余1,就是奇数</span></span><br><span class="line"></span><br><span class="line">++cnt;<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;cnt = %d\n&quot;</span>, cnt);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">输出:cnt = <span class="number">50</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>求1~100之间的奇数和</title>
      <link href="/2021/06/17/(C%E7%BB%83%E4%B9%A0)%E6%B1%821~100%E4%B9%8B%E9%97%B4%E7%9A%84%E5%A5%87%E6%95%B0%E5%92%8C/"/>
      <url>/2021/06/17/(C%E7%BB%83%E4%B9%A0)%E6%B1%821~100%E4%B9%8B%E9%97%B4%E7%9A%84%E5%A5%87%E6%95%B0%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">求1~100之间奇数和</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">1</span>)<span class="comment">//如果i能被2整除余1,就是奇数</span></span><br><span class="line"></span><br><span class="line">sum = sum + i;<span class="comment">//1~100所有奇数相加</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;sum = %d\n&quot;</span>, sum);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">输出:sum = <span class="number">2500</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>if的常见问题解析</title>
      <link href="/2021/06/13/if%E8%AF%AD%E5%8F%A5%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E6%9E%90/"/>
      <url>/2021/06/13/if%E8%AF%AD%E5%8F%A5%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>if的常见问题解析<br>    1. 空语句的问题</p><pre><code>                if (3 &gt; 2);                等价于                if (3 &gt; 2)                    ;   //这是一个空语句2 .                                if (表达式1)                    A;                else                    B;                是正确的                if (表达式1);   //←不能加分号,加了之后if执行空语句,而没有else开头的语句,所以会报错                    A;                else                    B;                    是错误的3.                                if (表达式1)                    A;                else if (表达式2)                    B;                else if (表达式3)                    C;                else                    D;                即便表达式1和2都成立,也只会执行A语句4.                                 if (表达式1)                    A;                else if (表达式2)                    B;                else if (表达式3)                    C;                //删掉else,这样写语法不会出错,但逻辑上有漏洞5.                                 if (表达式1)                    A;                else if (表达式2)                    B;                else if (表达式3)                    C;                else (表达式4)  //if不能省略否则出错                    D;                这样写是不对的,正确的写法是:                    要么去掉(表达式4)                    要么在else 后面加if6.                                if (表达式1)                    A;                else if (表达式2)                    B;                else if (表达式3)                    C;                else (表达式4);  //←加了分号逻辑会错误                    D;                                这样写语法不会出错,但逻辑上是错误的                else (表达式4);                    D;                等价于                else                    (表达式4);                D;</code></pre>]]></content>
      
      
      <categories>
          
          <category> C语言基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常见问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>This function or variable may be unsafe</title>
      <link href="/2021/06/12/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E6%8A%A5%E9%94%9901-This%20function%20or%20variable%20may%20be%20unsafe/"/>
      <url>/2021/06/12/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E6%8A%A5%E9%94%9901-This%20function%20or%20variable%20may%20be%20unsafe/</url>
      
        <content type="html"><![CDATA[<p>在使用visual studio学习C语言的过程中,经常遇到”This function or variable may be unsafe.” 无法运行程序</p><p>问题现象:</p><p><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/html-illustration/unsafe-error01.png"></p><p>使用了scanf函数:程序报错:<br>error C4996: ‘scanf’: This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.</p><p>翻译一下:<br>“scanf”：此函数或变量可能不安全。考虑使用scanf_s代替。要禁用弃用警告，请使用_CRT_SECURE_NO_WARNINGS。有关详细信息，请参阅联机帮助。</p><p>问题原因:<br>C语言的标准函数中,一些读取或写入内存的函数存在内存越界的问题,从而使得内存数据变得不安全.如scanf、gets、strcat等函数都存在着这样的问题.<br>但在学习中几乎所有的课本或教程都使用原来的标准函数.所以当我们在vs中使用原始的函数,编译器就会报错</p><p>以下是解决办法:<br>编译器给出的错误提示中,实际上已经给我们了一个明确的解决方案,只需要在程序的开头添加一个宏定义就能解决</p><ol><li><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS </span></span><br><span class="line"><span class="comment">// #define _CRT_SECURE_NO_WARNINGS 该语句必须在# include &lt;stdio.h&gt; 之前,否则还是会报错</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span> </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br></pre></td></tr></table></figure></li><li><p>(推荐)<br>第一种方法能够顺利解决问题,但是在实际的应用中,每次在使用到相关函数时,都需要在文件前面,或者在头文件中添加相关宏,未免太麻烦<br>所以,我们可以对vs的项目进行设置,可以一劳永逸的解决这个问题<br>注:(仅适用于当前项目,其他项目仍然需要再次进行相同配置才能生效)</p></li></ol><p>具体步骤如下:</p><ol><li>在项目属性设置中找到选项卡配置属性→C/C++→预处理器;</li><li>在右侧的参数中找到预处理器定义，编辑其参数;</li><li>在参数的末尾添加定义_CRT_SECURE_NO_WARNINGS</li></ol><p>图示:<br><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/html-illustration/This-function-or-variable-may-be-unsafe-jiejue01.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 报错 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言学习笔记01</title>
      <link href="/2021/06/11/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B001/"/>
      <url>/2021/06/11/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B001/</url>
      
        <content type="html"><![CDATA[<h1 id="基本的输入和输出函数的用法"><a href="#基本的输入和输出函数的用法" class="headerlink" title="基本的输入和输出函数的用法"></a>基本的输入和输出函数的用法</h1><h2 id="printf的用法"><a href="#printf的用法" class="headerlink" title="printf的用法"></a>printf的用法</h2><p>printf() 输出 //重点<br>将变量的内容输出到显示器上</p><h3 id="输出控制符包含如下"><a href="#输出控制符包含如下" class="headerlink" title="输出控制符包含如下"></a>输出控制符包含如下</h3><pre><code>%d                  --  int%ld                 --  long int%c                  --  char%f                  --  float%lf                 --  double%x(或者%#x或者%#X)   --  int 或 long int 或 short int%o                  --  同上%s                  --  字符串</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">47</span>; <span class="comment">//47是十进制</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%x\n&quot;</span>, x);  <span class="comment">//输出结果是:   2f</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%X\n&quot;</span>, x);  <span class="comment">//输出结果是:   2F</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%#X\n&quot;</span>, x); <span class="comment">//输出结果是:   0X2F 推荐使用</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%#x\n&quot;</span>, x); <span class="comment">//输出结果是:   0x2f</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure><p><em>所以推荐使用%#X,因为当输出2f或2F容易与其他数字或进制混淆</em></p><pre><code>printf四种用法    1. printf(&quot;字符串\n&quot;);    2. printf(&quot;输出控制符&quot;,);    3. printf(&quot;输出控制符1 输出控制符2....&quot;, 输出参数1, 输出参数2, ....); 输出控制符和输出参数的个数必须一一对应    4. printf(&quot;输出控制符 非输出控制符&quot;, 输出参数);</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;哈哈!\n&quot;</span>);  <span class="comment">//\n表示换行 第一种用法</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,  i); <span class="comment">//第二种用法 i是输出参数,%d是控制符表示十进制</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//为什么10已经是十进制还要用%d输出?</span></span><br><span class="line">    <span class="comment">//因为i = 10存储的是10的二进制代码,必须指定二进制代码以什么类型的输出</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">5</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, j, k); <span class="comment">//第三种用法</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, j, k); <span class="comment">//error 输出控制符和输出参数的个数不匹配</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;i = %d, j = %d\n&quot;</span>, j k); <span class="comment">//第四种用法,提倡使用</span></span><br><span class="line">   </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="为什么需要输出控制符"><a href="#为什么需要输出控制符" class="headerlink" title="为什么需要输出控制符"></a>为什么需要输出控制符</h3><ol><li>01组成的代码可以表示数据也可以表示指令</li><li>如果01组成的代码表示的是数据的话,那么同样的01代码组合以不同的格式输出就会有不同的输出结果<br>所以需要输出控制符指定代码输出的格式</li></ol><h2 id="scanf的用法"><a href="#scanf的用法" class="headerlink" title="scanf的用法"></a>scanf的用法</h2><p>scanf() : 通过键盘将数据输入到变量中<br>scanf() 输入 //java已经没有<br>    两种用法:<br>        用法一:<br>        scanf(“输入控制符”, 输入参数);<br>        功能:   将从键盘输入的字符转化为输入控制符所规定格式的数据,然后存入以输入参数的值为地址的变量中<br>        用法二:<br>        scanf(“非输入控制符 输入控制符”, 输入参数);<br>        功能:   将从键盘输入的字符转化为输入控制符所规定格式的数据,然后存入以输入参数的值为地址的变量中<br>        非输入控制符必须原样输入</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;i);    <span class="comment">//&amp;i 表示i的地址 &amp;是一个取地址符 -- 一个地址对应一个内存空间, &amp;i相当于一个地址门牌号,scanf是将手输入的东西放到地址所对应的内存空间中</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;i = %d\n&quot;</span>, i);</span><br><span class="line">    <span class="comment">//为什么scanf也要%d?</span></span><br><span class="line">    <span class="comment">//因为操作系统接收键盘数据当成字符,不是整型数据</span></span><br><span class="line">    所以也需要%d转换成十进制</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>含有非输入控制符的用法： //类似邮箱后面必须加后缀@xxx.com</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;m%d&quot;</span>, &amp;i);   <span class="comment">//m123 正确的输入 123非法的输入</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;i = %d\n&quot;</span>,  i);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一次给多个变量赋值：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j, k;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入三个值, 中间以逗号分隔: &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d, %d, %d&quot;</span>, &amp;i, &amp;j, &amp;k);     </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;i = %d j = %d k = %d\n&quot;</span>, i, j, k);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>报错01: 原因:一个项目只能有一个main函数<br><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/html-illustration/c-p4201.png" alt="报错01"></p><p>解决:把另一个main改成main1或者换成别的项目</p><h3 id="如何使用scanf编写出高质量代码"><a href="#如何使用scanf编写出高质量代码" class="headerlink" title="如何使用scanf编写出高质量代码"></a>如何使用scanf编写出高质量代码</h3><ol><li>使用scanf之前最好先使用printf提示用户以什么样的方式来输入</li><li>scanf中尽量不要使用非输入控制符,尤其不要用\n</li><li>应该编写代码对用户的非法输入做适当的处理</li></ol><p>3例子:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//功能-对用户非法输入进行处理</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;i);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;i = %d\n&quot;</span>, i);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> ( (ch=getchar()) !=<span class="string">&#x27;\n&#x27;</span>)  <span class="comment">//getchar是获取用户输入的字符</span></span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    <span class="keyword">int</span> j;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d,&quot;</span> &amp;j);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;j = %d\n&quot;</span>, j);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;     </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><p>算术运算符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+   -   *   /(除)   %(取余数)</span><br></pre></td></tr></table></figure><p>关系运算符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;   &gt;=(大于等于)  &lt;   &lt;=(小于等于)  !=(不等于)  ==(等于)</span><br></pre></td></tr></table></figure><p>逻辑运算符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">!(非)   &amp;&amp;(并且)    ||(或)</span><br><span class="line">!真     (假) //!相当于非的意思</span><br><span class="line">!假     (真)</span><br><span class="line">真&amp;&amp;真  (真)</span><br><span class="line">真&amp;&amp;假  (假)</span><br><span class="line">假&amp;&amp;真  (假)</span><br><span class="line">假&amp;&amp;假  (假)</span><br><span class="line"></span><br><span class="line">真||假  (真)</span><br><span class="line">假||真  (真)</span><br><span class="line">真||真  (真)</span><br><span class="line">假||假  (假)</span><br><span class="line"></span><br><span class="line">C语言对真假的处理</span><br><span class="line">    非零是真</span><br><span class="line">    零是假</span><br><span class="line"></span><br><span class="line">    真是1表示</span><br><span class="line">    假是0表示</span><br><span class="line"> </span><br><span class="line"> &amp;&amp;左边的表达式为假,右边的表达式肯定不会执行</span><br><span class="line"> ||左边的表达式为真,右边的表达式肯定不会执行   </span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">20</span>;</span><br><span class="line">    <span class="keyword">int</span> m;</span><br><span class="line"></span><br><span class="line">    m = (<span class="number">3</span>&gt;<span class="number">2</span>) &amp;&amp; (k=<span class="number">8</span>); <span class="comment">//判断真假m的值要么0要么1</span></span><br><span class="line">    <span class="comment">//返回结果:m = 1, k = 8 &amp;&amp;是并且的意思,有一个真则为真</span></span><br><span class="line">    m = (<span class="number">3</span>&gt;<span class="number">2</span>) &amp;&amp; (k=<span class="number">0</span>);</span><br><span class="line">    <span class="comment">//返回结果:m = 0, k = 0   k=0是假有一个假则为假     </span></span><br><span class="line">    m = (<span class="number">1</span>&gt;<span class="number">2</span>) &amp;&amp; (k=<span class="number">5</span>);</span><br><span class="line">    <span class="comment">//返回结果:m = 0, k = 20  因为&amp;&amp;左边的表达式为假,右边的表达式肯定不会执行</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;m = %d, k = %d\n&quot;</span>, m, k); </span><br><span class="line">    <span class="comment">//不含有分号的是表达式 含有分号的是语句</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">赋值运算符</span><br><span class="line">=   +=  *=  /=  -=</span><br><span class="line">a+=3相当于a=a+3</span><br><span class="line">a/3=3相当于a=a/3</span><br></pre></td></tr></table></figure><p>优先级别:<br>    算术&gt;关系&gt;逻辑&gt;赋值</p><p>附录的一些琐碎的运算符知识<br>    自增 自减 三目运算符 逗号表达式</p><p>int k = 3+2<em>4&amp;&amp;5||6-4+=6;<br>难全部记住,忘掉可翻书谭浩强C第四版p378页<br>别人无法判断优先级可加()提示<br>int k = (3+2</em>4) &amp;&amp; (5||6-4) * 6;</p><h3 id="除法与取余运算符"><a href="#除法与取余运算符" class="headerlink" title="除法与取余运算符"></a>除法与取余运算符</h3><ol><li>除法/的运算结果和运算对象的数据类型有关,两个数都是int,则商就是int,若商有小数,则截取小数部分;<br>被除数和除数中只要有一个或两个都是浮点型数据,则商也是浮点型,不截取小数部分</li></ol><ul><li>如:16/5==3    16/5.0==3.2000  -13/4==-4</li><li>13/-3==4  3/5==0  5/3==1</li><li>最典型的例题就是求s=1+1/2+1/3+1/4+1/5……+1/100的值,见下文</li></ul><ol start="2"><li>取余%的运算对象必须是整数,结果是整除后的余数,其余数的符号与被除数相同</li></ol><ul><li>如:   13%3==1     13%-3==1    -13%3==-1</li><li><pre><code>  -13%23==-13 3%5==3</code></pre></li></ul><p>测试取余运算符的例子</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d %d %d %d\n&quot;</span>,<span class="number">3</span>%<span class="number">3</span>,<span class="number">13</span>%<span class="number">-3</span>,<span class="number">-13</span>%<span class="number">3</span>,<span class="number">-13</span>%<span class="number">-3</span>,<span class="number">-13</span>%<span class="number">23</span>,<span class="number">3</span>%<span class="number">5</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//总结: 去余%的运算对象必须是整数,结果后是整除后的余数,其余数的符号与被除数相同</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="自增或自减运算符"><a href="#自增或自减运算符" class="headerlink" title="自增或自减运算符"></a>自增或自减运算符</h3><pre><code>分类:    前自增      --  ++i    后自增      --  i++    前自增和后自增的异同:    相同:        最终都使i的值加1    不同:        前自增整体表达式的值是i加1之后的值        后自增整体表达式的值是i加1之前的值</code></pre><p>为什么需要自增<br>    代码更精练<br>    自增的速度更快</p><p>学习自增要明白的几个问题</p><ol><li>我们编程应该尽量屏蔽前自增和后自增的差别</li><li>自增表达式最好不要作为一个更大的表达式的一部分来使用<br>或者说,i++ 和 ++i 单独成一个语句,不要把它作为一个完整复合语句的一部分来使用<br> 例如:<br> int m = i++ + ++i + i + i++; //这样写不但是不规范的代码,而且是不可移植的代码<br> printf(“%d %d %d”, i++, ++i, i); //同上</li></ol><p>不同机器运行结果问题不同,因为顺序点的问题</p> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> j;</span><br><span class="line"><span class="keyword">int</span> k;</span><br><span class="line"><span class="keyword">int</span> m;</span><br><span class="line"></span><br><span class="line">i = j = <span class="number">3</span>; <span class="comment">//等价于i = 3; j = 3;</span></span><br><span class="line">k = i++;</span><br><span class="line">m = ++j;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;i = %d, j =%d, k = %d, m = %d\n&quot;</span>, i, j, k, m);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">在VS中的输出结果是:</span><br><span class="line">i = <span class="number">4</span>, j =<span class="number">4</span>, k = <span class="number">3</span>, m = <span class="number">4</span></span><br><span class="line"></span><br><span class="line">总结:</span><br><span class="line">    前自增整体表达式的值是i加<span class="number">1</span>之后的值</span><br><span class="line">    后自增整体表达式的值是i加<span class="number">1</span>之前的值</span><br><span class="line"> ```           </span><br><span class="line">### 三目运算符</span><br><span class="line">    A ? B : C</span><br><span class="line">    等价于</span><br><span class="line">        <span class="keyword">if</span> (A)</span><br><span class="line">            B;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            C;    </span><br><span class="line">### 逗号表达式</span><br><span class="line">格式:</span><br><span class="line">(A, B, C, D)</span><br><span class="line">功能:</span><br><span class="line">    从左到右执行</span><br><span class="line">    最终表达式的值是最后一项的值</span><br><span class="line">```C</span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">i = (j++, ++j, j + <span class="number">2</span>, j - <span class="number">3</span>);<span class="comment">//从左到右执行</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);<span class="comment">//j+2等于6是临时值,只j仍然等于4,所以j-3等于1是程序的输出结果,而不是3,j+=2结果才是等于3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">在VS中的输出结果是:<span class="number">1</span></span><br></pre></td></tr></table></figure><h1 id="流程控制-是学习C语言的第一个重点"><a href="#流程控制-是学习C语言的第一个重点" class="headerlink" title="流程控制(是学习C语言的第一个重点)"></a>流程控制(是学习C语言的第一个重点)</h1><ul><li>什么是流程控制<br>  程序代码执行的顺序</li></ul><p>流程控制的分类</p><ol><li>顺序</li><li>选择<br> 定义:某些代码可能执行,也可能不执行,有选择的执行某些代码<br> 分类:</li></ol><h2 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h2><pre><code>    if        1.if最简单的用法            格式:                if (表达式)                        语句            功能:                如果表达式为真,执行语句                如果表达式为假,语句不执行</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">3</span> &gt; <span class="number">2</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;AAAA\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">输出结果:AAAA             </span><br><span class="line">                </span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">3</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;AAAA\n&quot;</span>);<span class="comment">//会输出</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;BBBB\n&quot;</span>);<span class="comment">//不会输出</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span> == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;CCCC\n&quot;</span>);<span class="comment">//会输出</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">输出结果:</span><br><span class="line">AAAA</span><br><span class="line">CCCC</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>        2.if的范围问题            1.                if (表达式)                    语句A;                    语句B;                解释:if默认只能控制语句A的执行或不执行                     if无法控制语句B的执行或不执行                     或者讲:语句B一定会执行                2.                if (表达式)                &#123;                    语句A;                    语句B;                &#125;                此时if可以控制语句A和语句B                        总结:if默认只能控制一个语句的执行或者不执行,如果想控制多个语句的执行或不执行就必须把这些语句用&#123;&#125;括起来</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">1</span> &gt; <span class="number">2</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;AAAA\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;BBBB\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">输出结果:BBBB</span><br><span class="line"></span><br><span class="line">总结:</span><br><span class="line">    <span class="keyword">if</span>默认的只能控制一个语句的执行或不执行</span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">4</span> &gt; <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;AAAA\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;BBBB\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;CCCC\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    输出结果:</span><br><span class="line">    AAAA</span><br><span class="line">    BBBB</span><br><span class="line">    CCCC</span><br><span class="line"></span><br><span class="line">    总结:如果想控制多个语句的执行或不执行就必须把这些语句用&#123;&#125;括起来</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>        3.if..else...的用法 //如果...否则...</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;i, &amp;j);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> (i &gt; j)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;i大于j\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="comment">//否则</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;i小于j\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">输入<span class="number">1</span> <span class="number">2</span></span><br><span class="line">输出i小于j</span><br><span class="line">输入<span class="number">2</span> <span class="number">1</span></span><br><span class="line">输出i大于j</span><br></pre></td></tr></table></figure><pre><code>        4.if..else if...else...的用法            格式:                if (1)  //如果1成立执行A                    A;                else if (2) //如果1不成立2成立执行B                    B;                else if (3) //如果1,2不成立3成立执行C                    C;                else    //如果1,2,3都不成立执行D                    D;</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//if..else if...else...的用法例子</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">double</span> delta = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (delta &gt; <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;有两个解!\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (delta == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;有一个唯一解!\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;无解!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">输出:无解!</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>        5.C语言对真假的处理            非零是真            零就是假            真用1表示            假用零表示        6.if举例--求分数的等级</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">功能:对分数进行分类</span><br><span class="line">如: <span class="number">90</span>~<span class="number">100</span> 优秀</span><br><span class="line">    <span class="number">80</span>~<span class="number">90</span> 良好</span><br><span class="line">    <span class="number">60</span>~<span class="number">80</span> 及格</span><br><span class="line">    <span class="number">0</span>~<span class="number">60</span>  不及格</span><br><span class="line">用 <span class="keyword">if</span>...<span class="keyword">else</span>..<span class="keyword">if</span>..<span class="keyword">else</span>    </span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> score; <span class="comment">//第一步先定义变量,用float不用int是因为分数可能有小数点.定义变量应有意义-score英文意思是分数</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入您的考试成绩: &quot;</span>); <span class="comment">//提示用户输入信息</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;score); <span class="comment">//%f(十进制浮点数)输入控制符,取地址score</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (score &gt; <span class="number">100</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;满分100分,这是做梦!\n&quot;</span>);</span><br><span class="line">    <span class="comment">//数学表达式不能直接用于计算机编程 郝斌C语言p59  8min~</span></span><br><span class="line">    <span class="comment">//例如:表达90~100</span></span><br><span class="line">    <span class="comment">//90&lt;=score&lt;=100 因为90&lt;=score是逻辑表达式,返回值是0或1,永远小于100,所以整个表达式永远为真.所以是错误的.</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (score&gt;=<span class="number">90</span> &amp;&amp; score&lt;=<span class="number">100</span>) <span class="comment">//不能写成 90&lt;=score&lt;=100</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;优秀!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (score&gt;=<span class="number">80</span> &amp;&amp; score&lt;<span class="number">90</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;良好!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (score&gt;=<span class="number">60</span> &amp;&amp; score&lt;<span class="number">80</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;及格!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (score&gt;=<span class="number">0</span> &amp;&amp; score&lt;<span class="number">60</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;不及格!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;您输入的分数不合法!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">运行:请输入您的考试成绩:</span><br><span class="line">输入:<span class="number">100</span></span><br><span class="line">输出:优秀!</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>if例子1-互换两个数字</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//功能:互换两个数字</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">int</span> t;  <span class="comment">//定义临时变量</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// i = j;  //因为把i赋值给j,又把j赋值给i,所以i=5,j=5无法完成i和j的互换</span></span><br><span class="line">    <span class="comment">// j = i;   //两个杯子一杯装有可乐,一杯装有雪碧,需要互换饮料,则需要另外一个杯子,所以需要再定义一个变量才能互换.</span></span><br><span class="line">        t = i;</span><br><span class="line">        i = j;</span><br><span class="line">        j = t;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;i = %d, j = %d\n&quot;</span>, i, j);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">输出结果:i = <span class="number">5</span>, j = <span class="number">3</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//功能:对任意三个数字的排序</span></span><br><span class="line"><span class="comment">//思路:用a和后面所有数字对比,比a大的和a互换,则a一定是最大值.再用b和后面所有数字比,然后和b互换,这样b就是次大值,再用c....</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b, c; <span class="comment">//等价于: int a; int b; int c;</span></span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入三个整数(中间以空格分隔):&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>  (a &lt; b)</span><br><span class="line">    &#123;</span><br><span class="line">        t = a;</span><br><span class="line">        a = b;</span><br><span class="line">        b = t;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (a &lt; c)</span><br><span class="line">    &#123;</span><br><span class="line">        t = a;</span><br><span class="line">        a = c;</span><br><span class="line">        c = t;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (b &lt; c)</span><br><span class="line">    &#123;</span><br><span class="line">        t = b;</span><br><span class="line">        b = c;</span><br><span class="line">        c = t;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//编写代码完成a是最大值,b是中间值,c是最小值</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d\n&quot;</span>, a, b, c);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">输入:<span class="number">334</span> <span class="number">999</span> <span class="number">666</span></span><br><span class="line">输出:<span class="number">999</span> <span class="number">666</span> <span class="number">334</span></span><br></pre></td></tr></table></figure><pre><code>        7.if的常见问题解析            1. 空语句的问题                if (3 &gt; 2);                等价于                if (3 &gt; 2)                    ;   //这是一个空语句            2.                if (表达式1)                    A;                else                    B;                是正确的                if (表达式1);   //←不能加分号,加了之后if执行空语句,而没有else开头的语句,所以会报错                    A;                else                    B;                    是错误的            3.                if (表达式1)                    A;                else if (表达式2)                    B;                else if (表达式3)                    C;                else                    D;                即便表达式1和2都成立,也只会执行A语句            4.                 if (表达式1)                    A;                else if (表达式2)                    B;                else if (表达式3)                    C;                //删掉else,这样写语法不会出错,但逻辑上有漏洞            5.                 if (表达式1)                    A;                else if (表达式2)                    B;                else if (表达式3)                    C;                else (表达式4)  //if不能省略否则出错                    D;                这样写是不对的,正确的写法是:                    要么去掉(表达式4)                    要么在else 后面加if            6.                if (表达式1)                    A;                else if (表达式2)                    B;                else if (表达式3)                    C;                else (表达式4);  //←加了分号逻辑会错误                    D;                                这样写语法不会出错,但逻辑上是错误的                else (表达式4);                    D;                等价于                else                    (表达式4);                D;</code></pre><h2 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h2><p>switch语句是判断选择语句,从几行表达式中选择一条执行<br>switch语句格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">switch(表达式)</span><br><span class="line">&#123;</span><br><span class="line">    case 常量表达式1:   语句1;  //注意常量表达式后面是冒号:</span><br><span class="line">    case 常量表达式2:   语句2;</span><br><span class="line">    default :          语句3;</span><br><span class="line">    case 常量表达式3:   语句4;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li>第一,所有case后面的常量表达式为便于描述我们姑且称之为标签,<em>这些标签都只能是(1)枚举常量,也叫枚举元素,(2)数值常量,(3)字符常量,(4)常变量,(5)宏名中的一种,注意普通变量,枚举变量是不能作为标签使用的.</em><br>//常变量:是变量,只能被赋一个值,一般用const</li><li>第二,switch后面括号里的”表达式”允许是任何类型.</li><li>第三,执行完一个case语句后,流程控制就转移到下一个case字句继续执行.”case”常量表达式只是起语句标号的作用,并不是在该处进行条件判断.在执行swtich语句时,根据switch()中表达式的值找到与之匹配的case自句,就从此case子句开始执行下去,不再进行判断.</li><li>第四,switch是选择不是循环,如果在switch中出现了break语句.该语句的功能只是退出switch语句转去执行它下面的语句.在switch中出现continue是错误的,除非switch本身就属于for或while循环的一部分.</li></ol><p>例:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> val;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入您要进入的楼层: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;val);</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (val)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:<span class="comment">//注意是冒号:</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;已到达一楼!\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;已到达二楼!\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;已到达三楼!\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;没有这一层!\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">在VS中的输出结果是:</span><br><span class="line">请输入您要进入的楼层: <span class="number">2</span></span><br><span class="line">已到达二楼!</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>把case1里面的break删掉会如何?</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> val;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入您要进入的楼层: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;val);</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (val)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:<span class="comment">//注意是冒号:</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;已到达一楼!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;已到达二楼!\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;已到达三楼!\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;没有这一层!\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">在VS中的输出结果是:</span><br><span class="line">请输入您要进入的楼层: <span class="number">1</span></span><br><span class="line">已到达一楼!</span><br><span class="line">已到达二楼!</span><br><span class="line"></span><br><span class="line">总结:<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>和<span class="keyword">default</span>是程序的入口,程序找到入口就会从上往下依次执行,<span class="keyword">break</span>的作用是终止<span class="keyword">switch</span>.</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li>循环<br>定义:<br> 某些代码会被重复执行</li></ol><p>分类</p><ul><li><p>for //最关键</p><ol><li><p>格式:</p><pre><code> for (1; 2; 3)     语句A;      //语句执行顺序:1 2 A 3 2 A 3 2 A 3                 //3代表执行完一次语句</code></pre></li><li><p>执行的流程{重点}<br> 单个for循环的使用<br> 多个for循环的嵌套使用 （及其重要）</p><pre><code> for (1; 2;  3)      //1     for (4; 5; 6)   //2         A;          //3         B;          //4</code></pre><p> //语句执行顺序:12,45A65A65A6,5不成立→3，3执行完2，成立→45A65A65A6,5不成立执行3，3→2，2不成立退出循环执行B</p><p> 整体是两个语句,123,是第一个语句<br> 4是第二个语句</p><pre><code> for (1; 2;  3)     for (4; 5; 6)     &#123;   A;         B;     &#125;</code></pre><p> 整体是一个语句        </p></li><li><p>范围:只控制一个一句,需要控制多个语句用{}</p></li><li><p>举例:<br> 1 + 2 + 3 + …. + 100<br> 1 + 1/2 + 1/3 + …. + 1/100</p></li></ol></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*最简单的循环语句*/</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;    <span class="comment">//sum不赋值0是垃圾值</span></span><br><span class="line">        <span class="comment">//1   2     3</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">1</span>; i&lt;<span class="number">4</span>; ++i)     <span class="comment">//++i = i+1</span></span><br><span class="line"></span><br><span class="line">        sum = sum + i;  <span class="comment">//4     /sum 是求和的意思</span></span><br><span class="line">        <span class="comment">//程序执行循序是1243243243,3标志着一次循环的结束,2代表判断</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sum = %d\n&quot;</span>, sum);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    功能:求1 + 1/2 + 1/3 + .... + 1/100</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">float</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">1</span>; i&lt;=<span class="number">100</span>; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        sum == <span class="number">1</span>/(<span class="keyword">float</span>)(i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sum = %f\n&quot;</span>, sum);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">输出:sum = <span class="number">5.187378</span></span><br></pre></td></tr></table></figure><h2 id="试数具体步骤举例"><a href="#试数具体步骤举例" class="headerlink" title="试数具体步骤举例"></a>试数具体步骤举例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">    功能:学会试数,看懂程序</span><br><span class="line">    技巧:不要问为什么,忽略程序的功能,把自己当成计算机执行</span><br><span class="line">*/</span><br><span class="line">举例:求1 + 1/2 + 1/3 + .... + 1/100</span><br><span class="line">1-&gt; i=1 1&lt;=100 成立</span><br><span class="line">    sum=0+1/1.00=1  ++i i = 2</span><br><span class="line">2-&gt; i=2 2&lt;=100 成立</span><br><span class="line">    sum=1+1/2.0     ++i i = 3</span><br><span class="line">3-&gt; i=3 3&lt;=100 成立</span><br><span class="line">    sum=1+1/2.0+1/3.0 ++i i = 4    </span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* for循环实例:求1~100奇数相加</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">1</span>; i&lt;<span class="number">100</span>; i+=<span class="number">2</span>) <span class="comment">//i+=2; 等价于 i = i+2;</span></span><br><span class="line">    &#123;</span><br><span class="line">        sum = sum + i;</span><br><span class="line">        <span class="comment">//printf(&quot;循环了多少次!\n&quot;);</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;i = %d\n&quot;</span>, i);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sum = %d\n&quot;</span>, sum);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>for和if的嵌套使用</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*求1~100之间所有的能被3整除的数之和</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">3</span>; i&lt;=<span class="number">100</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i % <span class="number">3</span> == <span class="number">0</span>)<span class="comment">//如果 i 能被3整除 =是赋值,==是等于</span></span><br><span class="line">sum = sum + i;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;sum = %d\n&quot;</span>, sum);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">输出: <span class="number">1683</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">多个<span class="keyword">for</span>循环嵌套使用</span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">3</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;111!\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">2</span>; j &lt; <span class="number">5</span>; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;222!\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;333!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;444!\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">在VS中的输出结果是:</span><br><span class="line"><span class="number">111</span>!</span><br><span class="line"><span class="number">222</span>!</span><br><span class="line"><span class="number">333</span>!</span><br><span class="line"><span class="number">222</span>!</span><br><span class="line"><span class="number">333</span>!</span><br><span class="line"><span class="number">222</span>!</span><br><span class="line"><span class="number">333</span>!</span><br><span class="line"><span class="number">444</span>!</span><br><span class="line"><span class="number">111</span>!</span><br><span class="line"><span class="number">222</span>!</span><br><span class="line"><span class="number">333</span>!</span><br><span class="line"><span class="number">222</span>!</span><br><span class="line"><span class="number">333</span>!</span><br><span class="line"><span class="number">222</span>!</span><br><span class="line"><span class="number">333</span>!</span><br><span class="line"><span class="number">444</span>!</span><br><span class="line"><span class="number">111</span>!</span><br><span class="line"><span class="number">222</span>!</span><br><span class="line"><span class="number">333</span>!</span><br><span class="line"><span class="number">222</span>!</span><br><span class="line"><span class="number">333</span>!</span><br><span class="line"><span class="number">222</span>!</span><br><span class="line"><span class="number">333</span>!</span><br><span class="line"><span class="number">444</span>!</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>while</li></ul><ol><li>执行顺序<br> 格式:<pre><code> while (表达式)     语句;       //默认控制一个语句</code></pre></li><li>与for的相互比较<br> for和while可以相互转换</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">    for (1; 2; 3)</span><br><span class="line">        A;</span><br><span class="line">    等价于</span><br><span class="line"></span><br><span class="line">    1;</span><br><span class="line">    while (2)</span><br><span class="line">    &#123;</span><br><span class="line">        A;  //A和3不能上下互换</span><br><span class="line">        3;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">```    </span><br><span class="line"></span><br><span class="line">while和for可以相互转化</span><br><span class="line">但for的逻辑性更强,更不容易出错,推荐多使用for循环</span><br><span class="line"></span><br><span class="line">示例:</span><br><span class="line"></span><br><span class="line">```C</span><br><span class="line"></span><br><span class="line"># include &lt;stdio.h&gt;</span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">    int i;</span><br><span class="line">    int sum = 0;</span><br><span class="line"></span><br><span class="line">    /*for (i = 1; i &lt; 101; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        sum = sum + i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    */</span><br><span class="line"></span><br><span class="line">    i = 1;</span><br><span class="line">    while (i &lt; 101)</span><br><span class="line">    &#123;</span><br><span class="line">       </span><br><span class="line">        sum = sum + i;</span><br><span class="line">        ++i;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    printf(&quot;sum = %d\n&quot;, sum);</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">输出结果都是5050</span><br></pre></td></tr></table></figure><ol start="3"><li>举例01<br> 从键盘输入一个数字,如果该数字是回文数,<br> 则返回yes, 否则写no<br> 回文数:正着写和倒着写都一样<br> 比如: 121 12321 都是回文数<br><a href="/2021/07/11/%E5%A6%82%E4%BD%95%E7%9C%8B%E6%87%82%E7%A8%8B%E5%BA%8F%E4%B8%BE%E4%BE%8B01-%E7%94%A8while%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E6%98%AF%E5%9B%9E%E6%96%87%E6%95%B0/">如何看懂程序举例01-用while判断是否是回文数.md</a></li></ol><pre><code>举例02斐波拉契序列-求第N项的值例如:1 2 3 5 8 13 21 34</code></pre><p><a href="/2021/07/11/%E5%A6%82%E4%BD%95%E7%9C%8B%E6%87%82%E7%A8%8B%E5%BA%8F%E4%B8%BE%E4%BE%8B02-%E6%96%90%E6%B3%A2%E6%8B%89%E5%A5%91%E5%BA%8F%E5%88%97/">如何看懂程序举例02-斐波拉契序列</a></p><ol start="4"><li>什么时候使用while,什么时候使用for<br>没法说,用多了自然而然就知道了</li></ol><ul><li>do…while<br>主要用于人机交互<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">格式:</span><br><span class="line">do</span><br><span class="line">&#123;</span><br><span class="line">    .......</span><br><span class="line">&#125; while (表达式)</span><br><span class="line"></span><br><span class="line">和while,for的区别:</span><br><span class="line">do....while不等价于while,for</span><br><span class="line"></span><br><span class="line">1.while和for当表达式为假时,可能一次都不执行</span><br><span class="line">2.do..while一定执行表达式</span><br><span class="line"></span><br><span class="line">格式:</span><br><span class="line">while (表达式)</span><br><span class="line">&#123;</span><br><span class="line">    ....</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">格式:</span><br><span class="line">for (1; 2; 3)</span><br><span class="line">    A;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><p>do…while的例子:一元二次方程</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">功能:用do...while实现一元二次方程</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">double</span> a, b, c;</span><br><span class="line"><span class="keyword">double</span> delta;<span class="comment">//delta表示变量</span></span><br><span class="line"><span class="keyword">double</span> x1, x2;</span><br><span class="line"><span class="keyword">char</span> ch;<span class="comment">//定义一个字符ch</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入一元二次方程的三个系数:\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a = &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;a); <span class="comment">//%lf是double的输出控制符</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;b = &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;b);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;c = &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;c);</span><br><span class="line"></span><br><span class="line">delta = b * b - <span class="number">4</span> * a * c;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (delta &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">x1 = (-b + <span class="built_in">sqrt</span>(delta)) / (<span class="number">2</span> * a);</span><br><span class="line">x2 = (-b - <span class="built_in">sqrt</span>(delta)) / (<span class="number">2</span> * a);<span class="comment">//sqrt是开根号的意思</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;有两个解, x1 = %lf, x2 = % lf\n&quot;</span>, x1, x2);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">0</span> == delta)</span><br><span class="line">&#123;</span><br><span class="line">x1 = x2 = (-b) / (<span class="number">2</span> * a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;有唯一解, x1 = x2 = %lf\n&quot;</span>, x1, x2);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;方程无实数解!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用do..while 语句使得程序可持续进行,输入y/Y结束</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;您想继续么 (Y/N): &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot; %c&quot;</span>, &amp;ch); <span class="comment">//%c前面必须得加一个空格</span></span><br><span class="line">   <span class="comment">//%c是char的输出控制符</span></span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="string">&#x27;y&#x27;</span> == ch ||  <span class="string">&#x27;Y&#x27;</span> == ch); <span class="comment">//||是或者的意思</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">在VS中的输出结果是:</span><br><span class="line">请输入一元二次方程的三个系数:</span><br><span class="line">a = <span class="number">4</span></span><br><span class="line">b = <span class="number">5</span></span><br><span class="line">c = <span class="number">6</span></span><br><span class="line">方程无实数解!您想继续么 (Y/N): y</span><br><span class="line">请输入一元二次方程的三个系数:</span><br><span class="line">a = <span class="number">1</span></span><br><span class="line">b = <span class="number">5</span></span><br><span class="line">c = <span class="number">6</span></span><br><span class="line">有两个解, x1 = <span class="number">-2.000000</span>, x2 = <span class="number">-3.000000</span></span><br><span class="line">您想继续么 (Y/N):</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="break和continue"><a href="#break和continue" class="headerlink" title="break和continue"></a>break和continue</h3><p>break的用法&lt;重点&gt;</p><ol><li>break如果用于循环是用来终止循环</li><li>break如果用于switch,则是用于终止switch</li><li>break不能直接用于if,除非if属于循环内部的一个子句</li></ol><p>重点01:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">for (i=0; i&lt;3; ++i)</span><br><span class="line">&#123;</span><br><span class="line">    if(3 &gt; 2)</span><br><span class="line">        break;</span><br><span class="line">    printf(&quot;哈哈!\n&quot;);  //永远不会输出</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line"></span><br><span class="line">    //程序没有输出结果</span><br><span class="line">    //总结:break虽然是if内部的语句,但break终止地却是外部的for语句</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重点02:在多层循环中,break只能终止最里面包裹它的循环</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">3</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt; <span class="number">4</span>; ++j)</span><br><span class="line"><span class="keyword">break</span>;<span class="comment">//在多层循环中break只能终止它最近的循环</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;同学们好!\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">在VS中的输出结果是:</span><br><span class="line">同学们好!</span><br><span class="line">同学们好!</span><br><span class="line">同学们好!</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>重点03:在多层switch嵌套中,switch只能终止它最近的一个switch<br>例子:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x = <span class="number">1</span>, y = <span class="number">0</span>, a = <span class="number">0</span>, b = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">switch</span> (x) <span class="comment">// 第一个switch</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="keyword">switch</span> (y) <span class="comment">//第二个switch</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">a++;</span><br><span class="line"><span class="keyword">break</span>; <span class="comment">//终止的是第二个switch</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">b++;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">b = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">break</span>; <span class="comment">//终止的是第一个switch</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">a++;</span><br><span class="line">b++;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, a, b);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">在VS中的输出结果是:</span><br><span class="line"><span class="number">1</span> <span class="number">100</span></span><br></pre></td></tr></table></figure><p>continue<br>功能:用于跳过本次循环余下的语句,转去判断是否需要执行下次循环</p><p>例子1:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">for (1; 2; 3)</span><br><span class="line">&#123;</span><br><span class="line">    A;</span><br><span class="line">    B;</span><br><span class="line">    continue; //如果执行该语句,则执行完该语句后,会执行语句3,C和D都会跳过去,C和D不会被执行</span><br><span class="line">    C;</span><br><span class="line">    D;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例子2:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">while (表达式)</span><br><span class="line">&#123;</span><br><span class="line">    A;</span><br><span class="line">    B;</span><br><span class="line">    continue; //如果执行该语句,则执行完该语句后,会执行表达式,C和D都会跳过去,C和D不会被执行</span><br><span class="line">    C;</span><br><span class="line">    D;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="强制类型转化"><a href="#强制类型转化" class="headerlink" title="强制类型转化"></a>强制类型转化</h2><pre><code>格式:    (数据类型) (表达式)功能:    把表达式的值强制转化为前面所执行的数据类型例子:    (int)(4.5+2.2)  最终值是6    (float)(5)  最终值是 5.000000</code></pre><h2 id="浮点数的存错所带来的问题"><a href="#浮点数的存错所带来的问题" class="headerlink" title="浮点数的存错所带来的问题"></a>浮点数的存错所带来的问题</h2><p>float和double都不能保证可以精确的存储一个小数<br>举例:<br>    有一个浮点型变量x, 如何判断x的值是否是零<br>        if (0 == x)     //是错误的<br>        if (|x-0.000001| &lt;= 0.000001)<br>            是零<br>        else<br>            不是零<br>    为什么循环中更新的变量不能定义成浮点型<br>    例: for (i=1.0; i&lt;=100; ++i) //错误,i变量不能定义为浮点型,因为可能导致结果不准确</p><p>因为float和double都不能保证可以精确的存储一个小数        </p><h2 id="流程控制的重要性"><a href="#流程控制的重要性" class="headerlink" title="流程控制的重要性"></a>流程控制的重要性</h2><ol><li>第一个原因:C语言演化的语言:C++,java,c#学习的流程控制都是一样的,学了之后类C语言也需要用到</li><li>第二个原因:因为程序运用三种做法:循序,选择还有循环可以解决现实所有问题.</li><li>第三个原因:学懂流程控制才能看懂程序看懂代码,才能成功学会语言</li></ol><h2 id="学习C语言常见误区-如何看懂一个程序-如何掌控一个程序"><a href="#学习C语言常见误区-如何看懂一个程序-如何掌控一个程序" class="headerlink" title="学习C语言常见误区:如何看懂一个程序 如何掌控一个程序"></a>学习C语言常见误区:如何看懂一个程序 如何掌控一个程序</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">程序题目:</span><br><span class="line">判断一个数字是否是素数</span><br><span class="line"></span><br><span class="line">判断一个数字是否是回文数 例(124421):</span><br><span class="line"></span><br><span class="line">编程实现求一个十进制数字的二进制形式</span><br><span class="line"></span><br><span class="line">求一个数字的每位是奇数的数字取出来组合形成的新数字</span><br><span class="line"></span><br><span class="line">求一个数字倒出来的数字</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><em>以上题目大多数初学者往往想一天都想不出来,因为需要算法知识</em><br>所以导致大多数初学者,学编程没有成就感,容易受挫半途而废<br><em>解决办法:想太久没头绪直接放弃,看答案,看懂答案,看懂程序然后模仿,用自己的想法改造程序,最后加深对程序的理解,以后遇到类似的问题就游刃有余.</em><br>所以看懂程序是非常重要的,这个也是我们学习的重点,看懂之后尝试自己去修改程序<br>并且知道修改之后程序的不同输出结果的含义.<br>然后照着答案去敲,调试错误,然后不看答案,自己独立敲出来</p><p>那么如何看懂一个程序,分三步:</p><ol><li>流程</li><li>每个语句的功能</li><li>试数</li></ol><p>看懂程序流程控制8个例子:<a href="https://www.bilibili.com/video/BV1os411h77o?p=98">https://www.bilibili.com/video/BV1os411h77o?p=98</a></p>]]></content>
      
      
      <categories>
          
          <category> C语言基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言前置知识</title>
      <link href="/2021/05/07/C%E8%AF%AD%E8%A8%80%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86/"/>
      <url>/2021/05/07/C%E8%AF%AD%E8%A8%80%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h1><p>C语言重点：</p><ol><li>函数</li><li>流程控制 (最重要最基本)</li><li>指针 (重点)</li><li>静态内存和动态内存</li></ol><h1 id="什么是数据类型"><a href="#什么是数据类型" class="headerlink" title="什么是数据类型"></a>什么是数据类型</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">基本类型数据</span><br><span class="line">    整数</span><br><span class="line">        整型        -- int          --4</span><br><span class="line">        短整型      -- short int    --2</span><br><span class="line">        长整型      -- long int     --8</span><br><span class="line"></span><br><span class="line">    浮点数[实数]</span><br><span class="line">        单精度浮点数 -- float   --4</span><br><span class="line">        双精度浮点数 -- double  --8</span><br><span class="line"></span><br><span class="line">    字符</span><br><span class="line">        char                   --1</span><br><span class="line"></span><br><span class="line">复合类型数据</span><br><span class="line">    结构体</span><br><span class="line">    枚举</span><br><span class="line">    共用体</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><h2 id="什么是变量"><a href="#什么是变量" class="headerlink" title="什么是变量"></a>什么是变量</h2><p><em>变量的本质就是内存中一段存储空间</em></p><h2 id="变量为什么要初始化-重点"><a href="#变量为什么要初始化-重点" class="headerlink" title="变量为什么要初始化?(重点)"></a>变量为什么要初始化?(重点)</h2><p>初始化就是赋值的意思</p><ul><li>因为一个软件所分配的空间中极可能存在以前其他软件使用过后的残留数据,这些数据被称之为垃圾数据</li><li>所以通常情况下我们为一个变量,为一个数组,分配好存储空间之后都要对该内存空间初始化</li></ul><h2 id="如何定义变量"><a href="#如何定义变量" class="headerlink" title="如何定义变量"></a>如何定义变量</h2><pre><code>    数据类型    变量名 = 要赋的值;等价于    数据类型    变量名;    变量名 = 要赋的值;例如:    int i = 3;            等价于 int i; i = 3;    int i, j;             等价于 int i; int j;    int i, j=3;           等价于 int i; int j; j = 3;    int i = 3, j = 5;     等价于 int i; int j; i = 3; j = 5;    int i, j ; i = j = 5; 等价于 int i, j; i = 5; j = 5;</code></pre><h2 id="进制"><a href="#进制" class="headerlink" title="进制"></a>进制</h2><h3 id="什么叫n进制"><a href="#什么叫n进制" class="headerlink" title="什么叫n进制"></a>什么叫n进制</h3><pre><code>逢n进一十进制逢十进一    例:0123456789二进制逢二进一    例:00101000n进制逢n进一</code></pre><p>特殊:十六进制,逢十六进一<br>通常用数字0、1、2、3、4、5、6、7、8、9和字母A、B、C、D、E、F（a、b、c、d、e、f）表示</p><h3 id="把r进制转成十进制"><a href="#把r进制转成十进制" class="headerlink" title="把r进制转成十进制"></a>把r进制转成十进制</h3><p>43 五进制变成十进制<br><code>3×5º+4×5¹</code> = 23</p><p>16进制转化成十进制<br>12c<br><code>12x16º+2x16¹+1x16² </code> =12+32+256=300</p><h3 id="十进制转成r进制"><a href="#十进制转成r进制" class="headerlink" title="十进制转成r进制"></a>十进制转成r进制</h3><p>十进制转成二进制<br><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/html-illustration/Decimal_to_binary.png"></p><p>十进制转成八进制<br><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/html-illustration/10to8.png"></p><p>十进制转r进制<br>方法:除r取余,直至商0,余数倒序排列</p><h3 id="不同进制所代表的数值之间的关系"><a href="#不同进制所代表的数值之间的关系" class="headerlink" title="不同进制所代表的数值之间的关系"></a>不同进制所代表的数值之间的关系</h3><pre><code>十进制的 3987 转化成 十六进制是 F8D十进制的3981和十六进制的F8D所代表的本质上都是同一个</code></pre><h2 id="常量在C语言中是如何表示的"><a href="#常量在C语言中是如何表示的" class="headerlink" title="常量在C语言中是如何表示的?"></a>常量在C语言中是如何表示的?</h2><pre><code>整数        十进制:     传统的写法        十六进制:   前面加0x或0X        八进制:     前面0   注意是数字零不是字母o浮点数        传统的写法            float x = 3.2;//传统                科学计数法            float x = 3.2e3; //x的值是 3200            float x = 123.45e-2; //x的值是1.2345,警告则在最后加F字符        单个字符用单引号括起来            &#39;A&#39;表示字符A            &#39;AB&#39; 错误            &quot;AB&quot; 正确        字符串用双引号括起来            &quot;A&quot;正确,因为&quot;A&quot;代表了 &#39;A&#39;&#39;\0&#39; 的组合</code></pre><h2 id="常量以什么样的二进制代码存储在计算机中"><a href="#常量以什么样的二进制代码存储在计算机中" class="headerlink" title="常量以什么样的二进制代码存储在计算机中?"></a>常量以什么样的二进制代码存储在计算机中?</h2><pre><code>整数是以补码的形式转化为二进制代码存储在计算机中的实数是以IEEE754标准转化为二进制代码存储在计算机中的字符的本质实际也是与整数的存储方式相同</code></pre><h2 id="代码规范化-重点"><a href="#代码规范化-重点" class="headerlink" title="代码规范化(重点)"></a>代码规范化(重点)</h2><ul><li>好的代码规范能使代码的可读性更强,程序更不容易出错</li><li>写注释非常重要,至少占代码量的三分之一</li><li>注意缩进</li><li>成对的敲:例如(),要把两边括号都敲出来再敲中间代码</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (asda(sadsa(asdsada)))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (sadsadsadsa(asdsad))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (zaasda(asdsadsa))</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">if</span> (sadsadadsadsa(sadsada))   </span><br><span class="line">       </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="什么是字节"><a href="#什么是字节" class="headerlink" title="什么是字节?"></a>什么是字节?</h2><pre><code>字节就是存储数据的单位,并且是硬件所能访问的最小单位1字节 = 8位1K = 1024字节1M = 1024k1G = 1024M1T = 1024G</code></pre><h2 id="字符的存储-字符本质上与整数的存储方式相同"><a href="#字符的存储-字符本质上与整数的存储方式相同" class="headerlink" title="字符的存储 [字符本质上与整数的存储方式相同]"></a>字符的存储 [字符本质上与整数的存储方式相同]</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;studio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="string">&#x27;A&#x27;</span>; <span class="comment">// OK</span></span><br><span class="line"><span class="comment">//  char ch = &quot;AB&quot;; //error 因为&quot;AB&quot;是字符串,我们不能把字符串赋给单个字符</span></span><br><span class="line"><span class="comment">//  char ch = &quot;A&quot;; //error</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//  char ch = &#x27;AB&#x27;; //&#x27;AB&#x27;是错误的,单引号只能括单个字符    </span></span><br><span class="line">    <span class="keyword">char</span> ch = <span class="string">&#x27;B&#x27;</span>; <span class="comment">//error,因为ch变量已经定义了,这样会导致变量名被重复定义</span></span><br><span class="line">    ch = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>, ch);  <span class="comment">//%c表示输出单个字符</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="什么是ASCII"><a href="#什么是ASCII" class="headerlink" title="什么是ASCII?"></a>什么是ASCII?</h2><p>ASCII不是一个值,而是一种规定,ASCII规定了不同的字符是使用哪个整数值去表示.<br>它规定了<br>        ‘A’ – 65<br>        ‘B’ – 66<br>        ‘a’ – 97<br>        ‘b’ – 98<br>        ‘0’ – 48</p><h2 id="如何编写出更有价值保存价值和更有学习价值的程序"><a href="#如何编写出更有价值保存价值和更有学习价值的程序" class="headerlink" title="如何编写出更有价值保存价值和更有学习价值的程序"></a>如何编写出更有价值保存价值和更有学习价值的程序</h2><p>多写备注,写出程序的目的和功能,加上时间.</p><h1 id="赫斌老师鸡汤"><a href="#赫斌老师鸡汤" class="headerlink" title="赫斌老师鸡汤:"></a>赫斌老师鸡汤:</h1><ol><li>把成功当成一块肉,你不争取就会饿死,动力才会源源不断</li><li>没有本事就没有尊严</li><li>把成功当成雪中送炭,而不是锦上添花</li><li>成功不是什么遥不可及的梦想,而是坚持做好每一件小事,积少成多</li></ol>]]></content>
      
      
      <categories>
          
          <category> C语言基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
