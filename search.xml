<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Markdown常用语法</title>
      <link href="/2021/07/01/Markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
      <url>/2021/07/01/Markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="一-1-6级标题"><a href="#一-1-6级标题" class="headerlink" title="(一) 1~6级标题"></a>(一) 1~6级标题</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">#### 四级标题</span></span><br><span class="line"><span class="section">##### 五级标题</span></span><br><span class="line"><span class="section">###### 六级标题</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>效果如下:</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h1 id="二-、字体"><a href="#二-、字体" class="headerlink" title="(二)、字体"></a>(二)、字体</h1><ul><li>加粗<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">要加粗的文字左右两边分别用两个<span class="emphasis">*包起来</span></span><br><span class="line"><span class="emphasis">*</span>内容<span class="emphasis">*</span></span><br><span class="line"><span class="emphasis"></span></span><br></pre></td></tr></table></figure>效果如下:</li></ul><p><em>内容</em></p><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">语法:无序列表用-<span class="emphasis">*+任何一种都可以</span></span><br><span class="line"><span class="emphasis">- 列表内容</span></span><br><span class="line"><span class="emphasis">+ 列表内容</span></span><br><span class="line"><span class="emphasis">*</span> 列表内容</span><br><span class="line"></span><br><span class="line">注意: - + <span class="emphasis">* 跟内容之间都要有一个空格</span></span><br><span class="line"><span class="emphasis"></span></span><br></pre></td></tr></table></figure><p>效果如下:</p><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法:数字加点,注意序号和内容之间的空格</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 列表内容</span><br><span class="line"><span class="bullet">2.</span> 列表内容</span><br><span class="line"><span class="bullet">3.</span> 列表内容</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>效果如下:</p><ol><li>列表内容</li><li>列表内容</li><li>列表内容</li></ol><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><p>语法:单行代码，使用反引号（`）包起来</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">`代码内容`</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>效果如下:</p><p><code>代码内容</code></p><p>代码块,代码之间分别用三个反引号(`)包起来,并可以在开头反引号后面指定语言(也可以不指定)</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```javascript</span></span><br><span class="line"><span class="code">$(document).ready(function () &#123;</span></span><br><span class="line"><span class="code">    alert(&#x27;geyouyang&#x27;);</span></span><br><span class="line"><span class="code">&#125;);</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">``` </span></span><br></pre></td></tr></table></figure><p>效果如下:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="string">&#x27;geyouyang&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><ol><li><p>插入本地图片<br><code>![avatar](/user/desktop/doge.png) </code></p></li><li><p>插入网络图片<br><code>![avatar](http://baidu.com/pic/doge.png) </code></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 写作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Html基础</title>
      <link href="/2021/06/21/HTML%E5%9F%BA%E7%A1%80/"/>
      <url>/2021/06/21/HTML%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML-语言简述"><a href="#HTML-语言简述" class="headerlink" title="HTML 语言简述:"></a>HTML 语言简述:</h1><p><strong>HTML，全称“Hyper Text Markup Language（超文本标记语言),HTML 是一种非常容易入门制作网页描述性语言</strong></p><h2 id="HTML-基本结构"><a href="#HTML-基本结构" class="headerlink" title="HTML 基本结构"></a>HTML 基本结构</h2><p><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/html-illustration/htmljiegou.png" alt="html结构图"></p><hr><h1 id="HTML-三大基本标签"><a href="#HTML-三大基本标签" class="headerlink" title="HTML 三大基本标签:"></a>HTML 三大基本标签:</h1><h2 id="1-HTML-标签"><a href="#1-HTML-标签" class="headerlink" title="(1)HTML 标签"></a>(1)HTML 标签</h2><p><strong>从&lt;html&gt; 开始到&lt;/html&gt; 结束</strong></p><h2 id="2-head-标签"><a href="#2-head-标签" class="headerlink" title="(2)head 标签"></a>(2)head 标签</h2><p><strong>head 标签代表头部标签,往往定义一些特殊内容,通常浏览器内不可见</strong></p><h3 id="内部标签-head-内部标签非常重要且常用"><a href="#内部标签-head-内部标签非常重要且常用" class="headerlink" title="内部标签 (head 内部标签非常重要且常用)"></a><head>内部标签 (head 内部标签非常重要且常用)</h3><p><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/html-illustration/headbiaoqian.png" alt="head内部标签图"></p><h2 id="3-body-标签"><a href="#3-body-标签" class="headerlink" title="(3)body 标签"></a>(3)body 标签</h2><body>标签定义网页展示内容,这些内容往往都是"可见内容"(浏览器可见)<p><strong>body 标签超级重要，以下知识内容全属于body标签</strong></p><hr><h1 id="段落与文字"><a href="#段落与文字" class="headerlink" title="段落与文字"></a>段落与文字</h1><h2 id="一-、段落标签"><a href="#一-、段落标签" class="headerlink" title="(一)、段落标签"></a>(一)、段落标签</h2><h3 id="（1）段落与文字标签"><a href="#（1）段落与文字标签" class="headerlink" title="（1）段落与文字标签"></a>（1）段落与文字标签</h3><h3 id="表1-段落与文字标签"><a href="#表1-段落与文字标签" class="headerlink" title="表1   段落与文字标签"></a>表1   段落与文字标签</h3><p><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/html-illustration/duanluowenzi-biaoqian.png" alt="段落与文字标签"></p><h3 id="表2-文本格式化标签"><a href="#表2-文本格式化标签" class="headerlink" title="表2   文本格式化标签"></a>表2   文本格式化标签</h3><p><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/html-illustration/Text-formatting.png" alt="文本格式化标签">  </p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS基础</title>
      <link href="/2021/06/21/CSS%E5%9F%BA%E7%A1%80/"/>
      <url>/2021/06/21/CSS%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="一、CSS是什么？"><a href="#一、CSS是什么？" class="headerlink" title="一、CSS是什么？"></a>一、CSS是什么？</h1><p>css (Cascading Style sheets),术语叫做<em>层叠样式表</em>,是用来控制网页外观的.</p><h2 id="HTML-CSS-JS-的关系"><a href="#HTML-CSS-JS-的关系" class="headerlink" title="HTML/CSS/JS 的关系"></a>HTML/CSS/JS 的关系</h2><ul><li>HTML决定了网页的结构和内容(决定看到什么),相当于人的身体</li><li>CSS决定网页呈现给用户的模样(决定好不好看),相当于给人穿衣服,化妆</li><li>以上是标记语言–描述类语言</li><li>而JS是脚本语言、编程类语言</li><li>JS实现业务逻辑和页面控制（决定功能），相当于人的各种动作</li></ul><h1 id="二、css的引入方式"><a href="#二、css的引入方式" class="headerlink" title="二、css的引入方式"></a>二、css的引入方式</h1><p>在HTML中引入CSS方式有3种：<br>（1）外部样式表； （2）内部样式表； （3）内联样式表；</p><h2 id="1、外部样式表"><a href="#1、外部样式表" class="headerlink" title="1、外部样式表"></a>1、外部样式表</h2><p>外部样式表是最理想的CSS引入方式。在实际开发中，为了提升网站的性能和维护性，一般都是使用外部样式表。<br>“外部样式表”总而言之就是把CSS代码和HTML代码都单独放在不同文件中，然后在HTML文档中使用link标签来引用CSS样式表。<br>在需要应用样式到多个页面时，外部样式表是最理想的选择。使用样式表，你就可以更改一个CSS文件来改变整个网站的外观。<br>外部样式表在单独文件中定义，并且在标签中使用link标签来引用。举例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>css01<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;index.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">       </span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><em>注意</em>:外部样式表都是在<em>head标签</em>内使用<em>link标签</em>来引入的。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>if的常见问题解析</title>
      <link href="/2021/06/13/if%E8%AF%AD%E5%8F%A5%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E6%9E%90/"/>
      <url>/2021/06/13/if%E8%AF%AD%E5%8F%A5%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>if的常见问题解析<br>    1. 空语句的问题</p><pre><code>                if (3 &gt; 2);                等价于                if (3 &gt; 2)                    ;   //这是一个空语句2 .                                if (表达式1)                    A;                else                    B;                是正确的                if (表达式1);   //←不能加分号,加了之后if执行空语句,而没有else开头的语句,所以会报错                    A;                else                    B;                    是错误的3.                                if (表达式1)                    A;                else if (表达式2)                    B;                else if (表达式3)                    C;                else                    D;                即便表达式1和2都成立,也只会执行A语句4.                                 if (表达式1)                    A;                else if (表达式2)                    B;                else if (表达式3)                    C;                //删掉else,这样写语法不会出错,但逻辑上有漏洞5.                                 if (表达式1)                    A;                else if (表达式2)                    B;                else if (表达式3)                    C;                else (表达式4)  //if不能省略否则出错                    D;                这样写是不对的,正确的写法是:                    要么去掉(表达式4)                    要么在else 后面加if6.                                if (表达式1)                    A;                else if (表达式2)                    B;                else if (表达式3)                    C;                else (表达式4);  //←加了分号逻辑会错误                    D;                                这样写语法不会出错,但逻辑上是错误的                else (表达式4);                    D;                等价于                else                    (表达式4);                D;</code></pre>]]></content>
      
      
      <categories>
          
          <category> C语言基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常见问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>This function or variable may be unsafe</title>
      <link href="/2021/06/12/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E6%8A%A5%E9%94%9901-This%20function%20or%20variable%20may%20be%20unsafe/"/>
      <url>/2021/06/12/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E6%8A%A5%E9%94%9901-This%20function%20or%20variable%20may%20be%20unsafe/</url>
      
        <content type="html"><![CDATA[<p>在使用visual studio学习C语言的过程中,经常遇到”This function or variable may be unsafe.” 无法运行程序</p><p>问题现象:</p><p><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/html-illustration/unsafe-error01.png"></p><p>使用了scanf函数:程序报错:<br>error C4996: ‘scanf’: This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.</p><p>翻译一下:<br>“scanf”：此函数或变量可能不安全。考虑使用scanf_s代替。要禁用弃用警告，请使用_CRT_SECURE_NO_WARNINGS。有关详细信息，请参阅联机帮助。</p><p>问题原因:<br>C语言的标准函数中,一些读取或写入内存的函数存在内存越界的问题,从而使得内存数据变得不安全.如scanf、gets、strcat等函数都存在着这样的问题.<br>但在学习中几乎所有的课本或教程都使用原来的标准函数.所以当我们在vs中使用原始的函数,编译器就会报错</p><p>以下是解决办法:<br>编译器给出的错误提示中,实际上已经给我们了一个明确的解决方案,只需要在程序的开头添加一个宏定义就能解决</p><ol><li><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS </span></span><br><span class="line"><span class="comment">// #define _CRT_SECURE_NO_WARNINGS 该语句必须在# include &lt;stdio.h&gt; 之前,否则还是会报错</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span> </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br></pre></td></tr></table></figure></li><li><p>(推荐)<br>第一种方法能够顺利解决问题,但是在实际的应用中,每次在使用到相关函数时,都需要在文件前面,或者在头文件中添加相关宏,未免太麻烦<br>所以,我们可以对vs的项目进行设置,可以一劳永逸的解决这个问题<br>注:(仅适用于当前项目,其他项目仍然需要再次进行相同配置才能生效)</p></li></ol><p>具体步骤如下:</p><ol><li>在项目属性设置中找到选项卡配置属性→C/C++→预处理器;</li><li>在右侧的参数中找到预处理器定义，编辑其参数;</li><li>在参数的末尾添加定义_CRT_SECURE_NO_WARNINGS</li></ol><p>图示:<br><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/html-illustration/This-function-or-variable-may-be-unsafe-jiejue01.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 报错 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言学习笔记</title>
      <link href="/2021/06/11/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2021/06/11/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="基本的输入和输出函数的用法"><a href="#基本的输入和输出函数的用法" class="headerlink" title="基本的输入和输出函数的用法"></a>基本的输入和输出函数的用法</h1><h2 id="printf的用法"><a href="#printf的用法" class="headerlink" title="printf的用法"></a>printf的用法</h2><p>printf() 输出 //重点<br>将变量的内容输出到显示器上</p><h3 id="输出控制符包含如下"><a href="#输出控制符包含如下" class="headerlink" title="输出控制符包含如下"></a>输出控制符包含如下</h3><pre><code>%d                  --  int%ld                 --  long int%c                  --  char%f                  --  float%lf                 --  double%x(或者%#x或者%#X)   --  int 或 long int 或 short int%o                  --  同上%s                  --  字符串</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">47</span>; <span class="comment">//47是十进制</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%x\n&quot;</span>, x);  <span class="comment">//输出结果是:   2f</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%X\n&quot;</span>, x);  <span class="comment">//输出结果是:   2F</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%#X\n&quot;</span>, x); <span class="comment">//输出结果是:   0X2F 推荐使用</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%#x\n&quot;</span>, x); <span class="comment">//输出结果是:   0x2f</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure><p><em>所以推荐使用%#X,因为当输出2f或2F容易与其他数字或进制混淆</em></p><pre><code>printf四种用法    1. printf(&quot;字符串\n&quot;);    2. printf(&quot;输出控制符&quot;,);    3. printf(&quot;输出控制符1 输出控制符2....&quot;, 输出参数1, 输出参数2, ....); 输出控制符和输出参数的个数必须一一对应    4. printf(&quot;输出控制符 非输出控制符&quot;, 输出参数);</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;哈哈!\n&quot;</span>);  <span class="comment">//\n表示换行 第一种用法</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,  i); <span class="comment">//第二种用法 i是输出参数,%d是控制符表示十进制</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//为什么10已经是十进制还要用%d输出?</span></span><br><span class="line">    <span class="comment">//因为i = 10存储的是10的二进制代码,必须指定二进制代码以什么类型的输出</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">5</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, j, k); <span class="comment">//第三种用法</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, j, k); <span class="comment">//error 输出控制符和输出参数的个数不匹配</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;i = %d, j = %d\n&quot;</span>, j k); <span class="comment">//第四种用法,提倡使用</span></span><br><span class="line">   </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="为什么需要输出控制符"><a href="#为什么需要输出控制符" class="headerlink" title="为什么需要输出控制符"></a>为什么需要输出控制符</h3><ol><li>01组成的代码可以表示数据也可以表示指令</li><li>如果01组成的代码表示的是数据的话,那么同样的01代码组合以不同的格式输出就会有不同的输出结果<br>所以需要输出控制符指定代码输出的格式</li></ol><h2 id="scanf的用法"><a href="#scanf的用法" class="headerlink" title="scanf的用法"></a>scanf的用法</h2><p>scanf() : 通过键盘将数据输入到变量中<br>scanf() 输入 //java已经没有<br>    两种用法:<br>        用法一:<br>        scanf(“输入控制符”, 输入参数);<br>        功能:   将从键盘输入的字符转化为输入控制符所规定格式的数据,然后存入以输入参数的值为地址的变量中<br>        用法二:<br>        scanf(“非输入控制符 输入控制符”, 输入参数);<br>        功能:   将从键盘输入的字符转化为输入控制符所规定格式的数据,然后存入以输入参数的值为地址的变量中<br>        非输入控制符必须原样输入</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;i);    <span class="comment">//&amp;i 表示i的地址 &amp;是一个取地址符 -- 一个地址对应一个内存空间, &amp;i相当于一个地址门牌号,scanf是将手输入的东西放到地址所对应的内存空间中</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;i = %d\n&quot;</span>, i);</span><br><span class="line">    <span class="comment">//为什么scanf也要%d?</span></span><br><span class="line">    <span class="comment">//因为操作系统接收键盘数据当成字符,不是整型数据</span></span><br><span class="line">    所以也需要%d转换成十进制</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>含有非输入控制符的用法： //类似邮箱后面必须加后缀@xxx.com</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;m%d&quot;</span>, &amp;i);   <span class="comment">//m123 正确的输入 123非法的输入</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;i = %d\n&quot;</span>,  i);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一次给多个变量赋值：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j, k;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入三个值, 中间以逗号分隔: &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d, %d, %d&quot;</span>, &amp;i, &amp;j, &amp;k);     </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;i = %d j = %d k = %d\n&quot;</span>, i, j, k);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>报错01: 原因:一个项目只能有一个main函数<br><img src="https://cdn.jsdelivr.net/gh/geyouyang/Tuchuang/html-illustration/c-p4201.png" alt="报错01"></p><p>解决:把另一个main改成main1或者换成别的项目</p><h3 id="如何使用scanf编写出高质量代码"><a href="#如何使用scanf编写出高质量代码" class="headerlink" title="如何使用scanf编写出高质量代码"></a>如何使用scanf编写出高质量代码</h3><ol><li>使用scanf之前最好先使用printf提示用户以什么样的方式来输入</li><li>scanf中尽量不要使用非输入控制符,尤其不要用\n</li><li>应该编写代码对用户的非法输入做适当的处理</li></ol><p>3例子:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//功能-对用户非法输入进行处理</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;i);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;i = %d\n&quot;</span>, i);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> ( (ch=getchar()) !=<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    <span class="keyword">int</span> j;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d,&quot;</span> &amp;j);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;j = %d\n&quot;</span>, j);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;     </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><p>算术运算符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+   -   *   /(除)   %(取余数)</span><br></pre></td></tr></table></figure><p>关系运算符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;   &gt;=(大于等于)  &lt;   &lt;=(小于等于)  !=(不等于)  ==(等于)</span><br></pre></td></tr></table></figure><p>逻辑运算符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">!(非)   &amp;&amp;(并且)    ||(或)</span><br><span class="line">!真     (假) //!相当于非的意思</span><br><span class="line">!假     (真)</span><br><span class="line">真&amp;&amp;真  (真)</span><br><span class="line">真&amp;&amp;假  (假)</span><br><span class="line">假&amp;&amp;真  (假)</span><br><span class="line">假&amp;&amp;假  (假)</span><br><span class="line"></span><br><span class="line">真||假  (真)</span><br><span class="line">假||真  (真)</span><br><span class="line">真||真  (真)</span><br><span class="line">假||假  (假)</span><br><span class="line"></span><br><span class="line">C语言对真假的处理</span><br><span class="line">    非零是真</span><br><span class="line">    零是假</span><br><span class="line"></span><br><span class="line">    真是1表示</span><br><span class="line">    假是0表示</span><br><span class="line"> </span><br><span class="line"> &amp;&amp;左边的表达式为假,右边的表达式肯定不会执行</span><br><span class="line"> ||左边的表达式为真,右边的表达式肯定不会执行   </span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">20</span>;</span><br><span class="line">    <span class="keyword">int</span> m;</span><br><span class="line"></span><br><span class="line">    m = (<span class="number">3</span>&gt;<span class="number">2</span>) &amp;&amp; (k=<span class="number">8</span>); <span class="comment">//判断真假m的值要么0要么1</span></span><br><span class="line">    <span class="comment">//返回结果:m = 1, k = 8 &amp;&amp;是并且的意思,有一个真则为真</span></span><br><span class="line">    m = (<span class="number">3</span>&gt;<span class="number">2</span>) &amp;&amp; (k=<span class="number">0</span>);</span><br><span class="line">    <span class="comment">//返回结果:m = 0, k = 0   k=0是假有一个假则为假     </span></span><br><span class="line">    m = (<span class="number">1</span>&gt;<span class="number">2</span>) &amp;&amp; (k=<span class="number">5</span>);</span><br><span class="line">    <span class="comment">//返回结果:m = 0, k = 20  因为&amp;&amp;左边的表达式为假,右边的表达式肯定不会执行</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;m = %d, k = %d\n&quot;</span>, m, k); </span><br><span class="line">    <span class="comment">//不含有分号的是表达式 含有分号的是语句</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">赋值运算符</span><br><span class="line">=   +=  *=  /=  -=</span><br><span class="line">a+=3相当于a=a+3</span><br><span class="line">a/3=3相当于a=a/3</span><br></pre></td></tr></table></figure><p>优先级别:<br>    算术&gt;关系&gt;逻辑&gt;赋值</p><p>int k = 3+2<em>4&amp;&amp;5||6-4+=6;<br>难全部记住,忘掉可翻书谭浩强C第四版p378页<br>别人无法判断优先级可加()提示<br>int k = (3+2</em>4) &amp;&amp; (5||6-4) * 6;</p><h3 id="除法与取余运算符"><a href="#除法与取余运算符" class="headerlink" title="除法与取余运算符"></a>除法与取余运算符</h3><ol><li>除法/的运算结果和运算对象的数据类型有关,两个数都是int,则商就是int,若商有小数,则截取小数部分;<br>被除数和除数中只要有一个或两个都是浮点型数据,则商也是浮点型,不截取小数部分</li></ol><ul><li>如:16/5==3    16/5.0==3.2000  -13/4==-4</li><li>13/-3==4  3/5==0  5/3==1</li><li>最典型的例题就是求s=1+1/2+1/3+1/4+1/5……+1/100的值,见下文</li></ul><ol start="2"><li>取余%的运算对象必须是整数,结果是整除后的余数,其余数的符号与被除数相同</li></ol><ul><li>如:   13%3==1     13%-3==1    -13%3==-1</li><li><pre><code>  -13%23==-13 3%5==3</code></pre></li></ul><p>测试取余运算符的例子</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d %d %d %d\n&quot;</span>,<span class="number">3</span>%<span class="number">3</span>,<span class="number">13</span>%<span class="number">-3</span>,<span class="number">-13</span>%<span class="number">3</span>,<span class="number">-13</span>%<span class="number">-3</span>,<span class="number">-13</span>%<span class="number">23</span>,<span class="number">3</span>%<span class="number">5</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//总结: 去余%的运算对象必须是整数,结果后是整除后的余数,其余数的符号与被除数相同</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="流程控制-是学习C语言的第一个重点"><a href="#流程控制-是学习C语言的第一个重点" class="headerlink" title="流程控制(是学习C语言的第一个重点)"></a>流程控制(是学习C语言的第一个重点)</h2><ul><li>什么是流程控制<br>  程序代码执行的顺序</li></ul><p>流程控制的分类</p><ol><li>顺序</li><li>选择<br> 定义:某些代码可能执行,也可能不执行,有选择的执行某些代码<br> 分类:<pre><code> if     1.if最简单的用法         格式:             if (表达式)                     语句         功能:             如果表达式为真,执行语句             如果表达式为假,语句不执行</code></pre></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">3</span> &gt; <span class="number">2</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;AAAA\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">输出结果:AAAA             </span><br><span class="line">                </span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">3</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;AAAA\n&quot;</span>);<span class="comment">//会输出</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;BBBB\n&quot;</span>);<span class="comment">//不会输出</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span> == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;CCCC\n&quot;</span>);<span class="comment">//会输出</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">输出结果:</span><br><span class="line">AAAA</span><br><span class="line">CCCC</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>        2.if的范围问题            1.                if (表达式)                    语句A;                    语句B;                解释:if默认只能控制语句A的执行或不执行                     if无法控制语句B的执行或不执行                     或者讲:语句B一定会执行                2.                if (表达式)                &#123;                    语句A;                    语句B;                &#125;                此时if可以控制语句A和语句B                        总结:if默认只能控制一个语句的执行或者不执行,如果想控制多个语句的执行或不执行就必须把这些语句用&#123;&#125;括起来</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">1</span> &gt; <span class="number">2</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;AAAA\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;BBBB\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">输出结果:BBBB</span><br><span class="line"></span><br><span class="line">总结:</span><br><span class="line">    <span class="keyword">if</span>默认的只能控制一个语句的执行或不执行</span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">4</span> &gt; <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;AAAA\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;BBBB\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;CCCC\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    输出结果:</span><br><span class="line">    AAAA</span><br><span class="line">    BBBB</span><br><span class="line">    CCCC</span><br><span class="line"></span><br><span class="line">    总结:如果想控制多个语句的执行或不执行就必须把这些语句用&#123;&#125;括起来</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>        3.if..else...的用法 //如果...否则...</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;i, &amp;j);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> (i &gt; j)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;i大于j\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="comment">//否则</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;i小于j\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">输入<span class="number">1</span> <span class="number">2</span></span><br><span class="line">输出i小于j</span><br><span class="line">输入<span class="number">2</span> <span class="number">1</span></span><br><span class="line">输出i大于j</span><br></pre></td></tr></table></figure><pre><code>        4.if..else if...else...的用法            格式:                if (1)  //如果1成立执行A                    A;                else if (2) //如果1不成立2成立执行B                    B;                else if (3) //如果1,2不成立3成立执行C                    C;                else    //如果1,2,3都不成立执行D                    D;</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//if..else if...else...的用法例子</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">double</span> delta = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (delta &gt; <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;有两个解!\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (delta == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;有一个唯一解!\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;无解!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">输出:无解!</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>        5.C语言对真假的处理            非零是真            零就是假            真用1表示            假用零表示        6.if举例--求分数的等级</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">功能:对分数进行分类</span><br><span class="line">如: <span class="number">90</span>~<span class="number">100</span> 优秀</span><br><span class="line">    <span class="number">80</span>~<span class="number">90</span> 良好</span><br><span class="line">    <span class="number">60</span>~<span class="number">80</span> 及格</span><br><span class="line">    <span class="number">0</span>~<span class="number">60</span>  不及格</span><br><span class="line">用 <span class="keyword">if</span>...<span class="keyword">else</span>..<span class="keyword">if</span>..<span class="keyword">else</span>    </span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> score; <span class="comment">//第一步先定义变量,用float不用int是因为分数可能有小数点.定义变量应有意义-score英文意思是分数</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入您的考试成绩: &quot;</span>); <span class="comment">//提示用户输入信息</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;score); <span class="comment">//%f(十进制浮点数)输入控制符,取地址score</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (score &gt; <span class="number">100</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;满分100分,这是做梦!\n&quot;</span>);</span><br><span class="line">    <span class="comment">//数学表达式不能直接用于计算机编程 郝斌C语言p59  8min~</span></span><br><span class="line">    <span class="comment">//例如:表达90~100</span></span><br><span class="line">    <span class="comment">//90&lt;=score&lt;=100 因为90&lt;=score是逻辑表达式,返回值是0或1,永远小于100,所以整个表达式永远为真.所以是错误的.</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (score&gt;=<span class="number">90</span> &amp;&amp; score&lt;=<span class="number">100</span>) <span class="comment">//不能写成 90&lt;=score&lt;=100</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;优秀!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (score&gt;=<span class="number">80</span> &amp;&amp; score&lt;<span class="number">90</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;良好!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (score&gt;=<span class="number">60</span> &amp;&amp; score&lt;<span class="number">80</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;及格!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (score&gt;=<span class="number">0</span> &amp;&amp; score&lt;<span class="number">60</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;不及格!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;您输入的分数不合法!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">运行:请输入您的考试成绩:</span><br><span class="line">输入:<span class="number">100</span></span><br><span class="line">输出:优秀!</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>if例子1-互换两个数字</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//功能:互换两个数字</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">int</span> t;  <span class="comment">//定义临时变量</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// i = j;  //因为把i赋值给j,又把j赋值给i,所以i=5,j=5无法完成i和j的互换</span></span><br><span class="line">    <span class="comment">// j = i;   //两个杯子一杯装有可乐,一杯装有雪碧,需要互换饮料,则需要另外一个杯子,所以需要再定义一个变量才能互换.</span></span><br><span class="line">        t = i;</span><br><span class="line">        i = j;</span><br><span class="line">        j = t;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;i = %d, j = %d\n&quot;</span>, i, j);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">输出结果:i = <span class="number">5</span>, j = <span class="number">3</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//功能:对任意三个数字的排序</span></span><br><span class="line"><span class="comment">//思路:用a和后面所有数字对比,比a大的和a互换,则a一定是最大值.再用b和后面所有数字比,然后和b互换,这样b就是次大值,再用c....</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b, c; <span class="comment">//等价于: int a; int b; int c;</span></span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入三个整数(中间以空格分隔):&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>  (a &lt; b)</span><br><span class="line">    &#123;</span><br><span class="line">        t = a;</span><br><span class="line">        a = b;</span><br><span class="line">        b = t;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (a &lt; c)</span><br><span class="line">    &#123;</span><br><span class="line">        t = a;</span><br><span class="line">        a = c;</span><br><span class="line">        c = t;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (b &lt; c)</span><br><span class="line">    &#123;</span><br><span class="line">        t = b;</span><br><span class="line">        b = c;</span><br><span class="line">        c = t;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//编写代码完成a是最大值,b是中间值,c是最小值</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d\n&quot;</span>, a, b, c);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">输入:<span class="number">334</span> <span class="number">999</span> <span class="number">666</span></span><br><span class="line">输出:<span class="number">999</span> <span class="number">666</span> <span class="number">334</span></span><br></pre></td></tr></table></figure><pre><code>        7.if的常见问题解析            1. 空语句的问题                if (3 &gt; 2);                等价于                if (3 &gt; 2)                    ;   //这是一个空语句            2.                if (表达式1)                    A;                else                    B;                是正确的                if (表达式1);   //←不能加分号,加了之后if执行空语句,而没有else开头的语句,所以会报错                    A;                else                    B;                    是错误的            3.                if (表达式1)                    A;                else if (表达式2)                    B;                else if (表达式3)                    C;                else                    D;                即便表达式1和2都成立,也只会执行A语句            4.                 if (表达式1)                    A;                else if (表达式2)                    B;                else if (表达式3)                    C;                //删掉else,这样写语法不会出错,但逻辑上有漏洞            5.                 if (表达式1)                    A;                else if (表达式2)                    B;                else if (表达式3)                    C;                else (表达式4)  //if不能省略否则出错                    D;                这样写是不对的,正确的写法是:                    要么去掉(表达式4)                    要么在else 后面加if            6.                if (表达式1)                    A;                else if (表达式2)                    B;                else if (表达式3)                    C;                else (表达式4);  //←加了分号逻辑会错误                    D;                                这样写语法不会出错,但逻辑上是错误的                else (表达式4);                    D;                等价于                else                    (表达式4);                D;    switch语句</code></pre><ol start="3"><li>循环</li></ol><h3 id="流程控制的重要性"><a href="#流程控制的重要性" class="headerlink" title="流程控制的重要性"></a>流程控制的重要性</h3><ol><li>第一个原因:C语言演化的语言:C++,java,c#学习的流程控制都是一样的,学了之后类C语言也需要用到</li><li>第二个原因:因为程序运用三种做法:循序,选择还有循环可以解决现实所有问题.</li><li>第三个原因:学懂流程控制才能看懂程序看懂代码,才能成功学会语言</li></ol><h3 id="学习C语言常见误区-如何看懂一个程序-如何掌控一个程序"><a href="#学习C语言常见误区-如何看懂一个程序-如何掌控一个程序" class="headerlink" title="学习C语言常见误区:如何看懂一个程序 如何掌控一个程序"></a>学习C语言常见误区:如何看懂一个程序 如何掌控一个程序</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">程序题目:</span><br><span class="line">判断一个数字是否是素数</span><br><span class="line"></span><br><span class="line">判断一个数字是否是回文数 例(124421):</span><br><span class="line"></span><br><span class="line">编程实现求一个十进制数字的二进制形式</span><br><span class="line"></span><br><span class="line">求一个数字的每位是奇数的数字取出来组合形成的新数字</span><br><span class="line"></span><br><span class="line">求一个数字倒出来的数字</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><em>以上题目大多数初学者往往想一天都想不出来,因为需要算法知识</em><br>所以导致大多数初学者,学编程没有成就感,容易受挫半途而废<br><em>解决办法:想太久没头绪直接放弃,看答案,看懂答案,看懂程序然后模仿,用自己的想法改造程序,最后加深对程序的理解,以后遇到类似的问题就游刃有余.</em><br>所以看懂程序是非常重要的,这个也是我们学习的重点,看懂之后尝试自己去修改程序<br>并且知道修改之后程序的不同输出结果的含义.<br>然后照着答案去敲,调试错误,然后不看答案,自己独立敲出来</p><p>那么如何看懂一个程序,分三步:(B站郝斌C语言p62)</p><ol><li>流程</li><li>每个语句的功能</li><li>试数</li></ol>]]></content>
      
      
      <categories>
          
          <category> C语言基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言前置知识</title>
      <link href="/2021/05/07/C%E8%AF%AD%E8%A8%80%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86/"/>
      <url>/2021/05/07/C%E8%AF%AD%E8%A8%80%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h1><h2 id="什么是数据类型"><a href="#什么是数据类型" class="headerlink" title="什么是数据类型"></a>什么是数据类型</h2><pre><code>基本类型数据    整数        整型        -- int          --4        短整型      -- short int    --2        长整型      -- long int     --8    浮点数[实数]        单精度浮点数 -- float   --4        双精度浮点数 -- double  --8    字符        char                   --1复合类型数据    结构体    枚举    共用体</code></pre><h2 id="变量为什么要初始化-重点"><a href="#变量为什么要初始化-重点" class="headerlink" title="变量为什么要初始化?(重点)"></a>变量为什么要初始化?(重点)</h2><p>变量的本质就是内存中一段存储空间<br>初始化就是赋值的意思</p><p>因为一个软件所分配的空间中极可能存在以前其他软件使用过后的残留数据,这些数据被称之为垃圾数据<br>所以通常情况下我们为一个变量,为一个数组,分配好存储空间之后都要对该内存空间初始化</p><h2 id="如何定义变量"><a href="#如何定义变量" class="headerlink" title="如何定义变量"></a>如何定义变量</h2><pre><code>    数据类型    变量名 = 要赋的值;等价于    数据类型    变量名;    变量名 = 要赋的值;例如:    int i = 3;            等价于 int i; i = 3;    int i, j;             等价于 int i; int j;    int i, j=3;           等价于 int i; int j; j = 3;    int i = 3, j = 5;     等价于 int i; int j; i = 3; j = 5;    int i, j ; i = j = 5; 等价于 int i, j; i = 5; j = 5;</code></pre><h2 id="什么是进制"><a href="#什么是进制" class="headerlink" title="什么是进制?"></a>什么是进制?</h2><pre><code>十进制逢十进一    例:0123456789二进制逢二进一    例:00101000n进制逢n进一</code></pre><h2 id="常量在C语言中是如何表示的"><a href="#常量在C语言中是如何表示的" class="headerlink" title="常量在C语言中是如何表示的?"></a>常量在C语言中是如何表示的?</h2><pre><code>整数        十进制:     传统的写法        十六进制:   前面加0x或0X        八进制:     前面0   注意是数字零不是字母o浮点数        传统的写法            float x = 3.2;//传统                科学计数法            float x = 3.2e3; //x的值是 3200            float x = 123.45e-2; //x的值是1.2345,警告则在最后加F字符        单个字符用单引号括起来            &#39;A&#39;表示字符A            &#39;AB&#39; 错误            &quot;AB&quot; 正确        字符串用双引号括起来            &quot;A&quot;正确,因为&quot;A&quot;代表了 &#39;A&#39;&#39;\0&#39; 的组合</code></pre><h2 id="常量以什么样的二进制代码存储在计算机中"><a href="#常量以什么样的二进制代码存储在计算机中" class="headerlink" title="常量以什么样的二进制代码存储在计算机中?"></a>常量以什么样的二进制代码存储在计算机中?</h2><pre><code>整数是以补码的形式转化为二进制代码存储在计算机中的实数是以IEEE754标准转化为二进制代码存储在计算机中的字符的本质实际也是与整数的存储方式相同</code></pre><h2 id="代码规范化-重点"><a href="#代码规范化-重点" class="headerlink" title="代码规范化(重点)"></a>代码规范化(重点)</h2><ul><li>好的代码规范能使代码的可读性更强,程序更不容易出错</li><li>写注释非常重要,至少占代码量的三分之一</li><li>注意缩进</li><li>成对的敲:例如(),要把两边括号都敲出来再敲中间代码</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (asda(sadsa(asdsada)))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (sadsadsadsa(asdsad))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (zaasda(asdsadsa))</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">if</span> (sadsadadsadsa(sadsada))   </span><br><span class="line">       </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="什么是字节"><a href="#什么是字节" class="headerlink" title="什么是字节?"></a>什么是字节?</h2><pre><code>字节就是存储数据的单位,并且是硬件所能访问的最小单位1字节 = 8位1K = 1024字节1M = 1024k1G = 1024M1T = 1024G</code></pre><h2 id="字符的存储-字符本质上与整数的存储方式相同"><a href="#字符的存储-字符本质上与整数的存储方式相同" class="headerlink" title="字符的存储 [字符本质上与整数的存储方式相同]"></a>字符的存储 [字符本质上与整数的存储方式相同]</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;studio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="string">&#x27;A&#x27;</span>; <span class="comment">// OK</span></span><br><span class="line"><span class="comment">//  char ch = &quot;AB&quot;; //error 因为&quot;AB&quot;是字符串,我们不能把字符串赋给单个字符</span></span><br><span class="line"><span class="comment">//  char ch = &quot;A&quot;; //error</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//  char ch = &#x27;AB&#x27;; //&#x27;AB&#x27;是错误的,单引号只能括单个字符    </span></span><br><span class="line">    <span class="keyword">char</span> ch = <span class="string">&#x27;B&#x27;</span>; <span class="comment">//error,因为ch变量已经定义了,这样会导致变量名被重复定义</span></span><br><span class="line">    ch = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c\m&quot;</span>, ch);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="什么是ASCII"><a href="#什么是ASCII" class="headerlink" title="什么是ASCII?"></a>什么是ASCII?</h2><p>ASCII不是一个值,而是一种规定,ASCII规定了不同的字符是使用哪个整数值去表示.<br>它规定了<br>        ‘A’ – 65<br>        ‘B’ – 66<br>        ‘a’ – 97<br>        ‘b’ – 98<br>        ‘0’ – 48</p><h2 id="如何编写出更有价值保存价值和更有学习价值的程序"><a href="#如何编写出更有价值保存价值和更有学习价值的程序" class="headerlink" title="如何编写出更有价值保存价值和更有学习价值的程序"></a>如何编写出更有价值保存价值和更有学习价值的程序</h2><p>多写备注,写出程序的目的和功能,加上时间.</p>]]></content>
      
      
      <categories>
          
          <category> C语言基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
